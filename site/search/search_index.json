{
    "docs": [
        {
            "location": "/", 
            "text": "MDS - EPS\n\n\n\u201cThe best way to find out if you can trust somebody is to trust them.\u201d Ernest Hemingway", 
            "title": "Home"
        }, 
        {
            "location": "/#mds-eps", 
            "text": "\u201cThe best way to find out if you can trust somebody is to trust them.\u201d Ernest Hemingway", 
            "title": "MDS - EPS"
        }, 
        {
            "location": "/Projetos----Temas/", 
            "text": "Projetos MDS/EP:\n\n\n2018.1 Uso de conceitos de Data Science\n\n\n A disciplina MDS/GPP ter\u00e1 tema \u00fanico: Data Science. Os temas ser\u00e3o avaliados/apresentados na segunda aula do semestre para aprova\u00e7\u00e3o do projeto.\n\n\n\nAs \u00e1reas de interesse s\u00e3o:\n\n\n\n\nSa\u00fade\n\n\nCultura\n\n\nSoftware\n\n\n\n\nTemas sugeridos (os times podem sugerir temas, para serem avaliados. solu\u00e7\u00f5es mobiles ser\u00e3o privilegiados):\n\n\n\n\n\n\n[ ] Falko BI - Sistema de BI para avaliar/acompanhar projetos de software livre (m\u00e9tricas/indicadores/sistema de recomenda\u00e7\u00e3o). Fonte de dados: Github.\n\n\n\n\n\n\n[ ] Gest\u00e3o de Leitos BI - Sistema de BI para analisar/acompanhar/gerir leitos em hospitais  p\u00fablicos. Fonte de dados: Dados da secretaria de sa\u00fade do DF\n\n\n\n\n\n\n[ ] Gest\u00e3o de Interna\u00e7\u00f5es cir\u00fargicas (alarme al\u00e9rgico) - escopo ainda a ser definido\n\n\n\n\n\n\n[ ] Dengue BI - monitoramento dos casos de dengue (por localidade), mapa hist\u00f3rico da evolu\u00e7\u00e3o/avan\u00e7o da dengue. Sistema de predi\u00e7\u00e3o de epidemias a partir de dados clim\u00e1ticos em tempo real. Dados: banco hist\u00f3rico de casos confirmados de dengue no brasil/bras\u00edlia, banco hist\u00f3rico dos dados clim\u00e1ticos. Obs: o algoritmo de predi\u00e7\u00e3o ser\u00e1 disponibilizado.\n\n\n\n\n\n\n[ ] App AGR BI- app (2 grupos: dev nativo e h\u00edbrido) BI para an\u00e1lise/monitoramento de indicadores da sa\u00fade p\u00fablica regional (DF). Objetivo: realizar benchmark do desempenho de app nativos vs hibrido no acesso aos recursos de hardware.\n\n\n\n\n\n\n[x] \"Jogo\" para reabilita\u00e7\u00e3o motora de pacientes com AVC. Prot\u00f3tipo dispon\u00edvel, algoritmos implementados em Python (boa implementa\u00e7\u00e3o), documenta\u00e7\u00e3o t\u00e9cnica dispon\u00edvel (requisitos bem definidos). Unity3D, python, processamento real-time/paralelo. Coach experiente nas tecnologias.\n\n\n\n\n\n\n[ ] Dr. Down - plataforma para gest\u00e3o de pacientes infantis (pedi\u00e1trico) com sindrome de down. Escopo a ser definido.\n\n\n\n\n\n\n[ ] Aplicativo lei rouanet - salic (projeto com design)\n\n\n\n\n\n\n[ ] Cidades Inteligentes - escopo a ser definido\n\n\n\n\n\n\n[ ] \"Serenata de Amor\" Lei Rouanet - escopo a ser definido.\n\n\n\n\n\n\n[ ] Benchmark de aplicativos mobile nativo vs hibrido - desenvolvimento de uma ferramenta para monitorar a execu\u00e7\u00e3o de apps mobile tanto nativo quanto hibrido (tempo de acesso \u00e0 hardware - c\u00e2mera, GPS, Bluetooth, tempo de execu\u00e7\u00e3o de funcionalidades similares nas duas implementa\u00e7\u00f5es). \n\n\n\n\n\n\nFerramenta de fixa\u00e7\u00e3o de aprendizado\n\n\n\n\nProblema\n\n\nAprender algo novo n\u00e3o \u00e9 uma tarefa simples, principalmente porque o nosso\ncerebro n\u00e3o absorve todo o conte\u00fado de uma vez. Mesmo quando algo novo \u00e9\naprendido, nos facilmente esquecemos como a curva de esquecimento de Ebbinghaus\ndemonstra [1]. V\u00e1rios estudos mostram que \u00e9 preciso realizar uma s\u00e9rie de\nrevis\u00f5es em diferentes momentos para tornar o conhecimento permanente e que\nexistem v\u00e1rias coisas que s\u00e3o importantes de serem feitas para otimizar a\nabsor\u00e7\u00e3o de novos conte\u00fados.\n\n\nExistem dezenas de aplicativos na internet que auxiliam o estudande a organizar\na sua agenda de estudos. Contudo, poucos que auxiliam na fixa\u00e7\u00e3o de\nconhecimentos para longo prazo.\n\n\nIdeia\n\n\nCriar um aplicativo que permita ao estudante gerenciar a sua fixa\u00e7\u00e3o de\nconte\u00fado. O aplicativo deve ter mec\u00e2nismos que permita ao estudante cadastrar\num novo conte\u00fado estudado, ent\u00e3o o app passa a ser respons\u00e1vel por gerir as\nrevis\u00f5es do do assunto. Por exemplo, se o aluno acabou de aprender como o\nescalador round-robin funciona, ent\u00e3o o app monta a agenda de revis\u00e3o da\nseguinte forma:\n\n\n\n\nRevis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 3 horas;\n\n\nRevis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 dia;\n\n\nRevis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 semana;\n\n\nRevis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 m\u00eas;\n\n\nRevis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 3 meses.\n\n\n\n\nO app deve notificar o aluno quando o per\u00edodo de revisar estiver pr\u00f3ximo (algo\ncomo as notifica\u00e7\u00f5es do google agenda e do whatapp). Por fim, o app deve permitir\nconfigurar diferentes modos de aprendizado, por exemplo:\n\n\n\n\nModo memorizar;\n\n\nAprender r\u00e1pido;\n\n\nAprendizado longo mas permanente;\n\n\netc\n\n\n\n\nAl\u00e9m disso, o app pode ter um controle de round de revis\u00e3o na qual o aluno \u00e9\nincentivado a fazer coisas que podem potencializar o estudo dele durante a revis\u00e3o.\n\n\nDe forma bem grosseira, tem dois v\u00eddeos no youtube que d\u00e3o uma orienta\u00e7\u00e3o dos\nrequisistos para a parte de agendar aprendizado e para a parte de coisas\nnecess\u00e1rias para potencializar o estudo:\n\n\n\n\nSobre fixar conte\u00fado: https://www.youtube.com/watch?v=mHdy1xS59xA\nt=\n\n\nSobre melhorar potencializar o aprendizado: https://www.youtube.com/watch?v=mHdy1xS59xA\nt=\n\n\n\n\n[1] https://en.wikipedia.org/wiki/Forgetting_curve\n\n\nFerramenta de controle de gasto de tempo com coisas n\u00e3o esperadas\n\n\n\n\nProblema\n\n\nDurante a o nosso dia dia, temos diversas tarefas para serem cumpridas.\nInfelizmente, em torno das tarefas importantes muitas vezes temos outras\ntarefas que n\u00e3o te levam diretamente a concluir o que voc\u00ea precisa mas por\nalgum motivo precisam ser executada. Por exemplo, uma pessoa tem que terminar o\nrelat\u00f3rio mas o chefe constantemente pede para que a mesma pessoa fa\u00e7a uma\ntarefa perif\u00e9ricas (como carimbar papeis) e a pessoa acaba perdendo um tempo\nimportante com outra tarefa. Outro exemplo, \u00e9 o de uma pessoa que quer malhar\nmas tem um tempo grande gasto com o deslocamento. Para facilitar a discuss\u00e3o,\nchamamos isto de \"Overhead\".\n\n\nO grande problema relacionado aos overheads \u00e9 que as pessoas normamente n\u00e3o\ncompreendem quanto tempo foi gasto com coisa n\u00e3o t\u00e3o relevantes para a\nconclus\u00e3o da tarefa. Contudo, como medir tal tempo? Como manter um hist\u00f3rico do\ntempo gasto de forma n\u00e3o produtiva por for\u00e7as externas?\n\n\nIdeia\n\n\nCriar um aplicativo que permita ao usu\u00e1rio registrar o tempo perdido em uma\ntarefa. O princ\u00edpal requisito \u00e9 o r\u00e1pido registro; este deve ser simples e deve\nrealizado de forma r\u00e1pida, ou seja, sem overheads. O usu\u00e1rio pode criar algumas\ncategorias gerais a princ\u00edpio, como por exemplo: faculdade, trabalho, fam\u00edlia,\netc. O usu\u00e1rio pode inserir o tempo total gasto no overhead, como tamb\u00e9m pode\niniciar e parar um cron\u00f4metro.\n\n\nControlar promessas de ano novo\n\n\n\n\nProblema\n\n\nTodo ano \u00e9 a mesma hist\u00f3ria. As pessoas fazem milh\u00f5es de promessas com a\nesperan\u00e7a de ter um ano melhor do que o anterior. Contudo, quase sempre o\nresultado \u00e9 o mesmo: promessas n\u00e3o realizadas. Muitas vezes as pessoas esquecem\no objetivo que tinham definido ou at\u00e9 mesmo lembram mas s\u00e3o objetivos t\u00e3o\ngrandes que a pessoa fica desistimulada.\n\n\nIdeia\n\n\nCriar um app que permita ao usu\u00e1rio registrar as suas promessas de ano novo. O\napp deve permitir criar uma tarefa maior e subtarefas pertencentes a promessa\nmaior. Durante o ano, o usu\u00e1rio \u00e9 lembrado das promessas registradas. Caso o\nusu\u00e1rio consiga cumprir a promessa, ele pode compartilhar nas redes sociais de\nforma a estimular o mesmo a continuar. O usu\u00e1rio tamb\u00e9m pode ir criando\nsubtarefas ao longo do ano para atingir o seu objetivo maior.\n\n\nAl\u00e9m disto, o app deve contar com um sistema de \"ranking\" na qual cada tarefa\nconclu\u00edda rende pontos para os usu\u00e1rios. No final, deve haver um rank com todos\nos usu\u00e1rios classifcados de acordo com a sua pontua\u00e7\u00e3o. Seria interessante se o\nusu\u00e1rio tivesse a flexibilidade de mudar a promessa, mas isso custaria alguns\npontos.\n\n\n2017.2 Uso de conceitos de Data Science\n\n\n A disciplina MDS/GPP ter\u00e1 tema \u00fanico: Data Science. As equipes s\u00e3o respons\u00e1veis por desenvolver pelo menos 2 propostas de projetos de software no tema (pelo menos 1 dos temas deve estar entre os propostos pela professora). Os temas ser\u00e3o apresentados na sala de aula para aprova\u00e7\u00e3o do projeto.\n\n\n\nAlgumas \u00e1reas de interesse s\u00e3o:\n\n\n\n\nEduca\u00e7\u00e3o/merenda escolar\n\n\nSa\u00fade\n\n\n\n\nOs temas propostos 2017.2\n\n\n\n\nSistema de gest\u00e3o de infraestrutura de rede metropolitana\n\n\n\n\ncliente: Giga candanga - prof. Lazarte (llazarte@unb.br, pa@pauloangelo.com)\n\n\n\n\n\n\nWeb monitoramento de indicadores culturais \n\n\n\n\nContato: Nitai (coodenador TI minist\u00e9rio da cultura) - nitai.silva@cultura.gov.br\n\n\nPalavras-chave: Business Intelligence\n\n\n\n\n\n\n\n\nAplicativos multiplataformas/ webapp para Conselheiros da Merenda Escolar - Cliente: TCU (Minimo 2 grupos)\n\nhttp://portal.tcu.gov.br/imprensa/noticias/cartilha-do-tcu-e-fnde-vai-ajudar-na-fiscalizacao-da-merenda-escolar.htm\n\n\n\n\nPalavras-chave: atender a 70.000 potenciais usu\u00e1rios (armazenamento e processamento dos dados). Uso da nuvem civica\n\n\nContato: Marcela de Oliveira Timoteo  (assessora secret\u00e1rio da educa\u00e7\u00e3o) - marcela.timoteo@tcu.gov.br\n\n\n\n\n\n\n\n\nMe representa - auxiliar o eleitor brasileiro a decidirm de forma refletida e individual, seu voto nas pr\u00f3ximas elei\u00e7\u00f5es do legislativo nacional. App que cruze dados sobre o comportamento de deputdo federais e senadores nas principais vota\u00e7\u00f5es realizadas na camara e no senado nos ultimos anos.\n\n\n\n\ncliente Elida Silpe (BH) - elidasilpe@gmail.com\n\n\n\n\n\n\n\n\nSistema de monitoramento e controle de projetos de software livre\n\n\n\n\nCliente: GPP/MDS - Contato: Jo\u00e3o Guilherme Silva \n\n\nPalavras-chave: Sistema BI - identificar anomalias, gerar indicadores/metricas em tempo real\n\n\nSmart Triagem pedi\u00e1trica\n\n\nCliente:  Dr. Get\u00falio Morato (medico pediatra)- drgetulio@clinimeta.com\n\n\n\n\nPalavras-chave: webapp, arvore de decis\u00f5es, \n\n\n\n\n\n\nsmart Receituario eletr\u00f4nico \n\n\n\n\nCliente:  Dr. Get\u00falio Morato (medico pediatra)- drgetulio@clinimeta.com\n\n\nPalavras-chave: webapp, arvore de decis\u00f5es, big data\n\n\n\n\n\n\nOs temas de 2017.1 foram\n\n\nAlgumas propostas de interesse s\u00e3o:\n\n\n\n\nPlataforma de Minicursos abertos UnB -  cliente: laborat\u00f3rio lappis\n\n\nPlataforma de Sugest\u00f5es de Software UnB - cliente: laborat\u00f3rio lappis \n\n\nPlataforma de Jogos UNB - clientes: prof. Edson/Prof Tiago (desenho industrial)\n\n\nInfraestrutura para contribui\u00e7\u00e3o dos jogos UnB - Cliente: prof. Edson (https://github.com/fgagamedev)\n\n\nAcompanhamento da presen\u00e7a e rendimento do aluno - cliente: Escola X (Attany)\n\n\nAplicativo 300 -  cliente: Prof. Fragelli\n\n\nAplicativo - web -- sistema de localiza\u00e7\u00e3o no campus darcy ribeiro - cliente: CPD Central \n\n\n\n\nPropostas de projetos de software demandados pela UNB:\n\n\n\n\nSistema de Controle de cirurgia laparosc\u00f3pica minimamente invasiva (software cr\u00edtico e tolerante a falha) - cliente: laborat\u00f3rio Lara UNB. (\nhttps://github.com/lara-unb\n)\n\n\nSimulador bike reabilita\u00e7\u00e3o - cliente: laborat\u00f3rios LART/LARA UNB\n\n\nJogo labirintos urbanos - cliente:  Laborat\u00f3rio Transdisciplinar de Cenografia da UnB (\nhttp://laboratoriodecenografia.blogspot.com.br/\n)\n\n\nPlataforma para projetos de cadernos digitais - cliente:  Laborat\u00f3rio Transdisciplinar de Cenografia da UnB (\nhttp://laboratoriodecenografia.blogspot.com.br/\n)", 
            "title": "Temas"
        }, 
        {
            "location": "/Projetos----Temas/#projetos-mdsep", 
            "text": "", 
            "title": "Projetos MDS/EP:"
        }, 
        {
            "location": "/Projetos----Temas/#20181-uso-de-conceitos-de-data-science", 
            "text": "A disciplina MDS/GPP ter\u00e1 tema \u00fanico: Data Science. Os temas ser\u00e3o avaliados/apresentados na segunda aula do semestre para aprova\u00e7\u00e3o do projeto.  As \u00e1reas de interesse s\u00e3o:   Sa\u00fade  Cultura  Software   Temas sugeridos (os times podem sugerir temas, para serem avaliados. solu\u00e7\u00f5es mobiles ser\u00e3o privilegiados):    [ ] Falko BI - Sistema de BI para avaliar/acompanhar projetos de software livre (m\u00e9tricas/indicadores/sistema de recomenda\u00e7\u00e3o). Fonte de dados: Github.    [ ] Gest\u00e3o de Leitos BI - Sistema de BI para analisar/acompanhar/gerir leitos em hospitais  p\u00fablicos. Fonte de dados: Dados da secretaria de sa\u00fade do DF    [ ] Gest\u00e3o de Interna\u00e7\u00f5es cir\u00fargicas (alarme al\u00e9rgico) - escopo ainda a ser definido    [ ] Dengue BI - monitoramento dos casos de dengue (por localidade), mapa hist\u00f3rico da evolu\u00e7\u00e3o/avan\u00e7o da dengue. Sistema de predi\u00e7\u00e3o de epidemias a partir de dados clim\u00e1ticos em tempo real. Dados: banco hist\u00f3rico de casos confirmados de dengue no brasil/bras\u00edlia, banco hist\u00f3rico dos dados clim\u00e1ticos. Obs: o algoritmo de predi\u00e7\u00e3o ser\u00e1 disponibilizado.    [ ] App AGR BI- app (2 grupos: dev nativo e h\u00edbrido) BI para an\u00e1lise/monitoramento de indicadores da sa\u00fade p\u00fablica regional (DF). Objetivo: realizar benchmark do desempenho de app nativos vs hibrido no acesso aos recursos de hardware.    [x] \"Jogo\" para reabilita\u00e7\u00e3o motora de pacientes com AVC. Prot\u00f3tipo dispon\u00edvel, algoritmos implementados em Python (boa implementa\u00e7\u00e3o), documenta\u00e7\u00e3o t\u00e9cnica dispon\u00edvel (requisitos bem definidos). Unity3D, python, processamento real-time/paralelo. Coach experiente nas tecnologias.    [ ] Dr. Down - plataforma para gest\u00e3o de pacientes infantis (pedi\u00e1trico) com sindrome de down. Escopo a ser definido.    [ ] Aplicativo lei rouanet - salic (projeto com design)    [ ] Cidades Inteligentes - escopo a ser definido    [ ] \"Serenata de Amor\" Lei Rouanet - escopo a ser definido.    [ ] Benchmark de aplicativos mobile nativo vs hibrido - desenvolvimento de uma ferramenta para monitorar a execu\u00e7\u00e3o de apps mobile tanto nativo quanto hibrido (tempo de acesso \u00e0 hardware - c\u00e2mera, GPS, Bluetooth, tempo de execu\u00e7\u00e3o de funcionalidades similares nas duas implementa\u00e7\u00f5es).", 
            "title": "2018.1 Uso de conceitos de Data Science"
        }, 
        {
            "location": "/Projetos----Temas/#ferramenta-de-fixacao-de-aprendizado", 
            "text": "", 
            "title": "Ferramenta de fixa\u00e7\u00e3o de aprendizado"
        }, 
        {
            "location": "/Projetos----Temas/#problema", 
            "text": "Aprender algo novo n\u00e3o \u00e9 uma tarefa simples, principalmente porque o nosso\ncerebro n\u00e3o absorve todo o conte\u00fado de uma vez. Mesmo quando algo novo \u00e9\naprendido, nos facilmente esquecemos como a curva de esquecimento de Ebbinghaus\ndemonstra [1]. V\u00e1rios estudos mostram que \u00e9 preciso realizar uma s\u00e9rie de\nrevis\u00f5es em diferentes momentos para tornar o conhecimento permanente e que\nexistem v\u00e1rias coisas que s\u00e3o importantes de serem feitas para otimizar a\nabsor\u00e7\u00e3o de novos conte\u00fados.  Existem dezenas de aplicativos na internet que auxiliam o estudande a organizar\na sua agenda de estudos. Contudo, poucos que auxiliam na fixa\u00e7\u00e3o de\nconhecimentos para longo prazo.", 
            "title": "Problema"
        }, 
        {
            "location": "/Projetos----Temas/#ideia", 
            "text": "Criar um aplicativo que permita ao estudante gerenciar a sua fixa\u00e7\u00e3o de\nconte\u00fado. O aplicativo deve ter mec\u00e2nismos que permita ao estudante cadastrar\num novo conte\u00fado estudado, ent\u00e3o o app passa a ser respons\u00e1vel por gerir as\nrevis\u00f5es do do assunto. Por exemplo, se o aluno acabou de aprender como o\nescalador round-robin funciona, ent\u00e3o o app monta a agenda de revis\u00e3o da\nseguinte forma:   Revis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 3 horas;  Revis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 dia;  Revis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 semana;  Revis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 1 m\u00eas;  Revis\u00e3o: pr\u00f3xima revis\u00e3o para 3 daqui a 3 meses.   O app deve notificar o aluno quando o per\u00edodo de revisar estiver pr\u00f3ximo (algo\ncomo as notifica\u00e7\u00f5es do google agenda e do whatapp). Por fim, o app deve permitir\nconfigurar diferentes modos de aprendizado, por exemplo:   Modo memorizar;  Aprender r\u00e1pido;  Aprendizado longo mas permanente;  etc   Al\u00e9m disso, o app pode ter um controle de round de revis\u00e3o na qual o aluno \u00e9\nincentivado a fazer coisas que podem potencializar o estudo dele durante a revis\u00e3o.  De forma bem grosseira, tem dois v\u00eddeos no youtube que d\u00e3o uma orienta\u00e7\u00e3o dos\nrequisistos para a parte de agendar aprendizado e para a parte de coisas\nnecess\u00e1rias para potencializar o estudo:   Sobre fixar conte\u00fado: https://www.youtube.com/watch?v=mHdy1xS59xA t=  Sobre melhorar potencializar o aprendizado: https://www.youtube.com/watch?v=mHdy1xS59xA t=   [1] https://en.wikipedia.org/wiki/Forgetting_curve", 
            "title": "Ideia"
        }, 
        {
            "location": "/Projetos----Temas/#ferramenta-de-controle-de-gasto-de-tempo-com-coisas-nao-esperadas", 
            "text": "", 
            "title": "Ferramenta de controle de gasto de tempo com coisas n\u00e3o esperadas"
        }, 
        {
            "location": "/Projetos----Temas/#problema_1", 
            "text": "Durante a o nosso dia dia, temos diversas tarefas para serem cumpridas.\nInfelizmente, em torno das tarefas importantes muitas vezes temos outras\ntarefas que n\u00e3o te levam diretamente a concluir o que voc\u00ea precisa mas por\nalgum motivo precisam ser executada. Por exemplo, uma pessoa tem que terminar o\nrelat\u00f3rio mas o chefe constantemente pede para que a mesma pessoa fa\u00e7a uma\ntarefa perif\u00e9ricas (como carimbar papeis) e a pessoa acaba perdendo um tempo\nimportante com outra tarefa. Outro exemplo, \u00e9 o de uma pessoa que quer malhar\nmas tem um tempo grande gasto com o deslocamento. Para facilitar a discuss\u00e3o,\nchamamos isto de \"Overhead\".  O grande problema relacionado aos overheads \u00e9 que as pessoas normamente n\u00e3o\ncompreendem quanto tempo foi gasto com coisa n\u00e3o t\u00e3o relevantes para a\nconclus\u00e3o da tarefa. Contudo, como medir tal tempo? Como manter um hist\u00f3rico do\ntempo gasto de forma n\u00e3o produtiva por for\u00e7as externas?", 
            "title": "Problema"
        }, 
        {
            "location": "/Projetos----Temas/#ideia_1", 
            "text": "Criar um aplicativo que permita ao usu\u00e1rio registrar o tempo perdido em uma\ntarefa. O princ\u00edpal requisito \u00e9 o r\u00e1pido registro; este deve ser simples e deve\nrealizado de forma r\u00e1pida, ou seja, sem overheads. O usu\u00e1rio pode criar algumas\ncategorias gerais a princ\u00edpio, como por exemplo: faculdade, trabalho, fam\u00edlia,\netc. O usu\u00e1rio pode inserir o tempo total gasto no overhead, como tamb\u00e9m pode\niniciar e parar um cron\u00f4metro.", 
            "title": "Ideia"
        }, 
        {
            "location": "/Projetos----Temas/#controlar-promessas-de-ano-novo", 
            "text": "", 
            "title": "Controlar promessas de ano novo"
        }, 
        {
            "location": "/Projetos----Temas/#problema_2", 
            "text": "Todo ano \u00e9 a mesma hist\u00f3ria. As pessoas fazem milh\u00f5es de promessas com a\nesperan\u00e7a de ter um ano melhor do que o anterior. Contudo, quase sempre o\nresultado \u00e9 o mesmo: promessas n\u00e3o realizadas. Muitas vezes as pessoas esquecem\no objetivo que tinham definido ou at\u00e9 mesmo lembram mas s\u00e3o objetivos t\u00e3o\ngrandes que a pessoa fica desistimulada.", 
            "title": "Problema"
        }, 
        {
            "location": "/Projetos----Temas/#ideia_2", 
            "text": "Criar um app que permita ao usu\u00e1rio registrar as suas promessas de ano novo. O\napp deve permitir criar uma tarefa maior e subtarefas pertencentes a promessa\nmaior. Durante o ano, o usu\u00e1rio \u00e9 lembrado das promessas registradas. Caso o\nusu\u00e1rio consiga cumprir a promessa, ele pode compartilhar nas redes sociais de\nforma a estimular o mesmo a continuar. O usu\u00e1rio tamb\u00e9m pode ir criando\nsubtarefas ao longo do ano para atingir o seu objetivo maior.  Al\u00e9m disto, o app deve contar com um sistema de \"ranking\" na qual cada tarefa\nconclu\u00edda rende pontos para os usu\u00e1rios. No final, deve haver um rank com todos\nos usu\u00e1rios classifcados de acordo com a sua pontua\u00e7\u00e3o. Seria interessante se o\nusu\u00e1rio tivesse a flexibilidade de mudar a promessa, mas isso custaria alguns\npontos.", 
            "title": "Ideia"
        }, 
        {
            "location": "/Projetos----Temas/#20172-uso-de-conceitos-de-data-science", 
            "text": "A disciplina MDS/GPP ter\u00e1 tema \u00fanico: Data Science. As equipes s\u00e3o respons\u00e1veis por desenvolver pelo menos 2 propostas de projetos de software no tema (pelo menos 1 dos temas deve estar entre os propostos pela professora). Os temas ser\u00e3o apresentados na sala de aula para aprova\u00e7\u00e3o do projeto.  Algumas \u00e1reas de interesse s\u00e3o:   Educa\u00e7\u00e3o/merenda escolar  Sa\u00fade", 
            "title": "2017.2 Uso de conceitos de Data Science"
        }, 
        {
            "location": "/Projetos----Temas/#os-temas-propostos-20172", 
            "text": "Sistema de gest\u00e3o de infraestrutura de rede metropolitana   cliente: Giga candanga - prof. Lazarte (llazarte@unb.br, pa@pauloangelo.com)    Web monitoramento de indicadores culturais    Contato: Nitai (coodenador TI minist\u00e9rio da cultura) - nitai.silva@cultura.gov.br  Palavras-chave: Business Intelligence     Aplicativos multiplataformas/ webapp para Conselheiros da Merenda Escolar - Cliente: TCU (Minimo 2 grupos) http://portal.tcu.gov.br/imprensa/noticias/cartilha-do-tcu-e-fnde-vai-ajudar-na-fiscalizacao-da-merenda-escolar.htm   Palavras-chave: atender a 70.000 potenciais usu\u00e1rios (armazenamento e processamento dos dados). Uso da nuvem civica  Contato: Marcela de Oliveira Timoteo  (assessora secret\u00e1rio da educa\u00e7\u00e3o) - marcela.timoteo@tcu.gov.br     Me representa - auxiliar o eleitor brasileiro a decidirm de forma refletida e individual, seu voto nas pr\u00f3ximas elei\u00e7\u00f5es do legislativo nacional. App que cruze dados sobre o comportamento de deputdo federais e senadores nas principais vota\u00e7\u00f5es realizadas na camara e no senado nos ultimos anos.   cliente Elida Silpe (BH) - elidasilpe@gmail.com     Sistema de monitoramento e controle de projetos de software livre   Cliente: GPP/MDS - Contato: Jo\u00e3o Guilherme Silva   Palavras-chave: Sistema BI - identificar anomalias, gerar indicadores/metricas em tempo real  Smart Triagem pedi\u00e1trica  Cliente:  Dr. Get\u00falio Morato (medico pediatra)- drgetulio@clinimeta.com   Palavras-chave: webapp, arvore de decis\u00f5es,     smart Receituario eletr\u00f4nico    Cliente:  Dr. Get\u00falio Morato (medico pediatra)- drgetulio@clinimeta.com  Palavras-chave: webapp, arvore de decis\u00f5es, big data", 
            "title": "Os temas propostos 2017.2"
        }, 
        {
            "location": "/Projetos----Temas/#os-temas-de-20171-foram", 
            "text": "Algumas propostas de interesse s\u00e3o:   Plataforma de Minicursos abertos UnB -  cliente: laborat\u00f3rio lappis  Plataforma de Sugest\u00f5es de Software UnB - cliente: laborat\u00f3rio lappis   Plataforma de Jogos UNB - clientes: prof. Edson/Prof Tiago (desenho industrial)  Infraestrutura para contribui\u00e7\u00e3o dos jogos UnB - Cliente: prof. Edson (https://github.com/fgagamedev)  Acompanhamento da presen\u00e7a e rendimento do aluno - cliente: Escola X (Attany)  Aplicativo 300 -  cliente: Prof. Fragelli  Aplicativo - web -- sistema de localiza\u00e7\u00e3o no campus darcy ribeiro - cliente: CPD Central    Propostas de projetos de software demandados pela UNB:   Sistema de Controle de cirurgia laparosc\u00f3pica minimamente invasiva (software cr\u00edtico e tolerante a falha) - cliente: laborat\u00f3rio Lara UNB. ( https://github.com/lara-unb )  Simulador bike reabilita\u00e7\u00e3o - cliente: laborat\u00f3rios LART/LARA UNB  Jogo labirintos urbanos - cliente:  Laborat\u00f3rio Transdisciplinar de Cenografia da UnB ( http://laboratoriodecenografia.blogspot.com.br/ )  Plataforma para projetos de cadernos digitais - cliente:  Laborat\u00f3rio Transdisciplinar de Cenografia da UnB ( http://laboratoriodecenografia.blogspot.com.br/ )", 
            "title": "Os temas de 2017.1 foram"
        }, 
        {
            "location": "/M\u00e9todos-de-Desenvolvimento-de-Software/", 
            "text": "Bem vindo a MDS\n\n\n 1. O que \u00e9 Processo de Desenvolvimento de Software\n\n\n 2. O que \u00e9 modelo de processo de software\n\n\n 3. Fases do ciclo de vida de software\n\n\n\n\n 3.1 Objetivos de cada fase do ciclo de vida de software\n\n\n\n\n 4. Estudo de caso da influencia do modelo de processo no sucesso de um projeto\n\n\n 5. Refer\u00eancias \n\n\n\n\n1. O que \u00e9 Processo de Desenvolvimento de \nSoftware\n\n\nPara Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na \ncria\u00e7\u00e3o de um produto de trabalho (\nwork product\n). Uma atividade esfor\u00e7a-se para atingir \num objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de \nsoftware\n ser\u00e1 aplicada. \n\n\nNa engenharia de \nsoftware\n, um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um \nsoftware\n, mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de \nsoftware\n) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas.\n\n\n2. O que \u00e9 modelo de processo de \nsoftware\n\n\n\u00c9 uma representa\u00e7\u00e3o abstrata de um processo de \nsoftware\n. Cada modelo representa um processo a partir de uma perspectiva particular.\nModelos de processo de \nsoftware\n s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de \nsoftware\n. Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas.\nN\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens.\n\n## 3. Fases do ciclo de vida de \nsoftware\n\n\n- \nLevantamento de Requisitos:\n Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias:\n\n    - \nFuncionais:\n S\u00e3o os requisitos relacionados \u00e0s funcionalidades do \nsoftware\n;\n    - \nN\u00e3o Funcionais:\n S\u00e3o os requisitos relacionados \u00e0s necessidades do \nsoftware\n;\n    - \nInversos:\n S\u00e3o os requisitos que definem o que o \nsoftware\n n\u00e3o pode fazer.   \n\n\nO objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente,\nde forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007).\n\n\n- \nDesign\n/Projeto:\n A atividade de \ndesign\n compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o \nsoftware\n ser\u00e1 implementado. O \ndesign\n inclui:\n\n    - \nO \ndesign\n conceitual:\n Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do \nsoftware\n em quest\u00e3o. O \ndesign\n conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do \nsoftware\n.\n\n    - \nO \ndesign\n da interface do usu\u00e1rio:\n Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o \nlayout\n de janelas e telas, etc. A interface deve garantir a boa usabilidade do \nsoftware\n.\n\n    - \nO \ndesign\n da arquitetura do \nsoftware\n:\n Deve elaborar uma vis\u00e3o macrosc\u00f3pica do \nsoftware\n em termos de componentes que interagem entre si.\n\n    - \nDesign\n dos algoritmos e estruturas de dados:\n Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas.\n\n    \nA fase de \nDesign\n ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura.\n\n- \nImplementa\u00e7\u00e3o:\n Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o \ndesign\n em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no \ndesign\n. Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado.\n\n- \nVerifica\u00e7\u00e3o e Valida\u00e7\u00e3o:\n Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do \nsoftware\n.\n\n- \nManuten\u00e7\u00e3o:\n A parte de manuten\u00e7\u00e3o envolve melhorar o \nsoftware\n a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa.\n\n\n![](http://static.commentcamarche.net/pt.kioskea.net/faq/images/7kUwNTrgQL7rMNKd-s-.png)\n\n\n### 3.1 Objetivos de cada fase do ciclo de vida de \nsoftware\n\n\n- \nLevantamento de Requisitos\n : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido.\n\n- \nDesign\n Geral\n : Essa fase consiste no detalhamento de como o \nsoftware\n ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores.\n\n## 4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto \n\nResumo do texto: (e podem sugerir outros casos) \nWhat Successful Project Managers Do.\n\n\n\nAtualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados.\n\n\nGerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.\n\n\n## 5. Refer\u00eancias\n\nJacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., \n&\n Booch, G. **The unified software development process**. Reading: Addison-wesley, 2007.", 
            "title": "M\u00e9todos de Desenvolvimento de Software"
        }, 
        {
            "location": "/M\u00e9todos-de-Desenvolvimento-de-Software/#bem-vindo-a-mds", 
            "text": "1. O que \u00e9 Processo de Desenvolvimento de Software   2. O que \u00e9 modelo de processo de software   3. Fases do ciclo de vida de software    3.1 Objetivos de cada fase do ciclo de vida de software    4. Estudo de caso da influencia do modelo de processo no sucesso de um projeto   5. Refer\u00eancias", 
            "title": "Bem vindo a MDS"
        }, 
        {
            "location": "/M\u00e9todos-de-Desenvolvimento-de-Software/#1-o-que-e-processo-de-desenvolvimento-de-software", 
            "text": "Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na \ncria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir \num objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de  software  ser\u00e1 aplicada.   Na engenharia de  software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um  software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de  software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas.", 
            "title": "1. O que \u00e9 Processo de Desenvolvimento de Software"
        }, 
        {
            "location": "/M\u00e9todos-de-Desenvolvimento-de-Software/#2-o-que-e-modelo-de-processo-de-software", 
            "text": "\u00c9 uma representa\u00e7\u00e3o abstrata de um processo de  software . Cada modelo representa um processo a partir de uma perspectiva particular.\nModelos de processo de  software  s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de  software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas.\nN\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens.\n\n## 3. Fases do ciclo de vida de  software \n\n-  Levantamento de Requisitos:  Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias:\n\n    -  Funcionais:  S\u00e3o os requisitos relacionados \u00e0s funcionalidades do  software ;\n    -  N\u00e3o Funcionais:  S\u00e3o os requisitos relacionados \u00e0s necessidades do  software ;\n    -  Inversos:  S\u00e3o os requisitos que definem o que o  software  n\u00e3o pode fazer.    O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente,\nde forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007).\n\n\n-  Design /Projeto:  A atividade de  design  compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o  software  ser\u00e1 implementado. O  design  inclui:\n\n    -  O  design  conceitual:  Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do  software  em quest\u00e3o. O  design  conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do  software .\n\n    -  O  design  da interface do usu\u00e1rio:  Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o  layout  de janelas e telas, etc. A interface deve garantir a boa usabilidade do  software .\n\n    -  O  design  da arquitetura do  software :  Deve elaborar uma vis\u00e3o macrosc\u00f3pica do  software  em termos de componentes que interagem entre si.\n\n    -  Design  dos algoritmos e estruturas de dados:  Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas.\n\n     A fase de  Design  ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura.\n\n-  Implementa\u00e7\u00e3o:  Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o  design  em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no  design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado.\n\n-  Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o:  Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do  software .\n\n-  Manuten\u00e7\u00e3o:  A parte de manuten\u00e7\u00e3o envolve melhorar o  software  a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa.\n\n\n![](http://static.commentcamarche.net/pt.kioskea.net/faq/images/7kUwNTrgQL7rMNKd-s-.png)\n\n\n### 3.1 Objetivos de cada fase do ciclo de vida de  software \n\n-  Levantamento de Requisitos  : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido.\n\n-  Design  Geral  : Essa fase consiste no detalhamento de como o  software  ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores.\n\n## 4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto \n\nResumo do texto: (e podem sugerir outros casos)  What Successful Project Managers Do.  Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados.  Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente. \n\n## 5. Refer\u00eancias\n\nJacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J.,  &  Booch, G. **The unified software development process**. Reading: Addison-wesley, 2007.", 
            "title": "2. O que \u00e9 modelo de processo de software"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/", 
            "text": "Bem vindo a GPP\n\n\nO plano de Ensino na disciplina pode ser encontrado \naqui\n.\n\n\nO que \u00e9 projeto?\n\n\nDe acordo com o PMBOK: \u201cUm projeto \u00e9 um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado exclusivo. Os projetos e as opera\u00e7\u00f5es diferem, principalmente, no fato de que os projetos s\u00e3o tempor\u00e1rios e exclusivos, enquanto as opera\u00e7\u00f5es s\u00e3o cont\u00ednuas e repetitivas.\u201d\n\n\n\nSegundo a ABNT, na norma t\u00e9cnica NBR 10006, Projeto \u00e9 \u201cProcesso \u00fanico, consistindo de um grupo de atividades coordenadas e controladas com datas para in\u00edcio e t\u00e9rmino, empreendido para alcance de um objetivo conforme requisitos espec\u00edficos, incluindo limita\u00e7\u00f5es de tempo, custo e recursos.\u201d De acordo com o Project Management Institute (PMBOK, 2013), Projeto \u00e9 \u201cUm esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado \u00fanico.\u201d\n\n\n\nEm resumo, projeto \u00e9 um evento que possui um in\u00edcio, meio e um fim bem definidos. O que o diferencia de uma opera\u00e7\u00e3o,  que \u00e9 uma tarefa do dia a dia e n\u00e3o se tem o conhecimento de quando ela n\u00e3o mais ser\u00e1 necess\u00e1ria, algo rotineiro.\n\n\n\nSegundo Pressman, para que um projeto de software seja bem sucedido, \u00e9 necess\u00e1rio que alguns par\u00e2metros sejam corretamente analisados, como por exemplo, o escopo do software, os riscos envolvidos, os recursos necess\u00e1rios, as tarefas a serem realizadas, os indicadores a serem acompanhados, os esfor\u00e7os e custos aplicados e a sistem\u00e1tica a ser seguida. A an\u00e1lise de todos estes par\u00e2metros seria a fun\u00e7\u00e3o t\u00edpica do gerenciamento de projetos,   qual, em geral, se inicia antes do trabalho t\u00e9cnico e prossegue \u00e0 medida que a entrega do software vai se concretizando.\n\n\n\nProjeto busca atingir um objetivo claro, sendo conduzido por pessoas e possuindo par\u00e2metros bem definidos de tempo, custo, recursos envolvidos e qualidade.\n\n\n\nPMBOK\n\n\nNa defini\u00e7\u00e3o do Guia PMBOK\u00ae (2013), gerenciamento de projetos \u00e9 \u201ca aplica\u00e7\u00e3o de conhecimentos, habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto, fim de atender os requisitos das partes interessadas\u201d. Para Vargas (2009) \u201co gerenciamento de projetos pode ser aplicado a qualquer situa\u00e7\u00e3o onde exista um empreendimento que foge ao\nque \u00e9 fixo e rotineiro na empresa (ad hoc)\u201d.\n\n\n\nSatisfazer ou exceder as necessidades envolve equilibrar as v\u00e1rias demandas concorrentes em rela\u00e7\u00e3o ao:\n\n Escopo, tempo, custo e qualidade;\n\n Partes interessadas com necessidades e expectativas diferenciadas; e\n* Requisitos identificados (necessidades) e requisitos n\u00e3o identificados (expectativas).\n\n\nPara cobrir todas as \u00e1reas que fazem parte da ger\u00eancia de projetos o Guia PMBOK\u00ae dividiu-as em grupos de processos, conforme a figura a seguir.\n\n\n\n\nCaracter\u00edsticas de um projeto:\n \n\n\n\n\nTemporariedade\n\n\nIndividualidade\n\n\nEmpreendimento n\u00e3o repetitivo\n\n\nSequ\u00eancia clara e l\u00f3gica\n\n\nIn\u00edcio, meio e fim\n\n\nElabora\u00e7\u00e3o progressiva\n\n\n\n\nQual o papel do gerente de projeto?\n\n\nA fun\u00e7\u00e3o de um gerente de projetos \u00e9 planejar, controlar e executar projetos que podem ter um tempo determinado, com uma data para come\u00e7ar e acabar, ou que podem ser a longo prazo, como o objetivo de neg\u00f3cio de uma empresa, por exemplo.\n\n\n\nDurante o andamento de um projeto, esse profissional \u00e9 respons\u00e1vel por atribuir pap\u00e9is, tarefas, acompanhar e documentar o andamento da equipe por meio de ferramentas e t\u00e9cnicas apuradas, administrar investimentos e integrar as pessoas para trabalharem juntas por um s\u00f3 objetivo. Al\u00e9m de monitorar poss\u00edveis riscos e estar sempre preparado para mudan\u00e7as.\n\n\n\nO que gerentes de projetos bem sucedidos fazem?\n\n\nA partir do seguinte texto: \nWhat Successful Project Managers Do\n\n\nAtualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados.\n\n\n\nGerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.\n\n\n\nQuais s\u00e3o os principais motivos do fracasso de projetos?\n\n\n\n\nVi\u00e9s: otimismo, custos afundados, confirma\u00e7\u00e3o/in\u00e9rcia.\n\n\nPouco ou nenhum planejamento.\n\n\nN\u00e3o h\u00e1 li\u00e7\u00f5es aprendidas de projetos passados.\n\n\nFalta de treinamento em ger\u00eancia de projeto.\n\n\nFalta de treino de novas tecnologias.\n\n\nFalta de lideran\u00e7a ou comprometimento dos Stakeholders.\n\n\n\n\nMudan\u00e7a no modelo de gest\u00e3o\n\n\nDa gest\u00e3o tradicional (PMBok) para gest\u00e3o \u00e1gil - baseada na leitura - https://hbr.org/2016/05/embracing-agile", 
            "title": "Gest\u00e3o de Portf\u00f3lio e Projetos de Software"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#bem-vindo-a-gpp", 
            "text": "O plano de Ensino na disciplina pode ser encontrado  aqui .", 
            "title": "Bem vindo a GPP"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#o-que-e-projeto", 
            "text": "De acordo com o PMBOK: \u201cUm projeto \u00e9 um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado exclusivo. Os projetos e as opera\u00e7\u00f5es diferem, principalmente, no fato de que os projetos s\u00e3o tempor\u00e1rios e exclusivos, enquanto as opera\u00e7\u00f5es s\u00e3o cont\u00ednuas e repetitivas.\u201d  Segundo a ABNT, na norma t\u00e9cnica NBR 10006, Projeto \u00e9 \u201cProcesso \u00fanico, consistindo de um grupo de atividades coordenadas e controladas com datas para in\u00edcio e t\u00e9rmino, empreendido para alcance de um objetivo conforme requisitos espec\u00edficos, incluindo limita\u00e7\u00f5es de tempo, custo e recursos.\u201d De acordo com o Project Management Institute (PMBOK, 2013), Projeto \u00e9 \u201cUm esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado \u00fanico.\u201d  Em resumo, projeto \u00e9 um evento que possui um in\u00edcio, meio e um fim bem definidos. O que o diferencia de uma opera\u00e7\u00e3o,  que \u00e9 uma tarefa do dia a dia e n\u00e3o se tem o conhecimento de quando ela n\u00e3o mais ser\u00e1 necess\u00e1ria, algo rotineiro.  Segundo Pressman, para que um projeto de software seja bem sucedido, \u00e9 necess\u00e1rio que alguns par\u00e2metros sejam corretamente analisados, como por exemplo, o escopo do software, os riscos envolvidos, os recursos necess\u00e1rios, as tarefas a serem realizadas, os indicadores a serem acompanhados, os esfor\u00e7os e custos aplicados e a sistem\u00e1tica a ser seguida. A an\u00e1lise de todos estes par\u00e2metros seria a fun\u00e7\u00e3o t\u00edpica do gerenciamento de projetos,   qual, em geral, se inicia antes do trabalho t\u00e9cnico e prossegue \u00e0 medida que a entrega do software vai se concretizando.  Projeto busca atingir um objetivo claro, sendo conduzido por pessoas e possuindo par\u00e2metros bem definidos de tempo, custo, recursos envolvidos e qualidade.", 
            "title": "O que \u00e9 projeto?"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#pmbok", 
            "text": "Na defini\u00e7\u00e3o do Guia PMBOK\u00ae (2013), gerenciamento de projetos \u00e9 \u201ca aplica\u00e7\u00e3o de conhecimentos, habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto, fim de atender os requisitos das partes interessadas\u201d. Para Vargas (2009) \u201co gerenciamento de projetos pode ser aplicado a qualquer situa\u00e7\u00e3o onde exista um empreendimento que foge ao\nque \u00e9 fixo e rotineiro na empresa (ad hoc)\u201d.  Satisfazer ou exceder as necessidades envolve equilibrar as v\u00e1rias demandas concorrentes em rela\u00e7\u00e3o ao:  Escopo, tempo, custo e qualidade;  Partes interessadas com necessidades e expectativas diferenciadas; e\n* Requisitos identificados (necessidades) e requisitos n\u00e3o identificados (expectativas).  Para cobrir todas as \u00e1reas que fazem parte da ger\u00eancia de projetos o Guia PMBOK\u00ae dividiu-as em grupos de processos, conforme a figura a seguir.   Caracter\u00edsticas de um projeto:     Temporariedade  Individualidade  Empreendimento n\u00e3o repetitivo  Sequ\u00eancia clara e l\u00f3gica  In\u00edcio, meio e fim  Elabora\u00e7\u00e3o progressiva", 
            "title": "PMBOK"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#qual-o-papel-do-gerente-de-projeto", 
            "text": "A fun\u00e7\u00e3o de um gerente de projetos \u00e9 planejar, controlar e executar projetos que podem ter um tempo determinado, com uma data para come\u00e7ar e acabar, ou que podem ser a longo prazo, como o objetivo de neg\u00f3cio de uma empresa, por exemplo.  Durante o andamento de um projeto, esse profissional \u00e9 respons\u00e1vel por atribuir pap\u00e9is, tarefas, acompanhar e documentar o andamento da equipe por meio de ferramentas e t\u00e9cnicas apuradas, administrar investimentos e integrar as pessoas para trabalharem juntas por um s\u00f3 objetivo. Al\u00e9m de monitorar poss\u00edveis riscos e estar sempre preparado para mudan\u00e7as.", 
            "title": "Qual o papel do gerente de projeto?"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#o-que-gerentes-de-projetos-bem-sucedidos-fazem", 
            "text": "A partir do seguinte texto:  What Successful Project Managers Do  Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados.  Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.", 
            "title": "O que gerentes de projetos bem sucedidos fazem?"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#quais-sao-os-principais-motivos-do-fracasso-de-projetos", 
            "text": "Vi\u00e9s: otimismo, custos afundados, confirma\u00e7\u00e3o/in\u00e9rcia.  Pouco ou nenhum planejamento.  N\u00e3o h\u00e1 li\u00e7\u00f5es aprendidas de projetos passados.  Falta de treinamento em ger\u00eancia de projeto.  Falta de treino de novas tecnologias.  Falta de lideran\u00e7a ou comprometimento dos Stakeholders.", 
            "title": "Quais s\u00e3o os principais motivos do fracasso de projetos?"
        }, 
        {
            "location": "/Gest\u00e3o-de-Portf\u00f3lios-e-Projetos-de-Software/#mudanca-no-modelo-de-gestao", 
            "text": "Da gest\u00e3o tradicional (PMBok) para gest\u00e3o \u00e1gil - baseada na leitura - https://hbr.org/2016/05/embracing-agile", 
            "title": "Mudan\u00e7a no modelo de gest\u00e3o"
        }, 
        {
            "location": "/Scrum/", 
            "text": "Sum\u00e1rio\n\n\n1. Scrum\n\n\n2. Principais Diferen\u00e7as: (\nScrum\n vs Tradicionais)\n\n\n3. Pap\u00e9is do \nScrum\n\n\n\n\n3.1 \nProduct Owner\n\n\n3.2 \nScrum Master\n\n\n 3.3 \nDevelopment Team\n \n\n\n\n\n4. Artefatos\n\n\n\n\n4.1 \nProduct Backlog\n\n\n4.2 \nCharts\n\n\n4.3 \nSprints\n\n\n\n\n5. Reuni\u00f5es\n\n\n\n\n 5.1 \nDaily Meetings\n \n\n\n5.2 Retrospectiva\n\n\n5.3 Revis\u00e3o da \nSprint\n\n\n\n\n6. Refer\u00eancias\n\n\n\n\n1. \nScrum\n\n\nDurante muito tempo, empresas de desenvolvimento de software conviveram com problemas relacionados ao planejamento e gerenciamento de projetos. Mediante essa situa\u00e7\u00e3o, um grupo de profissionais da \u00e1rea de desenvolvimento de \nsoftware\n se reuniram e criaram o que ficou conhecido com \nManisfesto \u00c1gil\n, que foi gerado de acordo com as experi\u00eancias de cada um.\n\nDentre os criadores do manifesto \u00e1gil estavam \nKen Schwaber\n e \nJeff Sutherland\n, que desenvolveram o \nScrum\n. Segundo os criadores desse m\u00e9todo, o \nScrum\n \"\u00e9 um \nframework\n para desenvolver e manter produtos complexos\".\nO \nScrum\n consiste em um m\u00e9todo que trabalha com ciclos curtos de desenvolvimento. Deste modo, o \nfeedback\n a respeito do resultado \u00e9 obtido rapidamente, o que garante a qualidade do produto desenvolvido e a satisfa\u00e7\u00e3o do cliente.\n\n\n\n\n\n\n2. Principais Diferen\u00e7as: (\nScrum\n vs Tradicionais)\n\n\nOs m\u00e9todos \u00e1geis possuem uma maior liberdade no planejamento de a\u00e7\u00f5es, enquanto os tradicionais possuem um planejamento mais r\u00edgido. Outra diferen\u00e7a importante \u00e9 que as entregas de partes do projeto s\u00e3o feitas de forma cont\u00ednua e incremental (itera\u00e7\u00f5es), geralmente n\u00e3o muito longas, a fim de obter um r\u00e1pido \nfeedback\n do cliente acerca do andamento do projeto.\n\n\nNa quest\u00e3o de comunica\u00e7\u00e3o entre os membros do projeto, os m\u00e9todos \u00e1geis utilizam reuni\u00f5es di\u00e1rias entre o time, ou seja, h\u00e1 uma intera\u00e7\u00e3o constante entre todos os membros da equipe, enquanto que em tradicionais, o contato n\u00e3o \u00e9 t\u00e3o frequente. O intuito disso est\u00e1 em discutir o que ser\u00e1 feito naquele momento, revendo o planejamento a m\u00e9dio e curto prazo, al\u00e9m de prov\u00e1veis impedimentos. As equipes s\u00e3o auto-organiz\u00e1veis e n\u00e3o necessitam de l\u00edderes indicando 'O que fazer' e 'Como fazer'.\n\n# 3. Pap\u00e9is do \nScrum\n\n\n## 3.1 \nProduct Owner\n\n\nO \nProduct Owner\n, \"dono do produto\", \u00e9 o respons\u00e1vel por maximizar o valor do produto e do trabalho do Time de Desenvolvimento. Como isso \u00e9 feito pode variar por projeto ou time de desenvolvimento, sendo que o \nProduct Owner\n \u00e9 a \u00fanica pessoa respons\u00e1vel por gerenciar o \nBacklog\n do Produto. O gerenciamento do \nBacklog\n do Produto inclui:\n- Expressar claramente os itens do \nBacklog\n do Produto;\n- Ordenar os itens do \nBacklog\n do Produto para alcan\u00e7ar melhor as metas e miss\u00f5es;\n- Garantir o valor do trabalho realizado pelo Time de Desenvolvimento;\n- Garantir que o \nBacklog\n do produto seja vis\u00edvel, transparente, claro para todos, e mostrar o que o Time \nScrum\n vai trabalhar a seguir;\n- Garantir que o Time de Desenvolvimento entenda os itens do \nBacklog\n do Produto no n\u00edvel necess\u00e1rio.\n\n\nO \nProduct Owner\n pode fazer o trabalho citado acima, ou delegar para o Time de Desenvolvimento faz\u00ea-lo. No entanto n\u00e3o \u00e9 muito recomendado j\u00e1 que o \nProduct Owner\n continuar\u00e1 sendo o respons\u00e1vel pelos trabalhos. O \nProduct Owner\n \u00e9 uma pessoa e n\u00e3o um comit\u00ea, mas pode representar o desejo de um comit\u00ea no \nBacklog\n do Produto, sendo que aqueles que quiserem uma altera\u00e7\u00e3o nas prioridades dos itens de \nBacklog\n devem convencer o \nProduct Owner\n das necessidades de tais mudan\u00e7as.\n\n\nPara que o \nProduct Owner\n tenha sucesso, toda a organiza\u00e7\u00e3o deve respeitar as suas decis\u00f5es, estas devendo ser vis\u00edveis no conte\u00fado e na prioriza\u00e7\u00e3o do \nBacklog\n do Produto. \n\n## 3.2 \nScrum Master\n\n\nO \nScrum Master\n \u00e9 respons\u00e1vel por garantir que o \nScrum\n seja entendido e aplicado, ou seja, para garantir que o Time \nScrum\n adira \u00e0 teoria, pr\u00e1ticas e regras do \nScrum\n. O \nScrum Master\n ajuda aqueles que est\u00e3o fora do Time \nScrum\n a entender quais as suas intera\u00e7\u00f5es com o Time \nScrum\n e se estas s\u00e3o \u00fateis, de modo que mostra, tamb\u00e9m, quais n\u00e3o s\u00e3o \u00fateis para o projeto. O \nScrum Master\n ajuda todos a mudarem estas intera\u00e7\u00f5es para maximizar o valor criado pelo Time \nScrum\n.\n\n### 3.2.1 Pap\u00e9is do \nScrum Master\n\nO \nScrum Master\n serve o \nProduct Owner\n de v\u00e1rias maneiras, incluindo:\n- Encontrando t\u00e9cnicas para o gerenciamento efetivo do \nBacklog\n do Produto;\n- Claramente comunicar a vis\u00e3o, objetivo e itens do \nBacklog\n do Produto para o Time de Desenvolvimento;\n- Ensinar a Time \nScrum\n a criar itens de \nBacklog\n do Produto de forma clara e concisa;\n- Compreender a longo-prazo o planejamento do Produto no ambiente emp\u00edrico;\n- Compreender e praticar a agilidade; \n- Facilitar os eventos \nScrum\n conforme exigidos ou necess\u00e1rios.\n- Treinar o Time de Desenvolvimento em autogerenciamento e interdisciplinaridade;\n- Ensinar e liderar o Time de Desenvolvimento na cria\u00e7\u00e3o de produtos de alto valor;\n- Remover impedimentos para o progresso do Time de Desenvolvimento;\n- Facilitar os eventos \nScrum\n conforme exigidos ou necess\u00e1rios;\n- Treinar o Time de Desenvolvimento em ambientes organizacionais nos quais o \nScrum\n n\u00e3o \u00e9 totalmente adotado e compreendido;\n- Liderando e treinando a organiza\u00e7\u00e3o na ado\u00e7\u00e3o do \nScrum\n;\n- Planejando implementa\u00e7\u00f5es \nScrum\n dentro da organiza\u00e7\u00e3o;\n- Ajudando funcion\u00e1rios e partes interessadas a compreender e tornar aplic\u00e1vel o \nScrum\n e o desenvolvimento de produto emp\u00edrico;\n- Causando mudan\u00e7as que aumentam a produtividade do Time \nScrum\n;\n- Trabalhando com outros \nScrum Masters\n para aumentar a efic\u00e1cia da aplica\u00e7\u00e3o do \nScrum\n nas organiza\u00e7\u00f5es.\n\n## 3.3 \nDevelopment Team\n \n\nO Time de Desenvolvimento consiste de profissionais que realizamo trabalho de entregar uma vers\u00e3o us\u00e1vel que potencialmente incrementa o produto \u201cPronto\u201d ao final de cada \nSprint\n. Somente integrantes do Time de Desenvolvimento criam incrementos. Os Times de Desenvolvimento s\u00e3o estruturados e autorizados pela organiza\u00e7\u00e3o para organizar e gerenciar seu pr\u00f3prio trabalho. A sinergia resultante aperfei\u00e7oa a efici\u00eancia e a efic\u00e1cia do Time de Desenvolvimento como um todo. \n\n\nO \nScrum Team\n \u00e9 a equipe de desenvolvimento. Nela n\u00e3o existe necessariamente uma divis\u00e3o funcional atrav\u00e9s de pap\u00e9is tradicionais, tais como programador, designer, analista de testes ou arquiteto. Todos no projeto trabalham juntos para completar o conjunto de trabalho com o qual se comprometeram conjuntamente para um \nSprint\n.\n\n\nUm \nScrum Team\n t\u00edpico tem de 6 a 10 pessoas, embora haja relatos de projetos \nScrum\n com equipes maiores. A principal abordagem para trabalhar com equipes grandes no \nScrum\n \u00e9 usando o conceito de _\"Scrum of Scrums\"_. Cada \nScrum Team\n trabalha normalmente, mas cada equipe tamb\u00e9m contribui com uma pessoa que dever\u00e1 frequentar o _Scrum of Scrums Meeting_ para coordenar o trabalho de m\u00faltiplas equipes \nScrum\n. \n\n\nO tamanho ideal do Time de Desenvolvimento deve ser pequeno o suficiente para se manter \u00e1gil e grande o suficiente para completar uma parcela significativa do trabalho dentro dos limites de tempo da \nSprint\n. Menos de 3 integrantes no Time de Desenvolvimento diminuem a intera\u00e7\u00e3o e resultam em um menor ganho de produtividade. Times de desenvolvimento menores podem encontrar restri\u00e7\u00f5es de habilidades durante a \nSprint\n, gerando um Time de Desenvolvimento incapaz de entregar um incremento potencialmente utiliz\u00e1vel. Havendo mais de 9 integrantes \u00e9 exigida muita coordena\u00e7\u00e3o. De maneira que o Time n\u00e3o pode ser grande demais ou pequeno demais.\n\n# 4. Artefatos\n\n## 4.1 \nProduct Backlog\n\n\nO \nProduct Backlog\n \u00e9 uma lista contendo todas as funcionalidades desejadas para um produto. O conte\u00fado desta lista \u00e9 definido pelo \nProduct Owner\n. N\u00e3o tem a necessidade dessa lista estar completo no in\u00edcio de um projeto. Pode-se come\u00e7ar com tudo aquilo que \u00e9 mais \u00f3bvio em um primeiro momento. Com o tempo, o \nProduct Backlog\n cresce e muda \u00e0 medida que se aprende mais sobre o produto e seus usu\u00e1rios.\n\n## 4.2 \nCharts\n \n\n### 4.2.1 \nVelocity Chart\n        \n\nO \nVelocity Chart\n pode ajudar a determinar quantos pontos de trabalho pode ser conclu\u00eddo por \nSprint\n para uma determinada equipe, se a composi\u00e7\u00e3o da equipe e dura\u00e7\u00e3o da \nSprint\n permanecerem os mesmos. A Estimativa dos pontos de hist\u00f3ria devem ser precisos para o c\u00e1lculo do \nVelocity\n ser significativo. Pode-se criar \nVelocity Chart\n para lan\u00e7amentos ou \nSprints\n conclu\u00eddas.       \n\n\n\n\n![Image\nVelocity\nChart](https://www.scrumalliance.org/scrum/files/e3/e3a2ff2a-27a2-444c-81af-c2e8dbfb3128.jpg)   \n\n### 4.2.2\nBurndown Chart\n\n\nBurndown Chart\n compara o progresso esperado \nversus\n o progresso real para releases e \nSprints\n. Este \nChart\n pode ajudar a identificar problemas inesperados que podem estar afetando o progresso. Os usu\u00e1rios com as fun\u00e7\u00f5es \nScrum admin\n ou \nScrum user\n podem visualizar as informa\u00e7\u00f5es do \nBurndown Chart\n.\n\n\n\n\n![Image_BurnDown_Chart](https://upload.wikimedia.org/wikipedia/commons/0/05/SampleBurndownChart.png)\n\n## 4.3 \nSprints\n\n\nSprint\n \u00e9 considerado como o cora\u00e7\u00e3o do \nScrum\n, \u00e9 o tempo que dura geralmente de um m\u00eas ou menos. Ao final de uma \nSprint\n \u00e9 esperado que tenha um vers\u00e3o est\u00e1vel do produto e incrementada em rela\u00e7\u00e3o a vers\u00e3o anterior. O tempo de dura\u00e7\u00e3o de uma \nSprint\n \u00e9 coerente com o esfor\u00e7o demandado para o desenvolvimento.\n\n\nPara iniciar uma \nSprint\n \u00e9 necess\u00e1rio realizar a reuni\u00e3o de planejamento, reuni\u00f5es di\u00e1rias, o trabalho desenvolvido durante o per\u00edodo da \nSprint\n, a realiza\u00e7\u00e3o da revis\u00e3o de Sprint e a retrospectiva dela para poder encerr\u00e1-la.\n\n# 5. Reuni\u00f5es\n\n## 5.1 \nDaily Meetings\n \n\nAs reuni\u00f5es di\u00e1rias s\u00e3o reuni\u00f5es r\u00e1pidas, de aproximadamente 10 a 15 minutos, dependendo do tamanho da equipe, onde os participantes a realizam de p\u00e9. O objetivo desta \u00e9 explanar para o restante do time o que foi feito no dia anterior e o que pretende-se fazer no dia atual, bem como a exist\u00eancia de quaisquer impedimentos no desenvolvimento. Deste modo, todo o time est\u00e1 sempre atualizado em rela\u00e7\u00e3o ao andamento do projeto como um todo, n\u00e3o somente em suas demandas/tarefas, o que permite a possibilidade de tomadas de decis\u00e3o r\u00e1pidas e forte adapta\u00e7\u00e3o a mudan\u00e7as. As reuni\u00f5es di\u00e1rias s\u00e3o realizadas sempre no mesmo hor\u00e1rio e local.\n\n## 5.2 Retrospectiva\n\nA retrospectiva \u00e9 uma reuni\u00e3o realizada com o intuito de abordar os pontos positivos, negativos e de melhoria do per\u00edodo passado, com a finalidade de n\u00e3o repetir os erros e manter e/ou melhorar os acertos. Esta reuni\u00e3o pode ser realizada ao fim de cada \nSprint\n ou em per\u00edodos pr\u00e9-determinados, como a cada m\u00eas, por exemplo.\n\n## 5.3 Revis\u00e3o da \nSprint\n\n\nRevis\u00e3o de \nSprint\n \u00e9 uma reuni\u00e3o realizada ao final de toda \nSprint\n, onde s\u00e3o mostrados ao restante do time tudo o que foi realizado durante o per\u00edodo da \nSprint\n passada. Esta reuni\u00e3o pode incluir o(s) cliente(s).\n\n# 6. Refer\u00eancias\n* [Manifesto Agil](http://www.manifestoagil.com.br/)\n* [Guia do SCRUM](http://www.scrumguides.org/docs/scrumguide/v1/Scrum-Guide-Portuguese-BR.pdf)\n* [Service Now](http://wiki.servicenow.com/index.php?title=Scrum_Charts#gsc.tab=0)\n* [Metodologia \u00c1gil](http://www.desenvolvimentoagil.com.br/scrum/)\n* [Imagem: Ciclo do Scrum](http://www.desenvolvimentoagil.com.br/images/scrum/ciclo_scrum.gif)\n* [Imagem: Velocity Chart](https://www.scrumalliance.org/scrum/files/e3/e3a2ff2a-27a2-444c-81af-c2e8dbfb3128.jpg)\n* [Imagem: Burndown Chart](https://upload.wikimedia.org/wikipedia/commons/0/05/SampleBurndownChart.png)", 
            "title": "Scrum"
        }, 
        {
            "location": "/Scrum/#sumario", 
            "text": "1. Scrum  2. Principais Diferen\u00e7as: ( Scrum  vs Tradicionais)  3. Pap\u00e9is do  Scrum   3.1  Product Owner  3.2  Scrum Master   3.3  Development Team     4. Artefatos   4.1  Product Backlog  4.2  Charts  4.3  Sprints   5. Reuni\u00f5es    5.1  Daily Meetings    5.2 Retrospectiva  5.3 Revis\u00e3o da  Sprint   6. Refer\u00eancias", 
            "title": "Sum\u00e1rio"
        }, 
        {
            "location": "/Scrum/#1-scrum", 
            "text": "Durante muito tempo, empresas de desenvolvimento de software conviveram com problemas relacionados ao planejamento e gerenciamento de projetos. Mediante essa situa\u00e7\u00e3o, um grupo de profissionais da \u00e1rea de desenvolvimento de  software  se reuniram e criaram o que ficou conhecido com  Manisfesto \u00c1gil , que foi gerado de acordo com as experi\u00eancias de cada um. Dentre os criadores do manifesto \u00e1gil estavam  Ken Schwaber  e  Jeff Sutherland , que desenvolveram o  Scrum . Segundo os criadores desse m\u00e9todo, o  Scrum  \"\u00e9 um  framework  para desenvolver e manter produtos complexos\".\nO  Scrum  consiste em um m\u00e9todo que trabalha com ciclos curtos de desenvolvimento. Deste modo, o  feedback  a respeito do resultado \u00e9 obtido rapidamente, o que garante a qualidade do produto desenvolvido e a satisfa\u00e7\u00e3o do cliente.", 
            "title": "1. Scrum"
        }, 
        {
            "location": "/Scrum/#2-principais-diferencas-scrum-vs-tradicionais", 
            "text": "Os m\u00e9todos \u00e1geis possuem uma maior liberdade no planejamento de a\u00e7\u00f5es, enquanto os tradicionais possuem um planejamento mais r\u00edgido. Outra diferen\u00e7a importante \u00e9 que as entregas de partes do projeto s\u00e3o feitas de forma cont\u00ednua e incremental (itera\u00e7\u00f5es), geralmente n\u00e3o muito longas, a fim de obter um r\u00e1pido  feedback  do cliente acerca do andamento do projeto. Na quest\u00e3o de comunica\u00e7\u00e3o entre os membros do projeto, os m\u00e9todos \u00e1geis utilizam reuni\u00f5es di\u00e1rias entre o time, ou seja, h\u00e1 uma intera\u00e7\u00e3o constante entre todos os membros da equipe, enquanto que em tradicionais, o contato n\u00e3o \u00e9 t\u00e3o frequente. O intuito disso est\u00e1 em discutir o que ser\u00e1 feito naquele momento, revendo o planejamento a m\u00e9dio e curto prazo, al\u00e9m de prov\u00e1veis impedimentos. As equipes s\u00e3o auto-organiz\u00e1veis e n\u00e3o necessitam de l\u00edderes indicando 'O que fazer' e 'Como fazer'.\n\n# 3. Pap\u00e9is do  Scrum \n\n## 3.1  Product Owner  O  Product Owner , \"dono do produto\", \u00e9 o respons\u00e1vel por maximizar o valor do produto e do trabalho do Time de Desenvolvimento. Como isso \u00e9 feito pode variar por projeto ou time de desenvolvimento, sendo que o  Product Owner  \u00e9 a \u00fanica pessoa respons\u00e1vel por gerenciar o  Backlog  do Produto. O gerenciamento do  Backlog  do Produto inclui:\n- Expressar claramente os itens do  Backlog  do Produto;\n- Ordenar os itens do  Backlog  do Produto para alcan\u00e7ar melhor as metas e miss\u00f5es;\n- Garantir o valor do trabalho realizado pelo Time de Desenvolvimento;\n- Garantir que o  Backlog  do produto seja vis\u00edvel, transparente, claro para todos, e mostrar o que o Time  Scrum  vai trabalhar a seguir;\n- Garantir que o Time de Desenvolvimento entenda os itens do  Backlog  do Produto no n\u00edvel necess\u00e1rio. O  Product Owner  pode fazer o trabalho citado acima, ou delegar para o Time de Desenvolvimento faz\u00ea-lo. No entanto n\u00e3o \u00e9 muito recomendado j\u00e1 que o  Product Owner  continuar\u00e1 sendo o respons\u00e1vel pelos trabalhos. O  Product Owner  \u00e9 uma pessoa e n\u00e3o um comit\u00ea, mas pode representar o desejo de um comit\u00ea no  Backlog  do Produto, sendo que aqueles que quiserem uma altera\u00e7\u00e3o nas prioridades dos itens de  Backlog  devem convencer o  Product Owner  das necessidades de tais mudan\u00e7as. Para que o  Product Owner  tenha sucesso, toda a organiza\u00e7\u00e3o deve respeitar as suas decis\u00f5es, estas devendo ser vis\u00edveis no conte\u00fado e na prioriza\u00e7\u00e3o do  Backlog  do Produto. \n\n## 3.2  Scrum Master  O  Scrum Master  \u00e9 respons\u00e1vel por garantir que o  Scrum  seja entendido e aplicado, ou seja, para garantir que o Time  Scrum  adira \u00e0 teoria, pr\u00e1ticas e regras do  Scrum . O  Scrum Master  ajuda aqueles que est\u00e3o fora do Time  Scrum  a entender quais as suas intera\u00e7\u00f5es com o Time  Scrum  e se estas s\u00e3o \u00fateis, de modo que mostra, tamb\u00e9m, quais n\u00e3o s\u00e3o \u00fateis para o projeto. O  Scrum Master  ajuda todos a mudarem estas intera\u00e7\u00f5es para maximizar o valor criado pelo Time  Scrum .\n\n### 3.2.1 Pap\u00e9is do  Scrum Master \nO  Scrum Master  serve o  Product Owner  de v\u00e1rias maneiras, incluindo:\n- Encontrando t\u00e9cnicas para o gerenciamento efetivo do  Backlog  do Produto;\n- Claramente comunicar a vis\u00e3o, objetivo e itens do  Backlog  do Produto para o Time de Desenvolvimento;\n- Ensinar a Time  Scrum  a criar itens de  Backlog  do Produto de forma clara e concisa;\n- Compreender a longo-prazo o planejamento do Produto no ambiente emp\u00edrico;\n- Compreender e praticar a agilidade; \n- Facilitar os eventos  Scrum  conforme exigidos ou necess\u00e1rios.\n- Treinar o Time de Desenvolvimento em autogerenciamento e interdisciplinaridade;\n- Ensinar e liderar o Time de Desenvolvimento na cria\u00e7\u00e3o de produtos de alto valor;\n- Remover impedimentos para o progresso do Time de Desenvolvimento;\n- Facilitar os eventos  Scrum  conforme exigidos ou necess\u00e1rios;\n- Treinar o Time de Desenvolvimento em ambientes organizacionais nos quais o  Scrum  n\u00e3o \u00e9 totalmente adotado e compreendido;\n- Liderando e treinando a organiza\u00e7\u00e3o na ado\u00e7\u00e3o do  Scrum ;\n- Planejando implementa\u00e7\u00f5es  Scrum  dentro da organiza\u00e7\u00e3o;\n- Ajudando funcion\u00e1rios e partes interessadas a compreender e tornar aplic\u00e1vel o  Scrum  e o desenvolvimento de produto emp\u00edrico;\n- Causando mudan\u00e7as que aumentam a produtividade do Time  Scrum ;\n- Trabalhando com outros  Scrum Masters  para aumentar a efic\u00e1cia da aplica\u00e7\u00e3o do  Scrum  nas organiza\u00e7\u00f5es.\n\n## 3.3  Development Team   O Time de Desenvolvimento consiste de profissionais que realizamo trabalho de entregar uma vers\u00e3o us\u00e1vel que potencialmente incrementa o produto \u201cPronto\u201d ao final de cada  Sprint . Somente integrantes do Time de Desenvolvimento criam incrementos. Os Times de Desenvolvimento s\u00e3o estruturados e autorizados pela organiza\u00e7\u00e3o para organizar e gerenciar seu pr\u00f3prio trabalho. A sinergia resultante aperfei\u00e7oa a efici\u00eancia e a efic\u00e1cia do Time de Desenvolvimento como um todo.  O  Scrum Team  \u00e9 a equipe de desenvolvimento. Nela n\u00e3o existe necessariamente uma divis\u00e3o funcional atrav\u00e9s de pap\u00e9is tradicionais, tais como programador, designer, analista de testes ou arquiteto. Todos no projeto trabalham juntos para completar o conjunto de trabalho com o qual se comprometeram conjuntamente para um  Sprint . Um  Scrum Team  t\u00edpico tem de 6 a 10 pessoas, embora haja relatos de projetos  Scrum  com equipes maiores. A principal abordagem para trabalhar com equipes grandes no  Scrum  \u00e9 usando o conceito de _\"Scrum of Scrums\"_. Cada  Scrum Team  trabalha normalmente, mas cada equipe tamb\u00e9m contribui com uma pessoa que dever\u00e1 frequentar o _Scrum of Scrums Meeting_ para coordenar o trabalho de m\u00faltiplas equipes  Scrum .  O tamanho ideal do Time de Desenvolvimento deve ser pequeno o suficiente para se manter \u00e1gil e grande o suficiente para completar uma parcela significativa do trabalho dentro dos limites de tempo da  Sprint . Menos de 3 integrantes no Time de Desenvolvimento diminuem a intera\u00e7\u00e3o e resultam em um menor ganho de produtividade. Times de desenvolvimento menores podem encontrar restri\u00e7\u00f5es de habilidades durante a  Sprint , gerando um Time de Desenvolvimento incapaz de entregar um incremento potencialmente utiliz\u00e1vel. Havendo mais de 9 integrantes \u00e9 exigida muita coordena\u00e7\u00e3o. De maneira que o Time n\u00e3o pode ser grande demais ou pequeno demais.\n\n# 4. Artefatos\n\n## 4.1  Product Backlog  O  Product Backlog  \u00e9 uma lista contendo todas as funcionalidades desejadas para um produto. O conte\u00fado desta lista \u00e9 definido pelo  Product Owner . N\u00e3o tem a necessidade dessa lista estar completo no in\u00edcio de um projeto. Pode-se come\u00e7ar com tudo aquilo que \u00e9 mais \u00f3bvio em um primeiro momento. Com o tempo, o  Product Backlog  cresce e muda \u00e0 medida que se aprende mais sobre o produto e seus usu\u00e1rios.\n\n## 4.2  Charts  \n\n### 4.2.1  Velocity Chart          O  Velocity Chart  pode ajudar a determinar quantos pontos de trabalho pode ser conclu\u00eddo por  Sprint  para uma determinada equipe, se a composi\u00e7\u00e3o da equipe e dura\u00e7\u00e3o da  Sprint  permanecerem os mesmos. A Estimativa dos pontos de hist\u00f3ria devem ser precisos para o c\u00e1lculo do  Velocity  ser significativo. Pode-se criar  Velocity Chart  para lan\u00e7amentos ou  Sprints  conclu\u00eddas.        \n\n![Image Velocity Chart](https://www.scrumalliance.org/scrum/files/e3/e3a2ff2a-27a2-444c-81af-c2e8dbfb3128.jpg)   \n\n### 4.2.2 Burndown Chart  Burndown Chart  compara o progresso esperado  versus  o progresso real para releases e  Sprints . Este  Chart  pode ajudar a identificar problemas inesperados que podem estar afetando o progresso. Os usu\u00e1rios com as fun\u00e7\u00f5es  Scrum admin  ou  Scrum user  podem visualizar as informa\u00e7\u00f5es do  Burndown Chart . \n\n![Image_BurnDown_Chart](https://upload.wikimedia.org/wikipedia/commons/0/05/SampleBurndownChart.png)\n\n## 4.3  Sprints  Sprint  \u00e9 considerado como o cora\u00e7\u00e3o do  Scrum , \u00e9 o tempo que dura geralmente de um m\u00eas ou menos. Ao final de uma  Sprint  \u00e9 esperado que tenha um vers\u00e3o est\u00e1vel do produto e incrementada em rela\u00e7\u00e3o a vers\u00e3o anterior. O tempo de dura\u00e7\u00e3o de uma  Sprint  \u00e9 coerente com o esfor\u00e7o demandado para o desenvolvimento. Para iniciar uma  Sprint  \u00e9 necess\u00e1rio realizar a reuni\u00e3o de planejamento, reuni\u00f5es di\u00e1rias, o trabalho desenvolvido durante o per\u00edodo da  Sprint , a realiza\u00e7\u00e3o da revis\u00e3o de Sprint e a retrospectiva dela para poder encerr\u00e1-la.\n\n# 5. Reuni\u00f5es\n\n## 5.1  Daily Meetings   As reuni\u00f5es di\u00e1rias s\u00e3o reuni\u00f5es r\u00e1pidas, de aproximadamente 10 a 15 minutos, dependendo do tamanho da equipe, onde os participantes a realizam de p\u00e9. O objetivo desta \u00e9 explanar para o restante do time o que foi feito no dia anterior e o que pretende-se fazer no dia atual, bem como a exist\u00eancia de quaisquer impedimentos no desenvolvimento. Deste modo, todo o time est\u00e1 sempre atualizado em rela\u00e7\u00e3o ao andamento do projeto como um todo, n\u00e3o somente em suas demandas/tarefas, o que permite a possibilidade de tomadas de decis\u00e3o r\u00e1pidas e forte adapta\u00e7\u00e3o a mudan\u00e7as. As reuni\u00f5es di\u00e1rias s\u00e3o realizadas sempre no mesmo hor\u00e1rio e local.\n\n## 5.2 Retrospectiva A retrospectiva \u00e9 uma reuni\u00e3o realizada com o intuito de abordar os pontos positivos, negativos e de melhoria do per\u00edodo passado, com a finalidade de n\u00e3o repetir os erros e manter e/ou melhorar os acertos. Esta reuni\u00e3o pode ser realizada ao fim de cada  Sprint  ou em per\u00edodos pr\u00e9-determinados, como a cada m\u00eas, por exemplo.\n\n## 5.3 Revis\u00e3o da  Sprint  Revis\u00e3o de  Sprint  \u00e9 uma reuni\u00e3o realizada ao final de toda  Sprint , onde s\u00e3o mostrados ao restante do time tudo o que foi realizado durante o per\u00edodo da  Sprint  passada. Esta reuni\u00e3o pode incluir o(s) cliente(s).\n\n# 6. Refer\u00eancias\n* [Manifesto Agil](http://www.manifestoagil.com.br/)\n* [Guia do SCRUM](http://www.scrumguides.org/docs/scrumguide/v1/Scrum-Guide-Portuguese-BR.pdf)\n* [Service Now](http://wiki.servicenow.com/index.php?title=Scrum_Charts#gsc.tab=0)\n* [Metodologia \u00c1gil](http://www.desenvolvimentoagil.com.br/scrum/)\n* [Imagem: Ciclo do Scrum](http://www.desenvolvimentoagil.com.br/images/scrum/ciclo_scrum.gif)\n* [Imagem: Velocity Chart](https://www.scrumalliance.org/scrum/files/e3/e3a2ff2a-27a2-444c-81af-c2e8dbfb3128.jpg)\n* [Imagem: Burndown Chart](https://upload.wikimedia.org/wikipedia/commons/0/05/SampleBurndownChart.png)", 
            "title": "2. Principais Diferen\u00e7as: (Scrum vs Tradicionais)"
        }, 
        {
            "location": "/Programa\u00e7\u00e3o-Extrema-(XP)/", 
            "text": "Framework XP \n\n\n\n\n Planejamento \n\n\n Gerenciamento \n\n\n Design \n\n\n C\u00f3difica\u00e7\u00e3o \n\n\n Testes \n\n\n\n\n Valores XP \n\n\n\n\n Comunica\u00e7\u00e3o\n\n\n Coragem\n\n\n Feedback\n\n\n Respeito\n\n\n Simplicidade\n\n\n\n\n Funcionalidade Pronta XP \n\n\n\n\n Teste Unit\u00e1rio\n\n\n Programa\u00e7\u00e3o Pareada\n\n\n Por que parear com o coleguinha?\n\n\n Varia\u00e7\u00f5es de Pares\n\n\n Teste de aceita\u00e7\u00e3o\n\n\n Integra\u00e7\u00e3o Cont\u00ednua\n\n\n\n\n Refer\u00eancias\n\n\n\n\nFramework XP\n\n\nO XP, ou \nExtreme Programming\n, \u00e9 uma metodologia de desenvolvimento de software que tem como objetivo principal levar ao extremo boas pr\u00e1ticas de programa\u00e7\u00e3o e boas pr\u00e1ticas para o desenvolvimento de software no geral. O XP \u00e9 uma metodologia baseada em valores, que definem uma maneira harmoniosa de trabalho na equipe de desenvolvimento.\n\n\n\nO foco desta metodologia \u00e9 no desenvolvimento incremental e iterativo de sistemas orientados \u00e0 objetos nos quais os requisitos s\u00e3o inst\u00e1veis e/ou incertos e que possua uma equipe pequena.\n\n\n\n O XP define uma s\u00e9rie de regras para que o desenvolvimento seja realizado da melhor maneira poss\u00edvel:\n\n#### Planejamento:\n\n- As hist\u00f3rias de usu\u00e1rio s\u00e3o escritas\n- S\u00e2o feitas _releases_ pequenas e constantes.\n- O projeto \u00e9 dividido em itera\u00e7\u00f5es.\n- As itera\u00e7\u00f5es s\u00e3o planejadas no momento em que vai se come\u00e7ar o trabalho.\n\n#### Gerenciamento:\n\n- O time deve ter um espa\u00e7o aberto de trabalho.\n- O desenvolvimento deve ter uma velocidade sustent\u00e1vel.\n- _Stand-up meetings_ iniciam o dia de trabalho.\n- O _velocity_ \u00e9 sempre medido.\n- O XP deve ser consertado caso n\u00e3o esteja funcionando.\n\n#### Design\n\n- Simplicidade.\n- Crie solu\u00e7\u00f5es simples para explorar todas as solu\u00e7\u00f5es poss\u00edveis.\n- Funcionalidades n\u00e3o devem ser adicionadas antes da hora.\n- Refatore sempre que poss\u00edvel\n\n#### C\u00f3difica\u00e7\u00e3o\n\n- O cliente precisa estar sempre dispon\u00edvel.\n- O c\u00f3digo precisa ser escrito utilizando padr\u00f5es.\n- O c\u00f3digo \u00e9 feito utilizando pareamento (_pair programming_).\n- Apenas um par integra o c\u00f3digo de cada vez.\n- Toda a equipe deve participar da cria\u00e7\u00e3o de todas as partes do c\u00f3digo.\n\n#### Testes\n\n- Todo o c\u00f3digo deve ter testes unit\u00e1rios.\n- Todo o c\u00f3digo deve passar os testes unit\u00e1rios antes da _release_.\n- Se um bug existe, testes s\u00e3o criados.\n- Os testes de aceita\u00e7\u00e3o rodam com frequ\u00eancia.\n\n\n\nComo podemos notar, todas as boas pr\u00e1ticas s\u00e3o levadas ao extremo no XP.\nPode-se se dizer que \u00e9 uma metodologia bastante vol\u00e1til. Portanto, para que seja poss\u00edvel a adapta\u00e7\u00e3o \u00e0s frequentes mudan\u00e7as, o XP preconiza ciclos curtos que nos d\u00e1 previsibilidade e redu\u00e7\u00e3o de incertezas/riscos, simplicidade e melhorias constantes de c\u00f3digo (\nrefactoring\n) para facilitar a mudan\u00e7a e Testes Automatizados e Integra\u00e7\u00e3o Cont\u00ednua para aumentar a confian\u00e7a.\n\n\n\nO m\u00e9todo XP preconiza que Codifica\u00e7\u00e3o \u00e9 a atividade central do projeto, que os Testes (que tamb\u00e9m s\u00e3o c\u00f3digo) servem de especifica\u00e7\u00e3o de requisitos, e a Comunica\u00e7\u00e3o oral entre desenvolvedores \u00e9 fundamental, o que d\u00e1 proximidade a equipe.\n\n\n\nIsto n\u00e3o quer dizer que a equipe XP n\u00e3o constr\u00f3i documentos e n\u00e3o faz modelagem, ela s\u00f3 n\u00e3o considera que um modelo \u00e9 um documento. Modelos s\u00e3o feitos o tempo todo seja como quadro branco, sess\u00f5es de design, etc, mas servem como um suporte para o concreto que realmente importa.\n\n\n# Valores XP\n* **Comunica\u00e7\u00e3o**\n\n\nTodo o processo \u00e1gil \u00e9 baseado na comunica\u00e7\u00e3o. A comunica\u00e7\u00e3o \u00e9 essencial para o \u00eaxito da metodologia \u00e0gil e pode ser realizada de diversas formas, n\u00e3o somente por documenta\u00e7\u00e3o como nas metodologias tradicionais. A comunica\u00e7\u00e3o entre os desenvolvedores instiga a dissemina\u00e7\u00e3o do conhecimento dentro da equipe, evoluindo-a em aspectos t\u00e9cnicos. J\u00e1 a comunica\u00e7\u00e3o com o cliente garante que o produto entregue atenda \u00e0 suas expectativas.\n\n\n* **Coragem**\n\n\nConsiste na coragem durante a implementa\u00e7\u00e3o de tomar decis\u00f5es que sejam melhores para a equipe e para o c\u00f3digo. Por exemplo, coragem para refatorar c\u00f3digos j\u00e1 implementadas para que a qualidade do c\u00f3digo melhore.\n\n\n* **Feedback**\n\n\nO \nfeedback\n consiste em uma frequente comunica\u00e7\u00e3o entre o cliente e a equipe que seja um retorno sobre o sistema. Por exemplo, o que est\u00e1 bom, o que est\u00e1 ruim, o que deve ser implementado, o que deve ser alterado, o que realmente \u00e9 necess\u00e1rio naquele momento e para aquele sistema. Dessa forma, a equipe que est\u00e1 desenvolvendo o sistema tem uma vis\u00e3o clara acerca dos requisitos e do que \u00e9 necess\u00e1rio que seja implementado.\n\n\n* **Respeito**\n\n\nO respeito \u00e9 essencial para uma boa conviv\u00eancia da equipe. Todos os integrantes devem demonstrar respeito uns aos outros, n\u00e3o desmerecer as id\u00e9ias ou indaga\u00e7\u00f5es alheias. \n\n\n* **Simplicidade**\n\n\nSempre que foi iniciado a implementa\u00e7\u00e3o de algo, deve ser questionado qual a forma mais f\u00e1cil de implementar aquele escopo. Quanto mais simples, melhor a manutenibilidade e a qualidade do c\u00f3digo.\n\n\n# Funcionalidade Pronta XP\n\n## Teste Unit\u00e1rio\n\nEste teste \u00e9 utilizado para validar as classes b\u00e1sicas e os componentes do sistema que s\u00e3o considerados os menores elementos test\u00e1veis. Consiste em verificar se o fluxo de controle e dados est\u00e3o corretos. Deve ser realizado no in\u00edcio da itera\u00e7\u00e3o.\n\n\n* S\u00e3o escritos pelos desenvolvedores enquanto codificam o sistema.\n* Devem ser feitos de modo que sejam f\u00e1ceis de executar e e re-executar v\u00e1rias e v\u00e1rias vezes para validar o sistema.\n* Devem ser criados para todas as classes do sistema.\n* S\u00e3o implementados para todos os m\u00e9todos do sistema.\n* S\u00e3o escritos antes e ao decorrer da produ\u00e7\u00e3o do sistema.\n* Devem ser o mais simples poss\u00edvel.\n\n## Programa\u00e7\u00e3o Pareada\n\nSugere que todo e qualquer c\u00f3digo produzido no projeto seja sempre implementado por duas pessoas juntas, diante do mesmo computador, revezando-se no teclado. Al\u00e9m de parecer ter poucos benef\u00edcios, temos a impress\u00e3o de que ela ir\u00e1 consumir mais recursos ou ir\u00e1 elevar o tempo do desenvolvimento. \n\n### Por que parear com o coleguinha?\n\n\n\nA programa\u00e7\u00e3o em par \u00e9 uma forma eficaz de reduzir a incid\u00eancia de bugs em um sistema. Quando dois desenvolvedores est\u00e3o programando em par, um deles est\u00e1 com as m\u00e3os no teclado e no mouse. O outro est\u00e1 sentado ao lado, olhando para a mesma tela e preocupado em resolver o mesmo problema. \u00c9 importante que eles conversem o tempo todo e troquem id\u00e9ias sobre a solu\u00e7\u00e3o.\n\n\n\nA programa\u00e7\u00e3o em par tamb\u00e9m ajuda os desenvolvedores a criarem solu\u00e7\u00f5es mais simples, mais r\u00e1pidas de implementar e mais f\u00e1ceis de manter. Isso ocorre em grande parte devido \u00e0 oportunidade de dialogar e trocar id\u00e9ias sobre programas que estejam sendo desenvolvidos. Quando nos deparamos com um problema, buscamos uma solu\u00e7\u00e3o usando todo e qualquer recurso que esteja a nossa disposi\u00e7\u00e3o. E, assim que encontramos uma solu\u00e7\u00e3o, encerramos a busca e a utilizamos.\n\n\n\nAl\u00e9m do mais, a programa\u00e7\u00e3o em par produz um efeito conhecido como \"press\u00e3o do par\" que faz com que os desenvolvedores tenham maior foco na atividade e faz com que isso se mantenha por mais tempo. Imagine que voc\u00ea esteja programando em par e, de repente, resolva olhar seus emails. Trata-se de uma situa\u00e7\u00e3o embara\u00e7osa, isso faz com que o foco seja mantido no desenvolvimento.\n\n\n\nUma das caracter\u00edsticas mais marcantes da programa\u00e7\u00e3o em par \u00e9 a sua capacidade de dissemina\u00e7\u00e3o de conhecimento, especialmente em projetos XP, nos quais os desenvolvedores sempre trocam de pares, fazendo com que haja maior compartilhamento de informa\u00e7\u00f5es ao longo do projeto.\n\n\n\nA programa\u00e7\u00e3o em par tamb\u00e9m \u00e9 uma forma de fazer com que o desenvolvedor tenha mais confian\u00e7a no c\u00f3digo que produz. Afinal, o c\u00f3digo foi produzido por ele e mais outra pessoa que o ajudou a revis\u00e1-lo. Quando sabemos que mais uma pessoa, ou talvez v\u00e1rias, j\u00e1 olharam para o c\u00f3digo no qual trabalhamos e est\u00e3o de acordo sobre o mesmo, temos maior confian\u00e7a de que ele realmente ir\u00e1 funcionar. Isso significa que a programa\u00e7\u00e3o em par reduz o estresse do desenvolvedor.\n\n\n\nConsequentemente, as caracter\u00edsticas apresentadas acima fazem com que a programa\u00e7\u00e3o em par acelere o desenvolvimento significativamente, embora \u00e0 primeira vista pare\u00e7a o contr\u00e1rio. Em fun\u00e7\u00e3o dos benef\u00edcios acima, uma atividade feita em par normalmente \u00e9 encerrada mais rapidamente que outra feita por um programador solit\u00e1rio, aumentando a produtividade.\n\n\n\nPair programming\n\n\n### Varia\u00e7\u00f5es de Pares\n**Especialista x Especialista**  \n\n\nEssa varia\u00e7\u00e3o pode gerar um aumento enorme de produtividade e grandes resultados, entretanto nela pode haver uma falta de resolver problemas de novas formas, visto que dificilmente algu\u00e9m da dupla questionar\u00e1 praticas j\u00e1 estabelecidas.\n\n\n**Especialista x Principiante**  \n\nEssa varia\u00e7\u00e3o cria uma excelente oportunidade para o expert mentorear o aprendiz. Ela proporciona a cria\u00e7\u00e3o de novas ideias, visto que o aprendiz deve buscar questionar e aprender pr\u00e1ticas estabelecidas e o expert tem que usar os conhecimentos adquiridos com essas pr\u00e1ticas para explic\u00e1-las e question\u00e1-las tamb\u00e9m. \u00c9 muito importante que o aprendiz n\u00e3o haja passivamente no processo e n\u00e3o hesite em participar.\n  \n\n**Principiante x Principiante**  \n\nPode gerar ganhos de produtividade maior do que dois aprendizes trabalhando sozinhos, entretanto n\u00e3o \u00e9 uma varia\u00e7\u00e3o muito encorajada.\n  \n\n## Teste de aceita\u00e7\u00e3o\n\nOs Testes de Aceita\u00e7\u00e3o consistem no teste de uma poss\u00edvel aceita\u00e7\u00e3o por parte do cliente. Testes de aceita\u00e7\u00e3o est\u00e3o intimamente ligados com as \nuser stories\n. O teste de aceita\u00e7\u00e3o visa validar com o cliente o que foi definido nos requisitos do \nsoftware\n, portanto, s\u00e3o usados para verificar se o produto desenvolvido est\u00e1 de acordo com o que foi estabelecido nos requisitos. Desse modo os testes de aceita\u00e7\u00e3o est\u00e3o ligadas as funcionalidades do sistema, onde entradas podem ser simuladas e o comportamento de sa\u00edda pode ser observada, esse comportamento deve ser compat\u00edvel com o temos previamente definidos (requisitos).\n\n\nTestes de aceita\u00e7\u00e3o visam testar o sistema do ponto de vista do usu\u00e1rio, de modo que s\u00e3o menos suscet\u00edveis a altera\u00e7\u00f5es. Como o sistema \u00e9 testado com todos os componentes interligados e configurados, inclusive bancos de dados e gerenciadores de filas, h\u00e1 garantias de que cada servi\u00e7o oferecido esteja funcionando.\n\n## Integra\u00e7\u00e3o Cont\u00ednua\n\n\nIntegra\u00e7\u00e3o cont\u00ednua consiste em integrar o trabalho diversas vezes ao dia, ao inv\u00e9s de uma \u00fanica vez, assegurando que a base de c\u00f3digo permane\u00e7a consistente ao final de cada integra\u00e7\u00e3o. O objetivo principal de utilizar a integra\u00e7\u00e3o cont\u00ednua \u00e9 verificar se as altera\u00e7\u00f5es ou novas funcionalidades n\u00e3o criaram novos defeitos no projeto j\u00e1 existente.\n\n\nEsse conceito de integra\u00e7\u00e3o cont\u00ednua est\u00e1 atrelado \u00e0 aplica\u00e7\u00e3o de controle de versionamento, geralmente feito com o uso de alguma ferramenta, como o github. O controle de versionamento permite restaurar vers\u00f5es anteriores do sistema, comparar c\u00f3digos, gerenciar altera\u00e7\u00f5es, entre outros, e \u00e9 utilizado por equipes de desenvolvimento que compartilham mesmo c\u00f3digo e projeto. \n\n\nO controle de vers\u00e3o funcionar\u00e1 de forma b\u00e1sica da seguinte forma:\n\n* O desenvolvedor faz o seu c\u00f3digo, efetua um _build_ (compilar, preparar o execut\u00e1vel, rodar os testes automatizados, etc) antes de integrar seu c\u00f3digo com a base principal;\n* Ap\u00f3s realizar o _build_, o sistema deve ser integrado a base do sistema de controle de vers\u00e3o atrav\u00e9s de sincroniza\u00e7\u00e3o;\n\n\nEste processo deve ser feito frequentemente, evitando-se assim o ac\u00famulo de codifica\u00e7\u00e3o para a integra\u00e7\u00e3o ao reposit\u00f3rio. Algumas metodologias ditam que o desenvolvedor s\u00f3 pode considerar como pronto o trabalho quando o trabalho estiver sincronizado e ent\u00e3o o desenvolvedor realizar um \nbuild\n na m\u00e1quina de integra\u00e7\u00e3o e ap\u00f3s todos os testes serem executados com sucesso.\n\n\nNa integra\u00e7\u00e3o cont\u00ednua o processo de \nbuild\n integrado deve ser feito constantemente, sendo sincronizado sempre que poss\u00edvel, evitando o ac\u00famulo de c\u00f3digos e de testes. Isto porque \u00e9 mais f\u00e1cil encontrar erros em pequenas integra\u00e7\u00f5es do que em uma integra\u00e7\u00e3o grande.\n\n\nNesse contexto de c\u00f3digo compartilhado e versionamento centralizado por uma ferramenta, a integra\u00e7\u00e3o cont\u00ednua, ou seja, a comunica\u00e7\u00e3o entre as partes que cada desenvolvedor construiu, permite que conflitos de vers\u00e3o sejam resolvidos mais r\u00e1pido, desde que a integra\u00e7\u00e3o ocorra continuamente.\n\n\nA chave para uma boa integra\u00e7\u00e3o, como visto anteriormente, \u00e9 um ambiente de controle de vers\u00e3o centralizado, \nbuilds\n e testes automatizados. Essa pr\u00e1tica reduz erros e riscos cometidos pela equipe, pois como o sistema \u00e9 integrado cont\u00ednua e rapidamente, os erros tamb\u00e9m s\u00e3o detectados na mesma velocidade.\n\n## Refer\u00eancias\n* [Desenvolvimento \u00c1gil](http://www.desenvolvimentoagil.com.br/xp/valores/)\n* [Desenvolvimento XP](http://xp.edugraf.ufsc.br/bin/view/XP/TesteAceitacaoXtesteUnidade)\n* [Integra\u00e7\u00e3o Cont\u00ednua](http://www.desenvolvimentoagil.com.br/xp/praticas/integracao)\n* [Integra\u00e7\u00e3o Cont\u00ednua](http://www.devmedia.com.br/integracao-continua-uma-introducao-ao-assunto/28002)", 
            "title": "Programa\u00e7\u00e3o Extrema (XP)"
        }, 
        {
            "location": "/Programa\u00e7\u00e3o-Extrema-(XP)/#framework-xp", 
            "text": "O XP, ou  Extreme Programming , \u00e9 uma metodologia de desenvolvimento de software que tem como objetivo principal levar ao extremo boas pr\u00e1ticas de programa\u00e7\u00e3o e boas pr\u00e1ticas para o desenvolvimento de software no geral. O XP \u00e9 uma metodologia baseada em valores, que definem uma maneira harmoniosa de trabalho na equipe de desenvolvimento.  O foco desta metodologia \u00e9 no desenvolvimento incremental e iterativo de sistemas orientados \u00e0 objetos nos quais os requisitos s\u00e3o inst\u00e1veis e/ou incertos e que possua uma equipe pequena.   O XP define uma s\u00e9rie de regras para que o desenvolvimento seja realizado da melhor maneira poss\u00edvel:\n\n#### Planejamento:\n\n- As hist\u00f3rias de usu\u00e1rio s\u00e3o escritas\n- S\u00e2o feitas _releases_ pequenas e constantes.\n- O projeto \u00e9 dividido em itera\u00e7\u00f5es.\n- As itera\u00e7\u00f5es s\u00e3o planejadas no momento em que vai se come\u00e7ar o trabalho.\n\n#### Gerenciamento:\n\n- O time deve ter um espa\u00e7o aberto de trabalho.\n- O desenvolvimento deve ter uma velocidade sustent\u00e1vel.\n- _Stand-up meetings_ iniciam o dia de trabalho.\n- O _velocity_ \u00e9 sempre medido.\n- O XP deve ser consertado caso n\u00e3o esteja funcionando.\n\n#### Design\n\n- Simplicidade.\n- Crie solu\u00e7\u00f5es simples para explorar todas as solu\u00e7\u00f5es poss\u00edveis.\n- Funcionalidades n\u00e3o devem ser adicionadas antes da hora.\n- Refatore sempre que poss\u00edvel\n\n#### C\u00f3difica\u00e7\u00e3o\n\n- O cliente precisa estar sempre dispon\u00edvel.\n- O c\u00f3digo precisa ser escrito utilizando padr\u00f5es.\n- O c\u00f3digo \u00e9 feito utilizando pareamento (_pair programming_).\n- Apenas um par integra o c\u00f3digo de cada vez.\n- Toda a equipe deve participar da cria\u00e7\u00e3o de todas as partes do c\u00f3digo.\n\n#### Testes\n\n- Todo o c\u00f3digo deve ter testes unit\u00e1rios.\n- Todo o c\u00f3digo deve passar os testes unit\u00e1rios antes da _release_.\n- Se um bug existe, testes s\u00e3o criados.\n- Os testes de aceita\u00e7\u00e3o rodam com frequ\u00eancia. Como podemos notar, todas as boas pr\u00e1ticas s\u00e3o levadas ao extremo no XP.\nPode-se se dizer que \u00e9 uma metodologia bastante vol\u00e1til. Portanto, para que seja poss\u00edvel a adapta\u00e7\u00e3o \u00e0s frequentes mudan\u00e7as, o XP preconiza ciclos curtos que nos d\u00e1 previsibilidade e redu\u00e7\u00e3o de incertezas/riscos, simplicidade e melhorias constantes de c\u00f3digo ( refactoring ) para facilitar a mudan\u00e7a e Testes Automatizados e Integra\u00e7\u00e3o Cont\u00ednua para aumentar a confian\u00e7a.  O m\u00e9todo XP preconiza que Codifica\u00e7\u00e3o \u00e9 a atividade central do projeto, que os Testes (que tamb\u00e9m s\u00e3o c\u00f3digo) servem de especifica\u00e7\u00e3o de requisitos, e a Comunica\u00e7\u00e3o oral entre desenvolvedores \u00e9 fundamental, o que d\u00e1 proximidade a equipe.  Isto n\u00e3o quer dizer que a equipe XP n\u00e3o constr\u00f3i documentos e n\u00e3o faz modelagem, ela s\u00f3 n\u00e3o considera que um modelo \u00e9 um documento. Modelos s\u00e3o feitos o tempo todo seja como quadro branco, sess\u00f5es de design, etc, mas servem como um suporte para o concreto que realmente importa. \n\n# Valores XP\n* **Comunica\u00e7\u00e3o** Todo o processo \u00e1gil \u00e9 baseado na comunica\u00e7\u00e3o. A comunica\u00e7\u00e3o \u00e9 essencial para o \u00eaxito da metodologia \u00e0gil e pode ser realizada de diversas formas, n\u00e3o somente por documenta\u00e7\u00e3o como nas metodologias tradicionais. A comunica\u00e7\u00e3o entre os desenvolvedores instiga a dissemina\u00e7\u00e3o do conhecimento dentro da equipe, evoluindo-a em aspectos t\u00e9cnicos. J\u00e1 a comunica\u00e7\u00e3o com o cliente garante que o produto entregue atenda \u00e0 suas expectativas. \n\n* **Coragem** Consiste na coragem durante a implementa\u00e7\u00e3o de tomar decis\u00f5es que sejam melhores para a equipe e para o c\u00f3digo. Por exemplo, coragem para refatorar c\u00f3digos j\u00e1 implementadas para que a qualidade do c\u00f3digo melhore. \n\n* **Feedback** O  feedback  consiste em uma frequente comunica\u00e7\u00e3o entre o cliente e a equipe que seja um retorno sobre o sistema. Por exemplo, o que est\u00e1 bom, o que est\u00e1 ruim, o que deve ser implementado, o que deve ser alterado, o que realmente \u00e9 necess\u00e1rio naquele momento e para aquele sistema. Dessa forma, a equipe que est\u00e1 desenvolvendo o sistema tem uma vis\u00e3o clara acerca dos requisitos e do que \u00e9 necess\u00e1rio que seja implementado. \n\n* **Respeito** O respeito \u00e9 essencial para uma boa conviv\u00eancia da equipe. Todos os integrantes devem demonstrar respeito uns aos outros, n\u00e3o desmerecer as id\u00e9ias ou indaga\u00e7\u00f5es alheias.  \n\n* **Simplicidade** Sempre que foi iniciado a implementa\u00e7\u00e3o de algo, deve ser questionado qual a forma mais f\u00e1cil de implementar aquele escopo. Quanto mais simples, melhor a manutenibilidade e a qualidade do c\u00f3digo. \n\n# Funcionalidade Pronta XP\n\n## Teste Unit\u00e1rio Este teste \u00e9 utilizado para validar as classes b\u00e1sicas e os componentes do sistema que s\u00e3o considerados os menores elementos test\u00e1veis. Consiste em verificar se o fluxo de controle e dados est\u00e3o corretos. Deve ser realizado no in\u00edcio da itera\u00e7\u00e3o. \n\n* S\u00e3o escritos pelos desenvolvedores enquanto codificam o sistema.\n* Devem ser feitos de modo que sejam f\u00e1ceis de executar e e re-executar v\u00e1rias e v\u00e1rias vezes para validar o sistema.\n* Devem ser criados para todas as classes do sistema.\n* S\u00e3o implementados para todos os m\u00e9todos do sistema.\n* S\u00e3o escritos antes e ao decorrer da produ\u00e7\u00e3o do sistema.\n* Devem ser o mais simples poss\u00edvel.\n\n## Programa\u00e7\u00e3o Pareada Sugere que todo e qualquer c\u00f3digo produzido no projeto seja sempre implementado por duas pessoas juntas, diante do mesmo computador, revezando-se no teclado. Al\u00e9m de parecer ter poucos benef\u00edcios, temos a impress\u00e3o de que ela ir\u00e1 consumir mais recursos ou ir\u00e1 elevar o tempo do desenvolvimento. \n\n### Por que parear com o coleguinha?  A programa\u00e7\u00e3o em par \u00e9 uma forma eficaz de reduzir a incid\u00eancia de bugs em um sistema. Quando dois desenvolvedores est\u00e3o programando em par, um deles est\u00e1 com as m\u00e3os no teclado e no mouse. O outro est\u00e1 sentado ao lado, olhando para a mesma tela e preocupado em resolver o mesmo problema. \u00c9 importante que eles conversem o tempo todo e troquem id\u00e9ias sobre a solu\u00e7\u00e3o.  A programa\u00e7\u00e3o em par tamb\u00e9m ajuda os desenvolvedores a criarem solu\u00e7\u00f5es mais simples, mais r\u00e1pidas de implementar e mais f\u00e1ceis de manter. Isso ocorre em grande parte devido \u00e0 oportunidade de dialogar e trocar id\u00e9ias sobre programas que estejam sendo desenvolvidos. Quando nos deparamos com um problema, buscamos uma solu\u00e7\u00e3o usando todo e qualquer recurso que esteja a nossa disposi\u00e7\u00e3o. E, assim que encontramos uma solu\u00e7\u00e3o, encerramos a busca e a utilizamos.  Al\u00e9m do mais, a programa\u00e7\u00e3o em par produz um efeito conhecido como \"press\u00e3o do par\" que faz com que os desenvolvedores tenham maior foco na atividade e faz com que isso se mantenha por mais tempo. Imagine que voc\u00ea esteja programando em par e, de repente, resolva olhar seus emails. Trata-se de uma situa\u00e7\u00e3o embara\u00e7osa, isso faz com que o foco seja mantido no desenvolvimento.  Uma das caracter\u00edsticas mais marcantes da programa\u00e7\u00e3o em par \u00e9 a sua capacidade de dissemina\u00e7\u00e3o de conhecimento, especialmente em projetos XP, nos quais os desenvolvedores sempre trocam de pares, fazendo com que haja maior compartilhamento de informa\u00e7\u00f5es ao longo do projeto.  A programa\u00e7\u00e3o em par tamb\u00e9m \u00e9 uma forma de fazer com que o desenvolvedor tenha mais confian\u00e7a no c\u00f3digo que produz. Afinal, o c\u00f3digo foi produzido por ele e mais outra pessoa que o ajudou a revis\u00e1-lo. Quando sabemos que mais uma pessoa, ou talvez v\u00e1rias, j\u00e1 olharam para o c\u00f3digo no qual trabalhamos e est\u00e3o de acordo sobre o mesmo, temos maior confian\u00e7a de que ele realmente ir\u00e1 funcionar. Isso significa que a programa\u00e7\u00e3o em par reduz o estresse do desenvolvedor.  Consequentemente, as caracter\u00edsticas apresentadas acima fazem com que a programa\u00e7\u00e3o em par acelere o desenvolvimento significativamente, embora \u00e0 primeira vista pare\u00e7a o contr\u00e1rio. Em fun\u00e7\u00e3o dos benef\u00edcios acima, uma atividade feita em par normalmente \u00e9 encerrada mais rapidamente que outra feita por um programador solit\u00e1rio, aumentando a produtividade.  Pair programming \n\n### Varia\u00e7\u00f5es de Pares\n**Especialista x Especialista**   Essa varia\u00e7\u00e3o pode gerar um aumento enorme de produtividade e grandes resultados, entretanto nela pode haver uma falta de resolver problemas de novas formas, visto que dificilmente algu\u00e9m da dupla questionar\u00e1 praticas j\u00e1 estabelecidas. \n\n**Especialista x Principiante**   Essa varia\u00e7\u00e3o cria uma excelente oportunidade para o expert mentorear o aprendiz. Ela proporciona a cria\u00e7\u00e3o de novas ideias, visto que o aprendiz deve buscar questionar e aprender pr\u00e1ticas estabelecidas e o expert tem que usar os conhecimentos adquiridos com essas pr\u00e1ticas para explic\u00e1-las e question\u00e1-las tamb\u00e9m. \u00c9 muito importante que o aprendiz n\u00e3o haja passivamente no processo e n\u00e3o hesite em participar.   \n\n**Principiante x Principiante**   Pode gerar ganhos de produtividade maior do que dois aprendizes trabalhando sozinhos, entretanto n\u00e3o \u00e9 uma varia\u00e7\u00e3o muito encorajada.   \n\n## Teste de aceita\u00e7\u00e3o Os Testes de Aceita\u00e7\u00e3o consistem no teste de uma poss\u00edvel aceita\u00e7\u00e3o por parte do cliente. Testes de aceita\u00e7\u00e3o est\u00e3o intimamente ligados com as  user stories . O teste de aceita\u00e7\u00e3o visa validar com o cliente o que foi definido nos requisitos do  software , portanto, s\u00e3o usados para verificar se o produto desenvolvido est\u00e1 de acordo com o que foi estabelecido nos requisitos. Desse modo os testes de aceita\u00e7\u00e3o est\u00e3o ligadas as funcionalidades do sistema, onde entradas podem ser simuladas e o comportamento de sa\u00edda pode ser observada, esse comportamento deve ser compat\u00edvel com o temos previamente definidos (requisitos). Testes de aceita\u00e7\u00e3o visam testar o sistema do ponto de vista do usu\u00e1rio, de modo que s\u00e3o menos suscet\u00edveis a altera\u00e7\u00f5es. Como o sistema \u00e9 testado com todos os componentes interligados e configurados, inclusive bancos de dados e gerenciadores de filas, h\u00e1 garantias de que cada servi\u00e7o oferecido esteja funcionando.\n\n## Integra\u00e7\u00e3o Cont\u00ednua Integra\u00e7\u00e3o cont\u00ednua consiste em integrar o trabalho diversas vezes ao dia, ao inv\u00e9s de uma \u00fanica vez, assegurando que a base de c\u00f3digo permane\u00e7a consistente ao final de cada integra\u00e7\u00e3o. O objetivo principal de utilizar a integra\u00e7\u00e3o cont\u00ednua \u00e9 verificar se as altera\u00e7\u00f5es ou novas funcionalidades n\u00e3o criaram novos defeitos no projeto j\u00e1 existente. Esse conceito de integra\u00e7\u00e3o cont\u00ednua est\u00e1 atrelado \u00e0 aplica\u00e7\u00e3o de controle de versionamento, geralmente feito com o uso de alguma ferramenta, como o github. O controle de versionamento permite restaurar vers\u00f5es anteriores do sistema, comparar c\u00f3digos, gerenciar altera\u00e7\u00f5es, entre outros, e \u00e9 utilizado por equipes de desenvolvimento que compartilham mesmo c\u00f3digo e projeto.  O controle de vers\u00e3o funcionar\u00e1 de forma b\u00e1sica da seguinte forma:\n\n* O desenvolvedor faz o seu c\u00f3digo, efetua um _build_ (compilar, preparar o execut\u00e1vel, rodar os testes automatizados, etc) antes de integrar seu c\u00f3digo com a base principal;\n* Ap\u00f3s realizar o _build_, o sistema deve ser integrado a base do sistema de controle de vers\u00e3o atrav\u00e9s de sincroniza\u00e7\u00e3o; Este processo deve ser feito frequentemente, evitando-se assim o ac\u00famulo de codifica\u00e7\u00e3o para a integra\u00e7\u00e3o ao reposit\u00f3rio. Algumas metodologias ditam que o desenvolvedor s\u00f3 pode considerar como pronto o trabalho quando o trabalho estiver sincronizado e ent\u00e3o o desenvolvedor realizar um  build  na m\u00e1quina de integra\u00e7\u00e3o e ap\u00f3s todos os testes serem executados com sucesso. Na integra\u00e7\u00e3o cont\u00ednua o processo de  build  integrado deve ser feito constantemente, sendo sincronizado sempre que poss\u00edvel, evitando o ac\u00famulo de c\u00f3digos e de testes. Isto porque \u00e9 mais f\u00e1cil encontrar erros em pequenas integra\u00e7\u00f5es do que em uma integra\u00e7\u00e3o grande. Nesse contexto de c\u00f3digo compartilhado e versionamento centralizado por uma ferramenta, a integra\u00e7\u00e3o cont\u00ednua, ou seja, a comunica\u00e7\u00e3o entre as partes que cada desenvolvedor construiu, permite que conflitos de vers\u00e3o sejam resolvidos mais r\u00e1pido, desde que a integra\u00e7\u00e3o ocorra continuamente. A chave para uma boa integra\u00e7\u00e3o, como visto anteriormente, \u00e9 um ambiente de controle de vers\u00e3o centralizado,  builds  e testes automatizados. Essa pr\u00e1tica reduz erros e riscos cometidos pela equipe, pois como o sistema \u00e9 integrado cont\u00ednua e rapidamente, os erros tamb\u00e9m s\u00e3o detectados na mesma velocidade.\n\n## Refer\u00eancias\n* [Desenvolvimento \u00c1gil](http://www.desenvolvimentoagil.com.br/xp/valores/)\n* [Desenvolvimento XP](http://xp.edugraf.ufsc.br/bin/view/XP/TesteAceitacaoXtesteUnidade)\n* [Integra\u00e7\u00e3o Cont\u00ednua](http://www.desenvolvimentoagil.com.br/xp/praticas/integracao)\n* [Integra\u00e7\u00e3o Cont\u00ednua](http://www.devmedia.com.br/integracao-continua-uma-introducao-ao-assunto/28002)", 
            "title": "Framework XP"
        }, 
        {
            "location": "/Indicadores-\u00c1geis/", 
            "text": "1. Indicadores de Qualidade do Processo\n\n\n\n\n1.1 Fechamento da \nSprint\n\n\n1.2 \nBurndown\n\n\n1.3 \nVelocity\n\n\n1.4 Quadro da Retrospectiva\n\n\n1.5 Quadro de Conhecimento\n\n\n\n\n2. Indicadores de Qualidade de C\u00f3digo\n\n\n\n\n2.1 M\u00e9tricas\n\n\n\n\n3. EVM\n\n * \n3.1 BAC\n\n * \n3.2 Valor Planejado (PV) e Custo Real (AC)\n\n * \n3.3 Valor Agregado (EV)\n\n * \n3.4 Varia\u00e7\u00e3o do Custo e Varia\u00e7\u00e3o do Prazo\n\n * \n3.5 \u00cdndice de Desempenho de Custo (CPI) e \u00cdndice de Desempenho de Prazo (SPI)\n\n\n\n\n1. Indicadores de Qualidade do Processo\n\n\n1.1 Fechamento da \nSprint\n\n\nO fechamento da \nsprint\n indica se as hist\u00f3rias planejadas para aquela \nsprint\n foram conclu\u00eddas ou n\u00e3o. Esse indicador auxilia no acompanhamento do progresso do valor agregado do projeto em rela\u00e7\u00e3o ao que foi planejado at\u00e9 ent\u00e3o. O melhor indicador poss\u00edvel \u00e9 que todas as hist\u00f3rias planejadas estejam conclu\u00eddas, caso contr\u00e1rio, \u00e9 necess\u00e1rio adicion\u00e1-la no planejamento de futuras \nsprint\n se poss\u00edvel.\n\n\n\n1.2 \nBurndown\n\n\nO \nburndown\n indica a frequ\u00eancia de trabalho da equipe durante a \nsprint\n. Na coluna vertical, \u00e9 indicado o n\u00famero total de pontos planejados para aquela \nsprint\n e na coluna horizontal as datas contidas no intervalo da dura\u00e7\u00e3o da \nsprint\n. A linha azul indica os pontos planejados, \u00e9 decrescente de forma constante e indica que idealmente os pontos devem diminuir gradativamente e constantemente ao passar da \nsprint\n. A linha vermelha representa o progresso real da equipe, ou seja, a quantidade de pontos conclu\u00eddo e o per\u00edodo da conclus\u00e3o. Esse indicador auxilia a equipe \u00e0 observar a const\u00e2ncia dos pontos conclu\u00eddos e portanto melhorar nas pr\u00f3ximas \nsprints\n fazendo com que o sistema receba um incremento com uma alta frequ\u00eancia.\n\n\n\n1.3 \nVelocity\n\n\nO \nvelocity\n indica a quantidade de pontos que a equipe consegue concluir em uma \nsprint\n. O gr\u00e1fico possui uma coluna azul que indica a quantidade de pontos planejados para aquela \nsprint\n e a coluna vermelha que indica a quantidade de pontos conclu\u00eddos naquela \nsprint\n. O valor do velocity (em verde) \u00e9 calculado a partir da divis\u00e3o entre o n\u00famero de pontos conclu\u00eddos at\u00e9 aquela \nsprint\n e o n\u00famero de semanas de desenvolvimento at\u00e9 aquela sprint. Portanto, este valor indica a m\u00e9dia de produtividade da equipe at\u00e9 a \nsprint\n indicada.\n\n\n\nExemplo de um \nvelocity\n:\n\n![](https://raw.githubusercontent.com/wiki/fga-gpp-mds/00-Disciplina/img/velocity-exemplo.png)\n\n### 1.4 Quadro da Retrospectiva\n\n\nO quadro da retrospectiva geralmente possui tr\u00eas t\u00f3picos:\n\n * Os **pontos negativos** em rela\u00e7\u00e3o a \nsprint\n realizada. Este indicador ajuda a identificar eventuais problemas no processo.\n * Os **pontos positivos** em rela\u00e7\u00e3o a \nsprint\n realizada. Este indicador ajuda a identificar o que est\u00e1 correto e que deve continuar sendo realizado nas outras \nsprints\n no processo.\n * As **melhorias** que s\u00e3o propostas pela equipe de forma a indicar solu\u00e7\u00f5es para os pontos negativos.\n\n\nPortanto, \u00e9 um indicador importante para o processo visando sempre aprimor\u00e1-lo para o melhor desenvolvimento do projeto. Era realizada no final de toda \nsprint\n atrav\u00e9s de uma reuni\u00e3o e auxiliava nas decis\u00f5es gerenciais acerca do processo das outras \nsprints\n.\n\n\n\n### 1.5 Quadro de Conhecimento\n\n\nO quadro de conhecimento indica o conhecimento de cada integrante da equipe em rela\u00e7\u00e3o \u00e0 alguma tecnologia utilizada no projeto. A partir desse quadro, devem ser definidas as duplas de pareamento de forma que a distribui\u00e7\u00e3o sempre possua o objetivo da melhor dissemina\u00e7\u00e3o de conhecimento poss\u00edvel dentro da equipe. \u00c9 esperado que os indicadores do quadro sempre evoluam durante as \nsprints\n indicando a evolu\u00e7\u00e3o do conhecimento dos integrantes da equipe.\n\n\n### 1.6 Quadro de Commits\n\n\nUm outro indicador que consegue nos trazer melhor ainda a progress\u00e3o do trabalho da equipe durante a sprint \u00e9 o quadro de \ncommit\n. Com esse quadro \u00e9 poss\u00edvel se ter uma ideia bem melhor da divis\u00e3o do trabalho entre a semana, pois se tratando do contexto universit\u00e1rio da mat\u00e9ria de GPP-MDS se torna muito dif\u00edcil em detrimento de in\u00fameras raz\u00f5es conseguir manter um burndown aceit\u00e1vel. E com esse quadro de commits tudo fica mais transparente.\n\n\n![](https://raw.githubusercontent.com/wiki/fga-gpp-mds/2017.2-Receituario-Medico/imagens/sprint_07/commits.png)\n\n\nDiferente do burndown o quadro de commits demonstra melhor o trabalho da equipe. Como pode ser visto no exemplo acima no come\u00e7o da semana houve um progresso consider\u00e1vel nas hist\u00f3rias como mostra o gr\u00e1fico de commits, mas pode-se notar que quinta e sexta houve uma queda nos commits por conta dos trabalhos de todos os membros da equipe. Dados esses que n\u00e3o conseguem ser observados no burndown dependendo da dificuldade das hist\u00f3rias.\n\n\n## 2. Indicadores de Qualidade de C\u00f3digo\n\n### 2.1 M\u00e9tricas\n\n\nAs m\u00e9tricas s\u00e3o um indicador para a qualidade do c\u00f3digo. No final de toda \nsprint\n, elas devem ser analisadas e a partir dessa an\u00e1lise, serem definidos os pontos necess\u00e1rios para a refatora\u00e7\u00e3o. Exemplos de m\u00e9tricas:\n\n\n\n * **_Afferent Connections per Class_ (ACC):** Mede o n\u00edvel de acoplamento de uma classe atrav\u00e9s do n\u00famero de outras classes que fazem refer\u00eancia a ela, por meio da utiliza\u00e7\u00e3o de algum m\u00e9todo ou atributo.\n * **_Average Cyclomatic Complexity per Method_ (ACCM):** Complexidade ciclom\u00e1tica nada mais \u00e9 do que o n\u00famero de caminhos, independentes que um software pode seguir em sua execu\u00e7\u00e3o, calculado a,partir da representa\u00e7\u00e3o em grafo das estruturas de controle.\n * **_Average Method Lines of Code_ (AMLOC):** AMLOC representa a m\u00e9dia do n\u00famero de linhas dos m\u00e9todos de uma classe.\n * **_Depth of Inheritance Tree_ (DIT):** DIT \u00e9 uma m\u00e9trica que mede a profundidade que uma classe se encontra na \u00e1rvore de heran\u00e7a, e caso haja heran\u00e7a m\u00faltipla, DIT mede a dist\u00e2ncia m\u00e1xima at\u00e9 o n\u00f3 raiz da \u00e1rvore de heran\u00e7a.\n * **_Number of Methods_ (NOM):** NOM \u00e9 uma m\u00e9trica de tamanho que conta o n\u00famero de m\u00e9todos de uma classe.\n\n## 3. EVM\n\n### 3.1 BAC\n\n O custo total planejado consiste no calculo dos pontos totais planejados (PRP) multiplicado pelo custo do ponto. \n\n\n\n### 3.2 Valor Planejado (PV) e Custo Real (AC)\n\n O valor planejado (PV) fundamenta-se do calculo entre a Porcentagem planejada Completa (PPC) multiplicado pelo Custo Total Planejado (BAC). A cada sprint este valor ser\u00e1 diferente, indicando quanto que o projeto est\u00e1 custando do ponto de vista do planejamento.\n\n\n\nO Custo Real (AC) fundamenta-se do calculo entre Pontos Completos Reais (PCR) multiplicado pelo Custo Do Ponto. A cada sprint este valor ser\u00e1 diferente, indicando o quanto essa sprint est\u00e1 realmente valendo, do ponto de vista dos pontos completado na mesma.\n\n\n\n### 3.3 Valor Agregado (EV)\n\n\n Diferente do valor planejado e do custo real, o valor agregado se difere em cada \nsprint\n dependendo do desempenho da equipe na mesma. O valor agregado \u00e9 um indicador da produtividade da equipe refletida no custo, onde \u00e9 poss\u00edvel perceber se a equipe est\u00e1 fazendo as entregas conforme o planejado. Para o c\u00e1lculo do valor agregado, \u00e9 necess\u00e1rio saber a Porcentagem Conclu\u00edda na \nsprint\n (PPC) e o Valor Planejado (PV).\n\n\n\n| PPC = PC / PP |\n|---------------|\n| EV = PPC * PV |                                                      \n\nOnde, PC = Pontos Conclu\u00eddos e PP = Pontos Planejados\n\n### 3.4 Varia\u00e7\u00e3o do Custo e Varia\u00e7\u00e3o do Prazo\n\n\n As varia\u00e7\u00f5es de custo (CV) e de prazo (SV) possuem valores iguais em todas as \nsprints\n por consequ\u00eancia de serem calculadas de acordo com o custo real e valor planejado, respectivamente. \n\n\n\n| CV = EV - AC |\n|:------------:|\n| SV = EV - PV |\n\n### 3.5 \u00cdndice de Desempenho de Custo (CPI) e \u00cdndice de Desempenho de Prazo (SPI)\n\n\n Assim como as varia\u00e7\u00f5es, os \u00edndices refletem a mesma caracter\u00edstica, onde seus valores s\u00e3o iguais nas \nsprints\n. A f\u00f3rmula para o c\u00e1lculo destes \u00edndices encontra-se abaixo:\n\n| CV = EV / AC |\n|:------------:|\n| SV = EV / PV |", 
            "title": "Indicadores \u00c1geis"
        }, 
        {
            "location": "/Indicadores-\u00c1geis/#1-indicadores-de-qualidade-do-processo", 
            "text": "", 
            "title": "1. Indicadores de Qualidade do Processo"
        }, 
        {
            "location": "/Indicadores-\u00c1geis/#11-fechamento-da-sprint", 
            "text": "O fechamento da  sprint  indica se as hist\u00f3rias planejadas para aquela  sprint  foram conclu\u00eddas ou n\u00e3o. Esse indicador auxilia no acompanhamento do progresso do valor agregado do projeto em rela\u00e7\u00e3o ao que foi planejado at\u00e9 ent\u00e3o. O melhor indicador poss\u00edvel \u00e9 que todas as hist\u00f3rias planejadas estejam conclu\u00eddas, caso contr\u00e1rio, \u00e9 necess\u00e1rio adicion\u00e1-la no planejamento de futuras  sprint  se poss\u00edvel.", 
            "title": "1.1 Fechamento da Sprint"
        }, 
        {
            "location": "/Indicadores-\u00c1geis/#12-burndown", 
            "text": "O  burndown  indica a frequ\u00eancia de trabalho da equipe durante a  sprint . Na coluna vertical, \u00e9 indicado o n\u00famero total de pontos planejados para aquela  sprint  e na coluna horizontal as datas contidas no intervalo da dura\u00e7\u00e3o da  sprint . A linha azul indica os pontos planejados, \u00e9 decrescente de forma constante e indica que idealmente os pontos devem diminuir gradativamente e constantemente ao passar da  sprint . A linha vermelha representa o progresso real da equipe, ou seja, a quantidade de pontos conclu\u00eddo e o per\u00edodo da conclus\u00e3o. Esse indicador auxilia a equipe \u00e0 observar a const\u00e2ncia dos pontos conclu\u00eddos e portanto melhorar nas pr\u00f3ximas  sprints  fazendo com que o sistema receba um incremento com uma alta frequ\u00eancia.", 
            "title": "1.2 Burndown"
        }, 
        {
            "location": "/Indicadores-\u00c1geis/#13-velocity", 
            "text": "O  velocity  indica a quantidade de pontos que a equipe consegue concluir em uma  sprint . O gr\u00e1fico possui uma coluna azul que indica a quantidade de pontos planejados para aquela  sprint  e a coluna vermelha que indica a quantidade de pontos conclu\u00eddos naquela  sprint . O valor do velocity (em verde) \u00e9 calculado a partir da divis\u00e3o entre o n\u00famero de pontos conclu\u00eddos at\u00e9 aquela  sprint  e o n\u00famero de semanas de desenvolvimento at\u00e9 aquela sprint. Portanto, este valor indica a m\u00e9dia de produtividade da equipe at\u00e9 a  sprint  indicada.  Exemplo de um  velocity :\n\n![](https://raw.githubusercontent.com/wiki/fga-gpp-mds/00-Disciplina/img/velocity-exemplo.png)\n\n### 1.4 Quadro da Retrospectiva O quadro da retrospectiva geralmente possui tr\u00eas t\u00f3picos:\n\n * Os **pontos negativos** em rela\u00e7\u00e3o a  sprint  realizada. Este indicador ajuda a identificar eventuais problemas no processo.\n * Os **pontos positivos** em rela\u00e7\u00e3o a  sprint  realizada. Este indicador ajuda a identificar o que est\u00e1 correto e que deve continuar sendo realizado nas outras  sprints  no processo.\n * As **melhorias** que s\u00e3o propostas pela equipe de forma a indicar solu\u00e7\u00f5es para os pontos negativos. Portanto, \u00e9 um indicador importante para o processo visando sempre aprimor\u00e1-lo para o melhor desenvolvimento do projeto. Era realizada no final de toda  sprint  atrav\u00e9s de uma reuni\u00e3o e auxiliava nas decis\u00f5es gerenciais acerca do processo das outras  sprints . \n\n\n### 1.5 Quadro de Conhecimento O quadro de conhecimento indica o conhecimento de cada integrante da equipe em rela\u00e7\u00e3o \u00e0 alguma tecnologia utilizada no projeto. A partir desse quadro, devem ser definidas as duplas de pareamento de forma que a distribui\u00e7\u00e3o sempre possua o objetivo da melhor dissemina\u00e7\u00e3o de conhecimento poss\u00edvel dentro da equipe. \u00c9 esperado que os indicadores do quadro sempre evoluam durante as  sprints  indicando a evolu\u00e7\u00e3o do conhecimento dos integrantes da equipe. \n\n### 1.6 Quadro de Commits Um outro indicador que consegue nos trazer melhor ainda a progress\u00e3o do trabalho da equipe durante a sprint \u00e9 o quadro de  commit . Com esse quadro \u00e9 poss\u00edvel se ter uma ideia bem melhor da divis\u00e3o do trabalho entre a semana, pois se tratando do contexto universit\u00e1rio da mat\u00e9ria de GPP-MDS se torna muito dif\u00edcil em detrimento de in\u00fameras raz\u00f5es conseguir manter um burndown aceit\u00e1vel. E com esse quadro de commits tudo fica mais transparente. \n\n![](https://raw.githubusercontent.com/wiki/fga-gpp-mds/2017.2-Receituario-Medico/imagens/sprint_07/commits.png) Diferente do burndown o quadro de commits demonstra melhor o trabalho da equipe. Como pode ser visto no exemplo acima no come\u00e7o da semana houve um progresso consider\u00e1vel nas hist\u00f3rias como mostra o gr\u00e1fico de commits, mas pode-se notar que quinta e sexta houve uma queda nos commits por conta dos trabalhos de todos os membros da equipe. Dados esses que n\u00e3o conseguem ser observados no burndown dependendo da dificuldade das hist\u00f3rias. \n\n## 2. Indicadores de Qualidade de C\u00f3digo\n\n### 2.1 M\u00e9tricas As m\u00e9tricas s\u00e3o um indicador para a qualidade do c\u00f3digo. No final de toda  sprint , elas devem ser analisadas e a partir dessa an\u00e1lise, serem definidos os pontos necess\u00e1rios para a refatora\u00e7\u00e3o. Exemplos de m\u00e9tricas: \n\n\n * **_Afferent Connections per Class_ (ACC):** Mede o n\u00edvel de acoplamento de uma classe atrav\u00e9s do n\u00famero de outras classes que fazem refer\u00eancia a ela, por meio da utiliza\u00e7\u00e3o de algum m\u00e9todo ou atributo.\n * **_Average Cyclomatic Complexity per Method_ (ACCM):** Complexidade ciclom\u00e1tica nada mais \u00e9 do que o n\u00famero de caminhos, independentes que um software pode seguir em sua execu\u00e7\u00e3o, calculado a,partir da representa\u00e7\u00e3o em grafo das estruturas de controle.\n * **_Average Method Lines of Code_ (AMLOC):** AMLOC representa a m\u00e9dia do n\u00famero de linhas dos m\u00e9todos de uma classe.\n * **_Depth of Inheritance Tree_ (DIT):** DIT \u00e9 uma m\u00e9trica que mede a profundidade que uma classe se encontra na \u00e1rvore de heran\u00e7a, e caso haja heran\u00e7a m\u00faltipla, DIT mede a dist\u00e2ncia m\u00e1xima at\u00e9 o n\u00f3 raiz da \u00e1rvore de heran\u00e7a.\n * **_Number of Methods_ (NOM):** NOM \u00e9 uma m\u00e9trica de tamanho que conta o n\u00famero de m\u00e9todos de uma classe.\n\n## 3. EVM\n\n### 3.1 BAC  O custo total planejado consiste no calculo dos pontos totais planejados (PRP) multiplicado pelo custo do ponto.  \n\n\n### 3.2 Valor Planejado (PV) e Custo Real (AC)  O valor planejado (PV) fundamenta-se do calculo entre a Porcentagem planejada Completa (PPC) multiplicado pelo Custo Total Planejado (BAC). A cada sprint este valor ser\u00e1 diferente, indicando quanto que o projeto est\u00e1 custando do ponto de vista do planejamento.  O Custo Real (AC) fundamenta-se do calculo entre Pontos Completos Reais (PCR) multiplicado pelo Custo Do Ponto. A cada sprint este valor ser\u00e1 diferente, indicando o quanto essa sprint est\u00e1 realmente valendo, do ponto de vista dos pontos completado na mesma. \n\n\n### 3.3 Valor Agregado (EV)  Diferente do valor planejado e do custo real, o valor agregado se difere em cada  sprint  dependendo do desempenho da equipe na mesma. O valor agregado \u00e9 um indicador da produtividade da equipe refletida no custo, onde \u00e9 poss\u00edvel perceber se a equipe est\u00e1 fazendo as entregas conforme o planejado. Para o c\u00e1lculo do valor agregado, \u00e9 necess\u00e1rio saber a Porcentagem Conclu\u00edda na  sprint  (PPC) e o Valor Planejado (PV). \n\n\n| PPC = PC / PP |\n|---------------|\n| EV = PPC * PV |                                                      \n\nOnde, PC = Pontos Conclu\u00eddos e PP = Pontos Planejados\n\n### 3.4 Varia\u00e7\u00e3o do Custo e Varia\u00e7\u00e3o do Prazo  As varia\u00e7\u00f5es de custo (CV) e de prazo (SV) possuem valores iguais em todas as  sprints  por consequ\u00eancia de serem calculadas de acordo com o custo real e valor planejado, respectivamente.  \n\n\n| CV = EV - AC |\n|:------------:|\n| SV = EV - PV |\n\n### 3.5 \u00cdndice de Desempenho de Custo (CPI) e \u00cdndice de Desempenho de Prazo (SPI)  Assim como as varia\u00e7\u00f5es, os \u00edndices refletem a mesma caracter\u00edstica, onde seus valores s\u00e3o iguais nas  sprints . A f\u00f3rmula para o c\u00e1lculo destes \u00edndices encontra-se abaixo:\n\n| CV = EV / AC |\n|:------------:|\n| SV = EV / PV |", 
            "title": "1.3 Velocity"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/", 
            "text": "Defini\u00e7\u00e3o de pronto\n\n\nAo se fechar o backlog inicial para a segunda Release, onde \u00e9 adotado as metodologias \u00e1geis, um passo muito importante para a equipe se alinhar acerca da pontua\u00e7\u00e3o das hist\u00f3ria \u00e9 definir o que \u00e9 uma hist\u00f3ria pronta, nessa defini\u00e7\u00e3o entram fatores principalmente em rela\u00e7\u00e3o \u00e0 m\u00e9tricas aceit\u00e1veis.\n\n\n\nAp\u00f3s definir o que \u00e9 uma hist\u00f3ria pronta, \u00e9 poss\u00edvel seguir alguns passos para se conseguir pontuar todo esse backlog rapidamente e de maneira eficaz.\n\n\n\nPasso #1: Tenha em m\u00e3os todas as hist\u00f3rias de usu\u00e1rio que devem ser estimadas\n\n\nA primeira coisa a se fazer \u00e9 levantar todas as hist\u00f3rias que dever\u00e3o ser estimadas. Eu aconselho que elas estejam escritas em cart\u00f5es, assim ser\u00e1 mais f\u00e1cil trabalhar com elas.\n\n\n\nVoc\u00ea precisa considerar os \u00e9picos e temas (ou, qualquer outro n\u00edvel de rompimento) tamb\u00e9m, como eles s\u00e3o itens de alto n\u00edvel, normalmente se encontram na parte inferior do seu Product Backlog.\n\n\n\nPasso #2: Coloque todas as hist\u00f3rias em uma mesa\n\n\nAp\u00f3s levantar todas as hist\u00f3rias que estavam estacionadas em seu Backlog, coloque elas em uma mesa para que possam ser movimentadas facilmente.\n\n\n\nA mesa \u00e9 legal, pois todos podem ficar em volta dela para discutir e confirmar a utilidade e prioridade de cada hist\u00f3ria de maneira mais f\u00e1cil e eficaz.\n\n\n\nPasso #3: Escolha qualquer hist\u00f3ria\n\n\nEscolha qualquer hist\u00f3ria para come\u00e7ar, fa\u00e7a a equipe estimar o esfor\u00e7o dela em \u201cpequena\u201d, \u201cm\u00e9dia\u201d ou \u201cgrande\u201d.\n\n\n\nUsar P, M ou G \u00e9 uma forma simples e r\u00e1pida para atribuir esfor\u00e7o em torno do trabalho nesse primeiro momento.\n\n\n\nPara atribuir peso, fa\u00e7a o seguinte:\n\n\n\n\n\nSe for uma grande hist\u00f3ria (ou seja, a equipe acredita que aquela hist\u00f3ria ir\u00e1 demandar um esfor\u00e7o grande) a coloque em uma extremidade da mesa, lado esquerdo, por exemplo;\n\n\nSe for uma pequena hist\u00f3ria coloque na outra extremidade da mesa;\n\n\nSe for uma hist\u00f3ria m\u00e9dia, coloque no meio.\n\n\n\n\nPasso #4: Estime por esfor\u00e7o relativo\n\n\nAgora pegue uma 2\u00b0 hist\u00f3ria e pergunte para a equipe se o esfor\u00e7o para faze-la \u00e9 mais ou menos o mesmo da hist\u00f3ria que est\u00e1 na mesa.\n\n\n\nPor exemplo, supondo que a 1\u00b0 hist\u00f3ria foi considerada de tamanho G (grande), pergunte a equipe se o esfor\u00e7o para implementar essa 2\u00b0 hist\u00f3ria selecionada \u00e9 similar a 1\u00b0 hist\u00f3ria que \u00e9 do tamanho G.\n\n\n\nSe a resposta for sim, a coloque sobre a mesa na mesma extremidade das cartas de esfor\u00e7o grande.\n\n\n\nUsando esta t\u00e9cnica, \u00e9 poss\u00edvel passar por 100 ou mais hist\u00f3rias de usu\u00e1rio dentro do Product Backlog e estimar o seu esfor\u00e7o relativo em menos de uma hora.\n\n\n\nPasso #5: Pontue as hist\u00f3rias\n\n\nAgora, se voc\u00ea prefere utilizar Story Points, siga o que vou lhe explicar agora!\n\n\n\nPegue um grupo de hist\u00f3rias, pode ser o com esfor\u00e7o \u201cpequeno\u201d (P) que s\u00e3o, teoricamente, mais f\u00e1ceis.\n\n\n\nJunto com a equipe, comece dando a pontua\u00e7\u00e3o de 1 para todas daquele grupo, depois passe uma por uma e analise se a pontua\u00e7\u00e3o est\u00e1 coerente.\n\n\n\nPor exemplo, se voc\u00ea avaliou a primeira hist\u00f3ria e deu 2 pontos para ela, a segunda voc\u00ea ir\u00e1 comparar com essa, se voc\u00ea perceber que a hist\u00f3ria atual \u00e9 duas vezes mais trabalhosa, voc\u00ea d\u00e1 a pontua\u00e7\u00e3o de 4 pontos para a mesma, se for tr\u00eas vezes mais trabalhosa voc\u00ea d\u00e1 a pontua\u00e7\u00e3o de 6.\n\n\n\nFonte\n\n\nCultura \u00e1gil", 
            "title": "Como pontuar o backlog"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#definicao-de-pronto", 
            "text": "Ao se fechar o backlog inicial para a segunda Release, onde \u00e9 adotado as metodologias \u00e1geis, um passo muito importante para a equipe se alinhar acerca da pontua\u00e7\u00e3o das hist\u00f3ria \u00e9 definir o que \u00e9 uma hist\u00f3ria pronta, nessa defini\u00e7\u00e3o entram fatores principalmente em rela\u00e7\u00e3o \u00e0 m\u00e9tricas aceit\u00e1veis.  Ap\u00f3s definir o que \u00e9 uma hist\u00f3ria pronta, \u00e9 poss\u00edvel seguir alguns passos para se conseguir pontuar todo esse backlog rapidamente e de maneira eficaz.", 
            "title": "Defini\u00e7\u00e3o de pronto"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#passo-1-tenha-em-maos-todas-as-historias-de-usuario-que-devem-ser-estimadas", 
            "text": "A primeira coisa a se fazer \u00e9 levantar todas as hist\u00f3rias que dever\u00e3o ser estimadas. Eu aconselho que elas estejam escritas em cart\u00f5es, assim ser\u00e1 mais f\u00e1cil trabalhar com elas.  Voc\u00ea precisa considerar os \u00e9picos e temas (ou, qualquer outro n\u00edvel de rompimento) tamb\u00e9m, como eles s\u00e3o itens de alto n\u00edvel, normalmente se encontram na parte inferior do seu Product Backlog.", 
            "title": "Passo #1: Tenha em m\u00e3os todas as hist\u00f3rias de usu\u00e1rio que devem ser estimadas"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#passo-2-coloque-todas-as-historias-em-uma-mesa", 
            "text": "Ap\u00f3s levantar todas as hist\u00f3rias que estavam estacionadas em seu Backlog, coloque elas em uma mesa para que possam ser movimentadas facilmente.  A mesa \u00e9 legal, pois todos podem ficar em volta dela para discutir e confirmar a utilidade e prioridade de cada hist\u00f3ria de maneira mais f\u00e1cil e eficaz.", 
            "title": "Passo #2: Coloque todas as hist\u00f3rias em uma mesa"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#passo-3-escolha-qualquer-historia", 
            "text": "Escolha qualquer hist\u00f3ria para come\u00e7ar, fa\u00e7a a equipe estimar o esfor\u00e7o dela em \u201cpequena\u201d, \u201cm\u00e9dia\u201d ou \u201cgrande\u201d.  Usar P, M ou G \u00e9 uma forma simples e r\u00e1pida para atribuir esfor\u00e7o em torno do trabalho nesse primeiro momento.  Para atribuir peso, fa\u00e7a o seguinte:   Se for uma grande hist\u00f3ria (ou seja, a equipe acredita que aquela hist\u00f3ria ir\u00e1 demandar um esfor\u00e7o grande) a coloque em uma extremidade da mesa, lado esquerdo, por exemplo;  Se for uma pequena hist\u00f3ria coloque na outra extremidade da mesa;  Se for uma hist\u00f3ria m\u00e9dia, coloque no meio.", 
            "title": "Passo #3: Escolha qualquer hist\u00f3ria"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#passo-4-estime-por-esforco-relativo", 
            "text": "Agora pegue uma 2\u00b0 hist\u00f3ria e pergunte para a equipe se o esfor\u00e7o para faze-la \u00e9 mais ou menos o mesmo da hist\u00f3ria que est\u00e1 na mesa.  Por exemplo, supondo que a 1\u00b0 hist\u00f3ria foi considerada de tamanho G (grande), pergunte a equipe se o esfor\u00e7o para implementar essa 2\u00b0 hist\u00f3ria selecionada \u00e9 similar a 1\u00b0 hist\u00f3ria que \u00e9 do tamanho G.  Se a resposta for sim, a coloque sobre a mesa na mesma extremidade das cartas de esfor\u00e7o grande.  Usando esta t\u00e9cnica, \u00e9 poss\u00edvel passar por 100 ou mais hist\u00f3rias de usu\u00e1rio dentro do Product Backlog e estimar o seu esfor\u00e7o relativo em menos de uma hora.", 
            "title": "Passo #4: Estime por esfor\u00e7o relativo"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#passo-5-pontue-as-historias", 
            "text": "Agora, se voc\u00ea prefere utilizar Story Points, siga o que vou lhe explicar agora!  Pegue um grupo de hist\u00f3rias, pode ser o com esfor\u00e7o \u201cpequeno\u201d (P) que s\u00e3o, teoricamente, mais f\u00e1ceis.  Junto com a equipe, comece dando a pontua\u00e7\u00e3o de 1 para todas daquele grupo, depois passe uma por uma e analise se a pontua\u00e7\u00e3o est\u00e1 coerente.  Por exemplo, se voc\u00ea avaliou a primeira hist\u00f3ria e deu 2 pontos para ela, a segunda voc\u00ea ir\u00e1 comparar com essa, se voc\u00ea perceber que a hist\u00f3ria atual \u00e9 duas vezes mais trabalhosa, voc\u00ea d\u00e1 a pontua\u00e7\u00e3o de 4 pontos para a mesma, se for tr\u00eas vezes mais trabalhosa voc\u00ea d\u00e1 a pontua\u00e7\u00e3o de 6.", 
            "title": "Passo #5: Pontue as hist\u00f3rias"
        }, 
        {
            "location": "/Como-pontuar-o-backlog/#fonte", 
            "text": "Cultura \u00e1gil", 
            "title": "Fonte"
        }, 
        {
            "location": "/Como-melhorar-a-comunica\u00e7\u00e3o-da-equipe/", 
            "text": "Comunica\u00e7\u00e3o\n\n\nSe algum membro est\u00e1 contribuindo negativamente para o andamento do projeto, o Scrum Master n\u00e3o tem o poder de pun\u00ed-lo. Uma boa pr\u00e1tica \u00e9 evidenciar os problemas ocorridos, convencer o membro que sua contribui\u00e7\u00e3o poderia ser melhor para o projeto e ser sol\u00edcito para praticar as mudan\u00e7as necess\u00e1rias para uma melhoria na sua postura.\n\n\n\nO daily meeting \u00e9 definido pelo Scrum como o momento di\u00e1rio onde o time conversa sobre o que aconteceu no dia anterior, o que est\u00e1 acontecendo e quais os entraves para o andamento das atividades. \u00c9 preciso entender que essa defini\u00e7\u00e3o n\u00e3o pode ser encarada como os 15 minutos destinados \u00e0 conversa\u00e7\u00e3o em 8 horas de trabalho di\u00e1rio. O daily meeting n\u00e3o pode ser o \u00fanico momento onde as pessoas conversam durante um dia de trabalho. Esse momento deve ser encarado como o momento onde toda equipe compartilha o estado atual de um determinado projeto.\n\n\n\nSe os problemas forem detectados antes da hora marcada para o daily meeting, \u00e9 fortemente aconselh\u00e1vel que eles sejam comunicados antes da reuni\u00e3o di\u00e1ria, para que medidas corretivas possam ser imediatamente tomadas. No momento da reuni\u00e3o di\u00e1ria esses problemas, previamente identificados, devem ser apenas tornados p\u00fablico para o restante do time e se j\u00e1 tiverem sido resolvidos, um breve relato da solu\u00e7\u00e3o deve ser comentado. Uma boa pr\u00e1tica que pode ser adotada pelo Scrum Master \u00e9, no \u00ednicio de um dia de trabalho, conversar informalmente com cada membro do time na tentativa de identificar se h\u00e1 algum impedimento identificado. Problemas que s\u00e3o imediatamente identificados e tratados, n\u00e3o importando a sua complexidade, n\u00e3o comprometem o bom andamento dos sprints. Eles s\u00f3 passam a ser realmente problemas, quando h\u00e1 um retardo para sua comunica\u00e7\u00e3o ap\u00f3s terem sido identificados.\n\n\n\nNo Scrum existe um momento especial para que os acertos sejam evidenciados e os erros sejam discutidos para que possamos tirar boas li\u00e7\u00f5es para o futuro. Esse momento \u00e9 a Retrospectiva de Sprint. As retrospectivas inerentemente favorecem a Comunica\u00e7\u00e3o, proporcionando uma maior intera\u00e7\u00e3o entre os membros do time.\n\n\n\nAlgumas premissas devem ser consideradas para que o processo de comunica\u00e7\u00e3o ocorra de forma natural durante esses momentos. A primeira premissa \u00e9 que a retrospectiva n\u00e3o \u00e9 um momento para eleger culpados por eventuais falhas ocorridas. Uma boa pr\u00e1tica \u00e9 evitar citar nomes durante esse momento, seja ao relatar casos de sucesso ou ao relatar problemas. Tudo que aconteceu durante o sprint deve ser responsabilidade do time como um todo, n\u00e3o importando as individualidades de cada integrante.\n\n\n\nDailys\n\n\nAs equipes ainda veem no ScrumMaster um papel gerencial e tendem a se reportarem diretamente a este papel durante a reuni\u00e3o di\u00e1ria, quando, na verdade, a equipe deveria somente ter foco no que foi feito desde a reuni\u00e3o anterior e no que ser\u00e1 feito a seguir, sendo uma cerim\u00f4nia de sincroniza\u00e7\u00e3o da equipe e para a equipe.\n\n\n\nPara evitar esta tend\u00eancia das equipes: \n\n\n\n\n\nSe voc\u00ea \u00e9 um ScrumMaster, n\u00e3o fa\u00e7a contato visual com quem estiver falando durante a reuni\u00e3o di\u00e1ria. N\u00e3o manter este contato visual, contribui para que os coment\u00e1rios n\u00e3o sejam status direcionados somente ao Scrum Master.\n\n\nO Scrum Master pode faltar ocasionalmente da reuni\u00e3o e deixar um membro da equipe como facilitador ou permitir que a pr\u00f3pria equipe se organize;\n\n\nMuitas equipes se re\u00fanem em um c\u00edrculo ou semi-c\u00edrculo. O Scrum Master poderia se posicionar fora dessa forma\u00e7\u00e3o; (ajuda a evitar o contato visual)\n\n\nO Scrum Master deve posicionar-se como um observador silencioso, informando a equipe que isso \u00e9 um exerc\u00edcio para lembr\u00e1-los de que est\u00e3o se auto-organizando e que a reuni\u00e3o di\u00e1ria do Scrum \u00e9 quase que exclusiva da equipe.", 
            "title": "Como melhorar a comunica\u00e7\u00e3o"
        }, 
        {
            "location": "/Como-melhorar-a-comunica\u00e7\u00e3o-da-equipe/#comunicacao", 
            "text": "Se algum membro est\u00e1 contribuindo negativamente para o andamento do projeto, o Scrum Master n\u00e3o tem o poder de pun\u00ed-lo. Uma boa pr\u00e1tica \u00e9 evidenciar os problemas ocorridos, convencer o membro que sua contribui\u00e7\u00e3o poderia ser melhor para o projeto e ser sol\u00edcito para praticar as mudan\u00e7as necess\u00e1rias para uma melhoria na sua postura.  O daily meeting \u00e9 definido pelo Scrum como o momento di\u00e1rio onde o time conversa sobre o que aconteceu no dia anterior, o que est\u00e1 acontecendo e quais os entraves para o andamento das atividades. \u00c9 preciso entender que essa defini\u00e7\u00e3o n\u00e3o pode ser encarada como os 15 minutos destinados \u00e0 conversa\u00e7\u00e3o em 8 horas de trabalho di\u00e1rio. O daily meeting n\u00e3o pode ser o \u00fanico momento onde as pessoas conversam durante um dia de trabalho. Esse momento deve ser encarado como o momento onde toda equipe compartilha o estado atual de um determinado projeto.  Se os problemas forem detectados antes da hora marcada para o daily meeting, \u00e9 fortemente aconselh\u00e1vel que eles sejam comunicados antes da reuni\u00e3o di\u00e1ria, para que medidas corretivas possam ser imediatamente tomadas. No momento da reuni\u00e3o di\u00e1ria esses problemas, previamente identificados, devem ser apenas tornados p\u00fablico para o restante do time e se j\u00e1 tiverem sido resolvidos, um breve relato da solu\u00e7\u00e3o deve ser comentado. Uma boa pr\u00e1tica que pode ser adotada pelo Scrum Master \u00e9, no \u00ednicio de um dia de trabalho, conversar informalmente com cada membro do time na tentativa de identificar se h\u00e1 algum impedimento identificado. Problemas que s\u00e3o imediatamente identificados e tratados, n\u00e3o importando a sua complexidade, n\u00e3o comprometem o bom andamento dos sprints. Eles s\u00f3 passam a ser realmente problemas, quando h\u00e1 um retardo para sua comunica\u00e7\u00e3o ap\u00f3s terem sido identificados.  No Scrum existe um momento especial para que os acertos sejam evidenciados e os erros sejam discutidos para que possamos tirar boas li\u00e7\u00f5es para o futuro. Esse momento \u00e9 a Retrospectiva de Sprint. As retrospectivas inerentemente favorecem a Comunica\u00e7\u00e3o, proporcionando uma maior intera\u00e7\u00e3o entre os membros do time.  Algumas premissas devem ser consideradas para que o processo de comunica\u00e7\u00e3o ocorra de forma natural durante esses momentos. A primeira premissa \u00e9 que a retrospectiva n\u00e3o \u00e9 um momento para eleger culpados por eventuais falhas ocorridas. Uma boa pr\u00e1tica \u00e9 evitar citar nomes durante esse momento, seja ao relatar casos de sucesso ou ao relatar problemas. Tudo que aconteceu durante o sprint deve ser responsabilidade do time como um todo, n\u00e3o importando as individualidades de cada integrante.", 
            "title": "Comunica\u00e7\u00e3o"
        }, 
        {
            "location": "/Como-melhorar-a-comunica\u00e7\u00e3o-da-equipe/#dailys", 
            "text": "As equipes ainda veem no ScrumMaster um papel gerencial e tendem a se reportarem diretamente a este papel durante a reuni\u00e3o di\u00e1ria, quando, na verdade, a equipe deveria somente ter foco no que foi feito desde a reuni\u00e3o anterior e no que ser\u00e1 feito a seguir, sendo uma cerim\u00f4nia de sincroniza\u00e7\u00e3o da equipe e para a equipe.  Para evitar esta tend\u00eancia das equipes:    Se voc\u00ea \u00e9 um ScrumMaster, n\u00e3o fa\u00e7a contato visual com quem estiver falando durante a reuni\u00e3o di\u00e1ria. N\u00e3o manter este contato visual, contribui para que os coment\u00e1rios n\u00e3o sejam status direcionados somente ao Scrum Master.  O Scrum Master pode faltar ocasionalmente da reuni\u00e3o e deixar um membro da equipe como facilitador ou permitir que a pr\u00f3pria equipe se organize;  Muitas equipes se re\u00fanem em um c\u00edrculo ou semi-c\u00edrculo. O Scrum Master poderia se posicionar fora dessa forma\u00e7\u00e3o; (ajuda a evitar o contato visual)  O Scrum Master deve posicionar-se como um observador silencioso, informando a equipe que isso \u00e9 um exerc\u00edcio para lembr\u00e1-los de que est\u00e3o se auto-organizando e que a reuni\u00e3o di\u00e1ria do Scrum \u00e9 quase que exclusiva da equipe.", 
            "title": "Dailys"
        }, 
        {
            "location": "/Pair-Programming/", 
            "text": "Programa\u00e7\u00e3o Pareada\n\n\n\n\nA Programa\u00e7\u00e3o Pareada \u00e9 uma das pr\u00e1ticas do \nExtreme Programming (XP)\n, que sugere que o c\u00f3digo seja sempre trabalhado em dupla em um mesmo computador, revezando quem est\u00e1 digitando. Assim, existem dois pap\u00e9is nessa atividade, o piloto e o co-piloto. Os dois trabalham de forma an\u00e1loga a pilotos e co-pilotos de aeronaves.\n\n\n\nO piloto \u00e9 o respons\u00e1vel pela digita\u00e7\u00e3o do c\u00f3digo, a sintaxe, e por deixar o seu parceiro ciente do que est\u00e1 fazendo, sempre explicando seu racioc\u00ednio durante a execu\u00e7\u00e3o. \nO co-piloto acompanha a elabora\u00e7\u00e3o do c\u00f3digo, os testes que dever\u00e3o passar, a pr\u00f3xima hist\u00f3ria a ser entregue, o tempo gasto na execu\u00e7\u00e3o dos testes, o tempo decorrido desde o \u00faltimo \ncommit\n, e a qualidade do c\u00f3digo em geral.\n\n\n\nA ideia \u00e9 que o pareamento ajude a disseminar o conhecimento entre o time de desenvolvimento, que a aplica\u00e7\u00e3o tenha menos \nbugs\n e que mais funcionalidades sejam acrescentadas num menor per\u00edodo de tempo, resultando em melhores projetos.\n\n\n\nPrograma\u00e7\u00e3o Pareada Remota\n\n\nPareamento remoto significa pareamento a dist\u00e2ncia. Esse tipo de pareamento \u00e9 necess\u00e1rio quando os desenvolvedores n\u00e3o podem se encontrar pessoalmente.\n\nEste pareamento \u00e9 feito com o aux\u00edlio de ferramentas que permitem a comunica\u00e7\u00e3o e o compartilhamento de tela, como \nhangouts\n ou \nskype\n, ou em alguns sites que permitem v\u00e1rias programarem juntas.\n\nA desvantagem desse pareamento \u00e9 que o par pode perder o foco com facilidade j\u00e1 que a press\u00e3o do outro n\u00e3o \u00e9 t\u00e3o grande, o que pode acarretar em perda de produtividade.\n\n\nBoas pr\u00e1ticas Programa\u00e7\u00e3o Pareada\n\n\nAlgumas pr\u00e1ticas de pareamento altamente efetivos:\n\n\n\n  \n \nProfici\u00eancia\n: Ter profici\u00eancia com a linguagem e com as ferramentas utilizadas \u00e9 extremamente importante para um pareamento eficiente. Caso contr\u00e1rio, o rendimento n\u00e3o ser\u00e1 muito alto pois um membro do par ser\u00e1 apenas ouvinte e n\u00e3o conseguir\u00e1 acompanhar e contribuir. \n\n  \n \nComunica\u00e7\u00e3o\n: A dupla precisa ter uma comunica\u00e7\u00e3o efetiva. \u00c9 necess\u00e1rio que ambos estejam cientes e de acordo com o que ser\u00e1 feito, \u00e9 v\u00e1lido utilizar ferramentas de BDD para definir claramente o que ser\u00e1 feito. Al\u00e9m disso, o piloto tem que estar constantemente se comunicando sobre o que est\u00e1 fazendo e pensando com o copiloto. \n\n  \n \nAutoconfian\u00e7a\n: \u00c9 essencial ter autoconfian\u00e7a nas suas habilidades, dessa forma cada membro conseguir\u00e1 contribuir e aprender bastante, criticando, recebendo cr\u00edticas, questionando pr\u00e1ticas e sugerindo novas ideias. \n\n  \n \nAutocontrole\n: Ter autocontrole para evitar distra\u00e7\u00f5es durante o pareamento e n\u00e3o se irritar ou se frustar com algo que n\u00e3o est\u00e1 dando certo contribui fortemente para a efici\u00eancia do par. Estabelecer algumas regras, como n\u00e3o usar celular para email ou mensagens que n\u00e3o v\u00e3o contribuir \u00e9 extremamente v\u00e1lido. \n\n  \n \nPaci\u00eancia\n: Ter paci\u00eancia com o outro membro do par quando este n\u00e3o tem tanto controle das ferramentas do computador \u00e9 de grande ajuda para que ambos tenham confian\u00e7a e vontade de trabalhar. \n\n  \n \nModos\n: Estabelecer algumas regras para que o pareamento seja eficiente \u00e9 extremamente importante. Regras como: trocar a fun\u00e7\u00e3o de cada um na dupla(piloto e copiloto) a cada intervalo de tempo pr\u00e9-estabelecido, n\u00e3o ler emails ou mensagens no celular, n\u00e3o tocar na tela, n\u00e3o usar palavras ofensivas ou xingamentos, entre outros. \n\n  \n \nHigiene\n: Apesar de n\u00e3o parecer essa pr\u00e1tica \u00e9 importante. Maus h\u00e1bitos de higiene pode deixar a outra pessoa extremamente desconfort\u00e1vel e fazer com que ela n\u00e3o queira parear. Ter pr\u00e1ticas b\u00e1sicas de higiene pessoal e no ambiente de trabalho \u00e9 essencial. \n\n\n \n\n\nTipos de Programa\u00e7\u00e3o Pareada\n\n\nEspecialista x Especialista\n\n\nTipo de pareamento que a princ\u00edpio parece ser o melhor, contudo, geralmente traz poucas inova\u00e7\u00f5es, j\u00e1 que especialistas j\u00e1 est\u00e3o acostumados com as estruturas e paradigmas pr\u00e9-definidos e tendem a n\u00e3o question\u00e1-los.\n\n\n\nPrincipiante x Principiante\n\n\nTipo de pareamento que traz melhores resultados que um principiante trabalhando sozinho, contudo, a curva de aprendizagem e de produ\u00e7\u00e3o deste tipo \u00e9 bem lenta, sendo ele desencorajado.\n\n\n\nEspecialista x Principiante\n\n\nTipo de pareamento mais recomendado, de modo que a curva de aprendizado do principiante tem crescimento r\u00e1pido, al\u00e9m de que, o desconhecimento do principiante de estruturas e paradigmas pr\u00e9-definidos o faz question\u00e1-los, podendo gerar novas ideias e inova\u00e7\u00f5es. Contudo, para que este pareamento funcione adequadamente, o especialista precisa ter paci\u00eancia e vontade de ensinar o principiante, bem como \u00e9 requerida proatividade deste \u00faltimo, para que o primeiro n\u00e3o fa\u00e7a tudo sozinho.\n\n\n\nTreinamento Programa\u00e7\u00e3o Pareada\n\n\n\n\nIncluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas\n\n\nRegistrar os detalhes da din\u00e2mica\n\n\nInfraestrutura Necess\u00e1ria para a din\u00e2mica\n\n\nC\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)\n\n\nTreinamento em, pelo menos 2 linguagens\n\n\n\n\nRefer\u00eancias\n\n\nPrograma\u00e7\u00e3o em par", 
            "title": "Pair Programming"
        }, 
        {
            "location": "/Pair-Programming/#programacao-pareada", 
            "text": "A Programa\u00e7\u00e3o Pareada \u00e9 uma das pr\u00e1ticas do  Extreme Programming (XP) , que sugere que o c\u00f3digo seja sempre trabalhado em dupla em um mesmo computador, revezando quem est\u00e1 digitando. Assim, existem dois pap\u00e9is nessa atividade, o piloto e o co-piloto. Os dois trabalham de forma an\u00e1loga a pilotos e co-pilotos de aeronaves.  O piloto \u00e9 o respons\u00e1vel pela digita\u00e7\u00e3o do c\u00f3digo, a sintaxe, e por deixar o seu parceiro ciente do que est\u00e1 fazendo, sempre explicando seu racioc\u00ednio durante a execu\u00e7\u00e3o. \nO co-piloto acompanha a elabora\u00e7\u00e3o do c\u00f3digo, os testes que dever\u00e3o passar, a pr\u00f3xima hist\u00f3ria a ser entregue, o tempo gasto na execu\u00e7\u00e3o dos testes, o tempo decorrido desde o \u00faltimo  commit , e a qualidade do c\u00f3digo em geral.  A ideia \u00e9 que o pareamento ajude a disseminar o conhecimento entre o time de desenvolvimento, que a aplica\u00e7\u00e3o tenha menos  bugs  e que mais funcionalidades sejam acrescentadas num menor per\u00edodo de tempo, resultando em melhores projetos.", 
            "title": "Programa\u00e7\u00e3o Pareada"
        }, 
        {
            "location": "/Pair-Programming/#programacao-pareada-remota", 
            "text": "Pareamento remoto significa pareamento a dist\u00e2ncia. Esse tipo de pareamento \u00e9 necess\u00e1rio quando os desenvolvedores n\u00e3o podem se encontrar pessoalmente. \nEste pareamento \u00e9 feito com o aux\u00edlio de ferramentas que permitem a comunica\u00e7\u00e3o e o compartilhamento de tela, como  hangouts  ou  skype , ou em alguns sites que permitem v\u00e1rias programarem juntas. \nA desvantagem desse pareamento \u00e9 que o par pode perder o foco com facilidade j\u00e1 que a press\u00e3o do outro n\u00e3o \u00e9 t\u00e3o grande, o que pode acarretar em perda de produtividade.", 
            "title": "Programa\u00e7\u00e3o Pareada Remota"
        }, 
        {
            "location": "/Pair-Programming/#boas-praticas-programacao-pareada", 
            "text": "Algumas pr\u00e1ticas de pareamento altamente efetivos:  \n     Profici\u00eancia : Ter profici\u00eancia com a linguagem e com as ferramentas utilizadas \u00e9 extremamente importante para um pareamento eficiente. Caso contr\u00e1rio, o rendimento n\u00e3o ser\u00e1 muito alto pois um membro do par ser\u00e1 apenas ouvinte e n\u00e3o conseguir\u00e1 acompanhar e contribuir.  \n     Comunica\u00e7\u00e3o : A dupla precisa ter uma comunica\u00e7\u00e3o efetiva. \u00c9 necess\u00e1rio que ambos estejam cientes e de acordo com o que ser\u00e1 feito, \u00e9 v\u00e1lido utilizar ferramentas de BDD para definir claramente o que ser\u00e1 feito. Al\u00e9m disso, o piloto tem que estar constantemente se comunicando sobre o que est\u00e1 fazendo e pensando com o copiloto.  \n     Autoconfian\u00e7a : \u00c9 essencial ter autoconfian\u00e7a nas suas habilidades, dessa forma cada membro conseguir\u00e1 contribuir e aprender bastante, criticando, recebendo cr\u00edticas, questionando pr\u00e1ticas e sugerindo novas ideias.  \n     Autocontrole : Ter autocontrole para evitar distra\u00e7\u00f5es durante o pareamento e n\u00e3o se irritar ou se frustar com algo que n\u00e3o est\u00e1 dando certo contribui fortemente para a efici\u00eancia do par. Estabelecer algumas regras, como n\u00e3o usar celular para email ou mensagens que n\u00e3o v\u00e3o contribuir \u00e9 extremamente v\u00e1lido.  \n     Paci\u00eancia : Ter paci\u00eancia com o outro membro do par quando este n\u00e3o tem tanto controle das ferramentas do computador \u00e9 de grande ajuda para que ambos tenham confian\u00e7a e vontade de trabalhar.  \n     Modos : Estabelecer algumas regras para que o pareamento seja eficiente \u00e9 extremamente importante. Regras como: trocar a fun\u00e7\u00e3o de cada um na dupla(piloto e copiloto) a cada intervalo de tempo pr\u00e9-estabelecido, n\u00e3o ler emails ou mensagens no celular, n\u00e3o tocar na tela, n\u00e3o usar palavras ofensivas ou xingamentos, entre outros.  \n     Higiene : Apesar de n\u00e3o parecer essa pr\u00e1tica \u00e9 importante. Maus h\u00e1bitos de higiene pode deixar a outra pessoa extremamente desconfort\u00e1vel e fazer com que ela n\u00e3o queira parear. Ter pr\u00e1ticas b\u00e1sicas de higiene pessoal e no ambiente de trabalho \u00e9 essencial.", 
            "title": "Boas pr\u00e1ticas Programa\u00e7\u00e3o Pareada"
        }, 
        {
            "location": "/Pair-Programming/#tipos-de-programacao-pareada", 
            "text": "", 
            "title": "Tipos de Programa\u00e7\u00e3o Pareada"
        }, 
        {
            "location": "/Pair-Programming/#especialista-x-especialista", 
            "text": "Tipo de pareamento que a princ\u00edpio parece ser o melhor, contudo, geralmente traz poucas inova\u00e7\u00f5es, j\u00e1 que especialistas j\u00e1 est\u00e3o acostumados com as estruturas e paradigmas pr\u00e9-definidos e tendem a n\u00e3o question\u00e1-los.", 
            "title": "Especialista x Especialista"
        }, 
        {
            "location": "/Pair-Programming/#principiante-x-principiante", 
            "text": "Tipo de pareamento que traz melhores resultados que um principiante trabalhando sozinho, contudo, a curva de aprendizagem e de produ\u00e7\u00e3o deste tipo \u00e9 bem lenta, sendo ele desencorajado.", 
            "title": "Principiante x Principiante"
        }, 
        {
            "location": "/Pair-Programming/#especialista-x-principiante", 
            "text": "Tipo de pareamento mais recomendado, de modo que a curva de aprendizado do principiante tem crescimento r\u00e1pido, al\u00e9m de que, o desconhecimento do principiante de estruturas e paradigmas pr\u00e9-definidos o faz question\u00e1-los, podendo gerar novas ideias e inova\u00e7\u00f5es. Contudo, para que este pareamento funcione adequadamente, o especialista precisa ter paci\u00eancia e vontade de ensinar o principiante, bem como \u00e9 requerida proatividade deste \u00faltimo, para que o primeiro n\u00e3o fa\u00e7a tudo sozinho.", 
            "title": "Especialista x Principiante"
        }, 
        {
            "location": "/Pair-Programming/#treinamento-programacao-pareada", 
            "text": "Incluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas  Registrar os detalhes da din\u00e2mica  Infraestrutura Necess\u00e1ria para a din\u00e2mica  C\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)  Treinamento em, pelo menos 2 linguagens", 
            "title": "Treinamento Programa\u00e7\u00e3o Pareada"
        }, 
        {
            "location": "/Pair-Programming/#referencias", 
            "text": "Programa\u00e7\u00e3o em par", 
            "title": "Refer\u00eancias"
        }, 
        {
            "location": "/Test-Driven-Development/", 
            "text": "Teste Unit\u00e1rio\n\n\n Extreme Programming, Unit Tests\n\n\nEste teste \u00e9 utilizado para validar as classes b\u00e1sicas e os componentes do sistema que s\u00e3o considerados os menores elementos test\u00e1veis. Consiste em verificar se o fluxo de controle e dados est\u00e3o corretos. Deve ser realizado no in\u00edcio da itera\u00e7\u00e3o.\n\n\n\n\n\nS\u00e3o escritos pelos desenvolvedores enquanto codificam o sistema.\n\n\nDevem ser feitos de modo que sejam f\u00e1ceis de executar e e re-executar v\u00e1rias e v\u00e1rias vezes para validar o sistema.\n\n\nDevem ser criados para todas as classes do sistema.\n\n\nS\u00e3o implementados para todos os m\u00e9todos do sistema.\n\n\nS\u00e3o escritos antes e ao decorrer da produ\u00e7\u00e3o do sistema.\n\n\nDevem ser o mais simples poss\u00edvel.\n\n\n\n\nRefer\u00eancia: \nDesenvolvimento XP\n\n\nTeste Unit\u00e1rio Automatizado\n\n\nStub\n\n\n Muitas vezes, durante a implementa\u00e7\u00e3o de testes, \u00e9 poss\u00edvel que surja a necessidade de se testar uma classe que dependa de uma outra ainda n\u00e3o implementada. Isto pode ocorrer especialmente na pr\u00e1tica de TDD (\nTest Driven Development\n), devido \u00e0 pr\u00e1tica conhecida como \nbabysteps\n, os \"passos de beb\u00ea\" que dizem que \u00e9 necess\u00e1rio realizar a implementa\u00e7\u00e3o nos menores m\u00f3dulos poss\u00edveis. Para que seja poss\u00edvel implementar os testes nesses casos, s\u00e3o utilizados os \nstubs\n. \nStubs\n s\u00e3o formas simplificadas de objetos reais, algo que se assemelha a uma vers\u00e3o \ndummy\n da classe a ser utilizada. Seu prop\u00f3sito \u00e9 realizar as fun\u00e7\u00f5es b\u00e1sicas esperadas de uma classe ainda n\u00e3o implementada para que uma outra que a tenha como depend\u00eancia possa ser testada.\n\n\n\nO que \u00e9 um Stub?\n\n\nUm Estudo Sobre Testes Te\u00f3ricos e Pr\u00e1ticos de Software\n\n\nMock\n\n\nMocks\n s\u00e3o semelhantes a \nstubs\n por\u00e9m, enquanto um \nstub\n serve como uma vers\u00e3o \ndummy\n de uma classe, um \nmock\n serve apenas como uma interface. O \nmock\n n\u00e3o possui nenhuma funcionalidade. Ele apenas intercepta as mensagens que saem da classe testada e s\u00e3o destinadas \u00e0 classe alvo, e retorna um valor pr\u00e9-estabelecido. Dentro do contexto de TDD, os \nmocks\n servem para garantir que as mensagens enviadas ter\u00e3o suas respostas esperadas de forma que os testes possam ser implementados. Al\u00e9m disso, eles s\u00e3o capazes de contar quantas vezes cada fun\u00e7\u00e3o foi chamada para que testes mais elaborados possam ser mais implementados.\n\n\n\nA abodagem Mock para TDD\n  \n\n\nBoas pr\u00e1ticas Testes Unit\u00e1rios\n\n\n Spring io, Unit Testing with Stubs and Mocks\n\n\n Ship it, Ruby e RSpec: melhorando a legibilidade de seus testes\n\n\nframeworks\n\n\nDesenvolvimento Orientado a Testes (TDD)\n\n\nDefini\u00e7\u00e3o\n\n\nTest Driven Development\n (TDD), ou \nTest-first development\n, \u00e9 um conjunto de t\u00e9cnicas de desenvolvimento orientado a testes associadas com \nExtreme Programming\n (XP) e metodologia \u00e1gil. Com TDD temos um desenvolvimento incremental do c\u00f3digo, iniciado pelos testes (Miller,2004). O programador deve ser capaz de escrever um c\u00f3digo afim de satisfazer o teste escrito previamente. Dessa forma, possibilita-se a reflex\u00e3o da modelagem antes de se escrever o c\u00f3digo funcional. A consequ\u00eancia \u00e9 um c\u00f3digo fonte bem testado.\n\n\n\nUma  importante  regra  no  TDD  \u00e9:  \n\"If  you  can\u2019t  write  a  test  for  what  you  are about to code, then you shouldn\u2019t even be thinking about coding\"\n [Chaplin 2001]. Outra regra  no  TDD  diz  que  quando  um  defeito  de  \nsoftware\n \u00e9  encontrado,  casos  de  teste  de unidade s\u00e3o adicionados ao pacote de teste antes de corrigir o c\u00f3digo.\n\n\nEsta abordagem tende a ser mais coesa, pois o teste do c\u00f3digo \u00e9 parte \u00edntima da codifica\u00e7\u00e3o,  e  n\u00e3o  um  processo  independente.  Al\u00e9m  disso,  reduz  o  acoplamento  dos componentes do \nsoftware\n. Com isso, torna-se poss\u00edvel fazer decis\u00f5es de projeto em cada est\u00e1gio do desenvolvimento. Assim, com o passar do tempo, o TDD tornou-se uma das pr\u00e1ticas mais populares entre os desenvolvedores de \nsoftware\n.\n\n\n## Ciclo de desenvolvimento orientado a Testes (TDD)\n\n![Ciclo TDD](http://2.bp.blogspot.com/-O5F7OQeP6cY/VkYYHPNvd2I/AAAAAAAAAIw/eyuHiDRrzyM/s1600/TDD.png)\n\nO ciclo do TDD \u00e9 bem simples:\n\n* Cria-se um teste.\n* Executa-se o teste, que por sua vez ir\u00e1 falhar, pois a funcionalidade n\u00e3o foi implementada ainda.\n* Codifica-se de modo a fazer o teste passar.\n* Executa-se o teste novamente e, caso obtenha sucesso, prossiga para o pr\u00f3ximo passo.\n* Refatore o c\u00f3digo.\n\n## Pontos Positivos do Uso do M\u00e9todo\n\n### Qualidade do c\u00f3digo\n\nUm dos principais ensinamentos, sen\u00e3o o principal, do TDD \u00e9 que se algo n\u00e3o \u00e9 poss\u00edvel de ser testado ent\u00e3o foi desenvolvido de forma errada. Parece um pouco dr\u00e1stico mas n\u00e3o \u00e9. Em pouco tempo utilizando testes o programador percebe mudan\u00e7as relevantes em sua forma de programar. Em suma o uso de TDD ajuda o programador a elaborar um c\u00f3digo com cada vez mais qualidade criando objetos concisos e com menos depend\u00eancias.\n\n### Racioc\u00ednio\n\nPara que o c\u00f3digo torne-se mais conciso, tenha menos acoplamentos e depend\u00eancias o programador deve for\u00e7ar seu racioc\u00ednio a n\u00edveis elevados. \u00c9 muito dif\u00edcil criar algo que realmente tenha um bom design. Utilizando TDD o programador praticamente obriga-se a olhar seu c\u00f3digo de outra forma normalmente jamais vista antes. A\u00ed \u00e9 que est\u00e1 a parte legal da coisa toda.\n\n\n### Seguran\u00e7a\n\nPonto important\u00edssimo para qualquer software nos dias de hoje. Mas n\u00e3o se engane, n\u00e3o estou falando de seguran\u00e7a da informa\u00e7\u00e3o e sim de seguran\u00e7a ao desenvolver. Pense em uma situa\u00e7\u00e3o em que o programador tenha um c\u00f3digo que desenvolvera ha cerca de um ano. Como normalmente vivemos em um mundo com in\u00fameros softwares desenvolvidos ao longo de cada ano, torna-se muito dif\u00edcil lembrar de tudo a respeito de um que merece nossa aten\u00e7\u00e3o em determinado momento. Normalmente deve-se realizar um trabalho bastante cauteloso para nova implementa\u00e7\u00e3o em um software que encontra-se em produ\u00e7\u00e3o. Toda e qualquer altera\u00e7\u00e3o deve ser minunciosamente testada e garantida que n\u00e3o afetar\u00e1 demais m\u00f3dulos do software. Fazer isto manualmente \u00e9 realmente complicado pois at\u00e9 ent\u00e3o n\u00e3o sabe-se (ou lembra-se) ao certo quem afeta quem no sistema. Com a pr\u00e1tica de TDD cada pequeno passo do software est\u00e1 devidamente testado. Ou seja, com este cen\u00e1rio o programador pode realizar qualquer altera\u00e7\u00e3o sem medo e sem culpa.\n\n\nComo cada pequeno passo tomado pelo sistema est\u00e1 testado ao qualquer m\u00f3dulo ou funcionalidade sofrer altera\u00e7\u00e3o, com poucos segundos descobre-se se houveram quebras e o melhor de tudo, onde foram essas quebras. Com isso em m\u00e3os a corre\u00e7\u00e3o das quebras torna-se uma tarefa simples sem frustrar o cliente e o usu\u00e1rio.\n\n\n### Trabalho em equipe\n\nPor prover mais seguran\u00e7a o trabalho em equipe torna-se muito mais proveitoso eliminando discuss\u00f5es e d\u00favidas desnecess\u00e1rias. Ao entrar no desenvolvimento do projeto o novo desenvolvedor tem apenas o trabalho de entender qual \ntask\n deve ser realizada e ler os testes das features j\u00e1 desenvolvidas. Ao rodar os testes pela primeira vez o programador descobre se est\u00e1 no caminho de ter um entreg\u00e1vel mais rapidamente e com seguran\u00e7a. Existem empresas em que um novo programador tem entreg\u00e1veis logo no primeiro dia de trabalho. Sem testes normalmente haveria um per\u00edodo de adapta\u00e7\u00e3o para pr\u00e9vio entendimento do que h\u00e1 no sistema no momento de seu ingresso ao time de desenvolvimento.\n\n\n### Documenta\u00e7\u00e3o\n\nAo criar testes descritivos estes servem como uma excelente documenta\u00e7\u00e3o para o \nsoftware\n. Quando qualquer programador for rodar os testes, basta habilitar o modo verbose que uma \u201chist\u00f3ria\u201d \u00e9 contada eliminando o \u00e1rduo trabalho de documentar um \nsoftware\n onde nos meios tradicionais tende a defasar-se. O problema \u00e9 que a documenta\u00e7\u00e3o tradicional raramente segue o mesmo ritmo do desenvolvimento. Com os testes unit\u00e1rios a \u201cdocumenta\u00e7\u00e3o\u201d \u00e9 gerada antes mesmo da nova \nfeature\n ser implementada e permanece fiel a qualquer altera\u00e7\u00e3o.\n\n\n## Por que muitos n\u00e3o praticam?\n\n### Dificuldade em come\u00e7ar\n\nApesar de uma extensa e clara documenta\u00e7\u00e3o, iniciar o desenvolvimento orientado a testes pode ser um trabalho \u00e1rduo para muitos pelo simples fato de que geralmente muitos iniciantes tentam pratic\u00e1-lo em c\u00f3digo j\u00e1 existente. Este definitivamente n\u00e3o \u00e9 o caminho. A principal caracter\u00edstica do desenvolvimento orientado a testes \u00e9 que ele seja orientado a testes. Em outras palavras o c\u00f3digo que realizar\u00e1 sua l\u00f3gica deve ser criado somente ap\u00f3s a cria\u00e7\u00e3o do teste e isso torna-se algo de dif\u00edcil aceita\u00e7\u00e3o pois ainda n\u00e3o se tem nada e j\u00e1 se faz necess\u00e1rio testar.\n\n\n### Curva de apendizado\n\nComplementando o item anterior, este \u00e9 outro motivo que faz programadores desistirem do desenvolvimento orientado a testes. Como qualquer nova tecnologia, para a pratica de TDD leva-se um bom tempo dependendo disponibilidade e principalmente da vontade do programador.\nTempo\n\nEngana-se quem pensa que produzir\u00e1 mais c\u00f3digo pelo simples fato de utilizar TDD. O TDD na verdade chega a desacelerar a produ\u00e7\u00e3o de c\u00f3digo. Quando falo em produ\u00e7\u00e3o de c\u00f3digo, me refiro \u00e0 quantidade de linhas escritas. Mas nisso tudo h\u00e1 vantagens e elas ser\u00e3o descritas mais a frente.\n\n\n### Cultura\n\nMuito fala-se de TDD no Brasil, mas ao questionarmos programadores de diversas empresas muitos apresentam os motivos citados acima para n\u00e3o utiliz\u00e1-lo. Existem sim muitas empresas e programadores que levam a pr\u00e1tica a s\u00e9rio e a evangelizam justamente por conhecerem as vantagens que o TDD nos traz.\n\n\n##  Devo praticar TDD 100% do tempo?\n\n\nA resposta para essa pergunta serve para toda e qualquer pr\u00e1tica de engenharia de \nsoftware\n. \u00c9 claro que n\u00e3o.\n\n\nComo j\u00e1 discutido anteriormente, TDD faz com que o desenvolvedor teste melhor sua aplica\u00e7\u00e3o, bem como pense em um design de classes melhor e mais flex\u00edvel para aquele problema. Mas n\u00e3o \u00e9 sempre que precisamos disso. Se estamos, por exemplo, escrevendo a implementa\u00e7\u00e3o de um DAO (classe que se comunica com o banco de dados), talvez escrever os testes antes n\u00e3o v\u00e1 ajudar tanto, afinal n\u00e3o h\u00e1 grandes decis\u00f5es de \ndesign\n a serem tomadas em classes como essa, e a funcionalidade tende a ser simples. Escrever o teste depois, portanto, n\u00e3o ser\u00e1 t\u00e3o diferente de escrever o teste antes.\n\n\nO desenvolvedor maduro leva em considera\u00e7\u00e3o a sua experi\u00eancia, e entende bem as vantagens da pr\u00e1tica. E, na hora certa, fazer uso dela.\n\n\n## Refer\u00eancias\n\n[1] K. W. Miller,Test Driven Development on the Cheap:Text Files and Explicit Scaffolding. Dispon\u00edvel em: \n.\n[2] GASPARETO, Ot\u00e1vio. Test Driven Development. Universidade Federal do Rio Grande do Sul. Dispon\u00edvel em: \n.\n[3] TDD: fundamentos do desenvolvimento orientado a testes. Dispon\u00edvel em: \n. Acesso em: 10/11/2016.  \n[4] Test-Driven Development. Dispon\u00edvel em: http://tdd.caelum.com.br/. Acesso em: 10/11/2016  \n[5] BORGES, Eduardo N. Conceitos e Benef\u00edcios do Test Driven Development. Universidade Federal do Rio Grande do Sul. Dispon\u00edvel em: \n.\n\n\n# Treinamento TDD\n\n## Introdu\u00e7\u00e3o\n\n\nPara realizar o treinamento de TDD (\nTest Driven Development\n), definimos uma metodologia de din\u00e2mica em grupo e a utilizamos em uma atividade. A metodologia escolhida foi uma pr\u00e1tica de pareamento j\u00e1 que, assim, podemos aplicar o treinamento em grupos grandes de pessoas. A ideia principal \u00e9 dividir o TDD em duas partes, para que cada elemento da dupla realize uma etapa.\n\n\nEm qualquer aplica\u00e7\u00e3o da metodologia TDD existem tr\u00eas partes b\u00e1sicas: a declara\u00e7\u00e3o do problema, a transforma\u00e7\u00e3o dele em testes e por fim a codifica\u00e7\u00e3o para que os testes sejam aceitos. Sendo assim no treinamento \u00e9 apresentado o problema, um dos elementos da dupla far\u00e1 os testes enquanto o outro faz o c\u00f3digo. Por fim a ideia \u00e9 que seja percebido que n\u00e3o \u00e9 t\u00e3o trivial quanto parece e vem a ser algo que se aperfei\u00e7oa com pr\u00e1tica.\n\n\nAl\u00e9m da metodologia, devemos nos atentar a qual linguagem de programa\u00e7\u00e3o utilizaremos. Tal fator \u00e9 vari\u00e1vel dependendo do grupo que est\u00e1 sendo treinado. Aconselha-se utilizar alguma linguagem que possua um \nframework\n de testes e que n\u00e3o exija longas configura\u00e7\u00f5es, logo o grupo possa se familiarizar rapidamente. No exemplo dado, utilizamos a linguagem \nPython\n com a biblioteca unittest como ferramenta de testes unit\u00e1rios, pois a mesma consegue atender todos esses objetivos.\n\n\nPor conta da apresenta\u00e7\u00e3o te\u00f3rica, que foi feita em slides, precisamos de um projetor ou televisor no ambiente de treinamento. Al\u00e9m disso, precisamos de um n\u00famero de computadores maior ou igual \u00e0 metade do n\u00famero de participantes. Caso o ambiente de desenvolvimento necessite de maiores configura\u00e7\u00f5es, disponibilize-as antes do treinamento para os participantes que desejarem utilizar m\u00e1quinas pr\u00f3prias e realize os procedimentos necess\u00e1rios nos computadores locais. No exemplo que ser\u00e1 trabalhado, foi utilizada uma linguagem que possui suporte nativo na maioria das m\u00e1quinas dos participantes. Caso n\u00e3o houvesse suporte, seria poss\u00edvel desenvolver em IDEs online, como o IDEOne.\n\n\n\n\nO treinamento \u00e9 dividido em tr\u00eas etapas:\n - Apresenta\u00e7\u00e3o te\u00f3rica sobre o Test Driven Development, tendo como \u00eanfase suas vantagens em uma produ\u00e7\u00e3o.\n - Breve introdu\u00e7\u00e3o \u00e0s ferramentas que ser\u00e3o utilizadas no treinamento.\n\n - Trabalho pr\u00e1tico com aplica\u00e7\u00e3o de TDD.\n\n## Desenvolvimento das etapas\n\n### Primeira etapa\nComposta pela apresenta\u00e7\u00e3o te\u00f3rica sobre TDD, nela ressaltamos as vantagens da pr\u00e1tica:\n\n- N\u00e3o h\u00e1 influ\u00eancia de um c\u00f3digo pronto ao codificar os testes, logo voc\u00ea consegue ter testes melhores e consequentemente melhor qualidade de c\u00f3digo.\n- Com o TDD o programador \u00e9 for\u00e7ado a olhar seu c\u00f3digo de maneira diferente, isso gera designs diferentes para o c\u00f3digo.\n- A seguran\u00e7a que o TDD gera para o software \u00e9 incompar\u00e1vel, pois com testes qualquer m\u00ednima altera\u00e7\u00e3o tem de ser muito cuidadosa para n\u00e3o quebrar testes anteriores e nem os da feature em si.\n- Novos programadores tem vantagem ao entrar no projeto. Em alguns casos o programador novo j\u00e1 tem projetos entreg\u00e1veis no primeiro dia pois elimina uma necessidade de adapta\u00e7\u00e3o gigante.\n- Testes descritivos ajudam muito na documenta\u00e7\u00e3o f\u00e1cil e enxuta.\n\nPor\u00e9m nem tudo \u00e9 um mar de rosas, h\u00e1 tamb\u00e9m dificuldades (desvantagens) que fazem muitos quererem fugir desta pr\u00e1tica:\n\n- A curva de aprendizado \u00e9 dif\u00edcil, \u00e9 algo que necessita de adapta\u00e7\u00e3o e pr\u00e1tica, por\u00e9m vem muito bem recompensada.\n- O in\u00edcio no meio do projeto \u00e9 dif\u00edcil pois os testers tentam aplicar testes a c\u00f3digo j\u00e1 existente perdendo algumas vantagens do TDD.\nO in\u00edcio da pr\u00e1tica TDD \u00e9 demorada, logo muitas empresas visando que tempo \u00e9 dinheiro n\u00e3o se interessam em aplicar o m\u00e9todo.\n\n### Segunda etapa\nNa segunda etapa, a ideia principal \u00e9 o nivelamento do conhecimento pr\u00e1tico de cria\u00e7\u00e3o de testes na linguagem espec\u00edfica escolhida, Python. Para isso n\u00e3o \u00e9 necess\u00e1rio muito tempo gra\u00e7as a simplicidade da pr\u00f3pria. \u00c9 mostrado o seguinte c\u00f3digo:\n\n![Exemplo](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/exemplo.png?raw=true)\n\n\nA partir dele, mencionamos as principais peculiaridades da linguagem para que seja poss\u00edvel desenvolver pequenos programas. Caso o problema a ser apresentado na terceira etapa tenha como requisito alguma estrutura mais avan\u00e7ada, esta deve ser mencionada neste momento do treinamento para que o foco permane\u00e7a apenas na pr\u00e1tica do TDD. Al\u00e9m disso deixa-se o c\u00f3digo projetado para que todos possam consult\u00e1-lo caso necess\u00e1rio.\n\n\nUtilizamos a biblioteca \u201cunittest\u201d, que possibilita realizar testes unit\u00e1rios como demonstrado no c\u00f3digo de exemplo. O resultado da execu\u00e7\u00e3o do exemplo, que cont\u00e9m dois testes v\u00e1lidos e um falhando, \u00e9:\n\n\n![Resultado](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/exemploResultado.png?raw=true)\n\n\nApresenta-se um teste falhando para exemplificar o funcionamento da biblioteca de testes e, ap\u00f3s esclarecimentos necess\u00e1rios sobre sintaxe, partimos para a terceira e \u00faltima etapa do treinamento.\n\n\n### Terceira etapa\n\n\nNeste \u00faltimo momento, \u00e9 apresentado um problema real que deve ser resolvido com o uso do TDD. \u00c9 orientado aos treinados para se unirem em pares e desenvolverem os testes. D\u00e1-se o tempo necess\u00e1rio para desenvolver os testes baseado na problem\u00e1tica apresentada e, logo em seguida, apresenta-se a solu\u00e7\u00e3o esperada para o problema at\u00e9 o momento. Como exemplo, temos uma classe Banco com alguns m\u00e9todos vazios que devem ser preenchidos para tornarem os testes verdadeiros.\n\n\n![CodigoInicial](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/classeBancoEstruturaBasica.png?raw=true)\n\n\nPerceba que os testes validam os valores retornados por cada fun\u00e7\u00e3o em determinadas situa\u00e7\u00f5es. Apresente o c\u00f3digo parcial com a classe montada e os testes falhando. A partir daqui, oriente os participantes a tornarem um dos testes verdadeiro e, s\u00f3 ap\u00f3s isso, ir para o pr\u00f3ximo teste. D\u00e1-se mais tempo para escrever a solu\u00e7\u00e3o e, ao final, mostra-se o c\u00f3digo completo. O c\u00f3digo que completa as fun\u00e7\u00f5es de forma que os testes mostrados como exemplo pode ser visto abaixo.\n\n\n![ClasseBanco](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/classeBanco.png?raw=true)\n\n\nPor fim, aponte as vantagens obtidas na pr\u00e1tica. No exemplo, podemos mencionar que caso n\u00e3o houvesse o teste de saque inv\u00e1lido, a implementa\u00e7\u00e3o da fun\u00e7\u00e3o saque poderia n\u00e3o considerar opera\u00e7\u00f5es que solicitassem valores maiores que o saldo, o que resultaria em saldo negativo. Assim, exemplificamos uma maior qualidade de c\u00f3digo como resultado do desenvolvimento orientado a testes. O \n\n c\u00f3digo \n que foi utilizado como exemplo e um modelo de \n apresenta\u00e7\u00e3o \n em slides, est\u00e3o dispon\u00edveis no reposit\u00f3rio da disciplina.", 
            "title": "Test Driven Development"
        }, 
        {
            "location": "/Test-Driven-Development/#teste-unitario", 
            "text": "Extreme Programming, Unit Tests  Este teste \u00e9 utilizado para validar as classes b\u00e1sicas e os componentes do sistema que s\u00e3o considerados os menores elementos test\u00e1veis. Consiste em verificar se o fluxo de controle e dados est\u00e3o corretos. Deve ser realizado no in\u00edcio da itera\u00e7\u00e3o.   S\u00e3o escritos pelos desenvolvedores enquanto codificam o sistema.  Devem ser feitos de modo que sejam f\u00e1ceis de executar e e re-executar v\u00e1rias e v\u00e1rias vezes para validar o sistema.  Devem ser criados para todas as classes do sistema.  S\u00e3o implementados para todos os m\u00e9todos do sistema.  S\u00e3o escritos antes e ao decorrer da produ\u00e7\u00e3o do sistema.  Devem ser o mais simples poss\u00edvel.   Refer\u00eancia:  Desenvolvimento XP", 
            "title": "Teste Unit\u00e1rio"
        }, 
        {
            "location": "/Test-Driven-Development/#teste-unitario-automatizado", 
            "text": "", 
            "title": "Teste Unit\u00e1rio Automatizado"
        }, 
        {
            "location": "/Test-Driven-Development/#stub", 
            "text": "Muitas vezes, durante a implementa\u00e7\u00e3o de testes, \u00e9 poss\u00edvel que surja a necessidade de se testar uma classe que dependa de uma outra ainda n\u00e3o implementada. Isto pode ocorrer especialmente na pr\u00e1tica de TDD ( Test Driven Development ), devido \u00e0 pr\u00e1tica conhecida como  babysteps , os \"passos de beb\u00ea\" que dizem que \u00e9 necess\u00e1rio realizar a implementa\u00e7\u00e3o nos menores m\u00f3dulos poss\u00edveis. Para que seja poss\u00edvel implementar os testes nesses casos, s\u00e3o utilizados os  stubs .  Stubs  s\u00e3o formas simplificadas de objetos reais, algo que se assemelha a uma vers\u00e3o  dummy  da classe a ser utilizada. Seu prop\u00f3sito \u00e9 realizar as fun\u00e7\u00f5es b\u00e1sicas esperadas de uma classe ainda n\u00e3o implementada para que uma outra que a tenha como depend\u00eancia possa ser testada.  O que \u00e9 um Stub?  Um Estudo Sobre Testes Te\u00f3ricos e Pr\u00e1ticos de Software", 
            "title": "Stub"
        }, 
        {
            "location": "/Test-Driven-Development/#mock", 
            "text": "Mocks  s\u00e3o semelhantes a  stubs  por\u00e9m, enquanto um  stub  serve como uma vers\u00e3o  dummy  de uma classe, um  mock  serve apenas como uma interface. O  mock  n\u00e3o possui nenhuma funcionalidade. Ele apenas intercepta as mensagens que saem da classe testada e s\u00e3o destinadas \u00e0 classe alvo, e retorna um valor pr\u00e9-estabelecido. Dentro do contexto de TDD, os  mocks  servem para garantir que as mensagens enviadas ter\u00e3o suas respostas esperadas de forma que os testes possam ser implementados. Al\u00e9m disso, eles s\u00e3o capazes de contar quantas vezes cada fun\u00e7\u00e3o foi chamada para que testes mais elaborados possam ser mais implementados.  A abodagem Mock para TDD", 
            "title": "Mock"
        }, 
        {
            "location": "/Test-Driven-Development/#boas-praticas-testes-unitarios", 
            "text": "Spring io, Unit Testing with Stubs and Mocks   Ship it, Ruby e RSpec: melhorando a legibilidade de seus testes  frameworks", 
            "title": "Boas pr\u00e1ticas Testes Unit\u00e1rios"
        }, 
        {
            "location": "/Test-Driven-Development/#desenvolvimento-orientado-a-testes-tdd", 
            "text": "", 
            "title": "Desenvolvimento Orientado a Testes (TDD)"
        }, 
        {
            "location": "/Test-Driven-Development/#definicao", 
            "text": "Test Driven Development  (TDD), ou  Test-first development , \u00e9 um conjunto de t\u00e9cnicas de desenvolvimento orientado a testes associadas com  Extreme Programming  (XP) e metodologia \u00e1gil. Com TDD temos um desenvolvimento incremental do c\u00f3digo, iniciado pelos testes (Miller,2004). O programador deve ser capaz de escrever um c\u00f3digo afim de satisfazer o teste escrito previamente. Dessa forma, possibilita-se a reflex\u00e3o da modelagem antes de se escrever o c\u00f3digo funcional. A consequ\u00eancia \u00e9 um c\u00f3digo fonte bem testado.  Uma  importante  regra  no  TDD  \u00e9:   \"If  you  can\u2019t  write  a  test  for  what  you  are about to code, then you shouldn\u2019t even be thinking about coding\"  [Chaplin 2001]. Outra regra  no  TDD  diz  que  quando  um  defeito  de   software  \u00e9  encontrado,  casos  de  teste  de unidade s\u00e3o adicionados ao pacote de teste antes de corrigir o c\u00f3digo. Esta abordagem tende a ser mais coesa, pois o teste do c\u00f3digo \u00e9 parte \u00edntima da codifica\u00e7\u00e3o,  e  n\u00e3o  um  processo  independente.  Al\u00e9m  disso,  reduz  o  acoplamento  dos componentes do  software . Com isso, torna-se poss\u00edvel fazer decis\u00f5es de projeto em cada est\u00e1gio do desenvolvimento. Assim, com o passar do tempo, o TDD tornou-se uma das pr\u00e1ticas mais populares entre os desenvolvedores de  software . \n\n## Ciclo de desenvolvimento orientado a Testes (TDD)\n\n![Ciclo TDD](http://2.bp.blogspot.com/-O5F7OQeP6cY/VkYYHPNvd2I/AAAAAAAAAIw/eyuHiDRrzyM/s1600/TDD.png)\n\nO ciclo do TDD \u00e9 bem simples:\n\n* Cria-se um teste.\n* Executa-se o teste, que por sua vez ir\u00e1 falhar, pois a funcionalidade n\u00e3o foi implementada ainda.\n* Codifica-se de modo a fazer o teste passar.\n* Executa-se o teste novamente e, caso obtenha sucesso, prossiga para o pr\u00f3ximo passo.\n* Refatore o c\u00f3digo.\n\n## Pontos Positivos do Uso do M\u00e9todo\n\n### Qualidade do c\u00f3digo Um dos principais ensinamentos, sen\u00e3o o principal, do TDD \u00e9 que se algo n\u00e3o \u00e9 poss\u00edvel de ser testado ent\u00e3o foi desenvolvido de forma errada. Parece um pouco dr\u00e1stico mas n\u00e3o \u00e9. Em pouco tempo utilizando testes o programador percebe mudan\u00e7as relevantes em sua forma de programar. Em suma o uso de TDD ajuda o programador a elaborar um c\u00f3digo com cada vez mais qualidade criando objetos concisos e com menos depend\u00eancias.\n\n### Racioc\u00ednio Para que o c\u00f3digo torne-se mais conciso, tenha menos acoplamentos e depend\u00eancias o programador deve for\u00e7ar seu racioc\u00ednio a n\u00edveis elevados. \u00c9 muito dif\u00edcil criar algo que realmente tenha um bom design. Utilizando TDD o programador praticamente obriga-se a olhar seu c\u00f3digo de outra forma normalmente jamais vista antes. A\u00ed \u00e9 que est\u00e1 a parte legal da coisa toda. \n\n### Seguran\u00e7a Ponto important\u00edssimo para qualquer software nos dias de hoje. Mas n\u00e3o se engane, n\u00e3o estou falando de seguran\u00e7a da informa\u00e7\u00e3o e sim de seguran\u00e7a ao desenvolver. Pense em uma situa\u00e7\u00e3o em que o programador tenha um c\u00f3digo que desenvolvera ha cerca de um ano. Como normalmente vivemos em um mundo com in\u00fameros softwares desenvolvidos ao longo de cada ano, torna-se muito dif\u00edcil lembrar de tudo a respeito de um que merece nossa aten\u00e7\u00e3o em determinado momento. Normalmente deve-se realizar um trabalho bastante cauteloso para nova implementa\u00e7\u00e3o em um software que encontra-se em produ\u00e7\u00e3o. Toda e qualquer altera\u00e7\u00e3o deve ser minunciosamente testada e garantida que n\u00e3o afetar\u00e1 demais m\u00f3dulos do software. Fazer isto manualmente \u00e9 realmente complicado pois at\u00e9 ent\u00e3o n\u00e3o sabe-se (ou lembra-se) ao certo quem afeta quem no sistema. Com a pr\u00e1tica de TDD cada pequeno passo do software est\u00e1 devidamente testado. Ou seja, com este cen\u00e1rio o programador pode realizar qualquer altera\u00e7\u00e3o sem medo e sem culpa. Como cada pequeno passo tomado pelo sistema est\u00e1 testado ao qualquer m\u00f3dulo ou funcionalidade sofrer altera\u00e7\u00e3o, com poucos segundos descobre-se se houveram quebras e o melhor de tudo, onde foram essas quebras. Com isso em m\u00e3os a corre\u00e7\u00e3o das quebras torna-se uma tarefa simples sem frustrar o cliente e o usu\u00e1rio. \n\n### Trabalho em equipe Por prover mais seguran\u00e7a o trabalho em equipe torna-se muito mais proveitoso eliminando discuss\u00f5es e d\u00favidas desnecess\u00e1rias. Ao entrar no desenvolvimento do projeto o novo desenvolvedor tem apenas o trabalho de entender qual  task  deve ser realizada e ler os testes das features j\u00e1 desenvolvidas. Ao rodar os testes pela primeira vez o programador descobre se est\u00e1 no caminho de ter um entreg\u00e1vel mais rapidamente e com seguran\u00e7a. Existem empresas em que um novo programador tem entreg\u00e1veis logo no primeiro dia de trabalho. Sem testes normalmente haveria um per\u00edodo de adapta\u00e7\u00e3o para pr\u00e9vio entendimento do que h\u00e1 no sistema no momento de seu ingresso ao time de desenvolvimento. \n\n### Documenta\u00e7\u00e3o Ao criar testes descritivos estes servem como uma excelente documenta\u00e7\u00e3o para o  software . Quando qualquer programador for rodar os testes, basta habilitar o modo verbose que uma \u201chist\u00f3ria\u201d \u00e9 contada eliminando o \u00e1rduo trabalho de documentar um  software  onde nos meios tradicionais tende a defasar-se. O problema \u00e9 que a documenta\u00e7\u00e3o tradicional raramente segue o mesmo ritmo do desenvolvimento. Com os testes unit\u00e1rios a \u201cdocumenta\u00e7\u00e3o\u201d \u00e9 gerada antes mesmo da nova  feature  ser implementada e permanece fiel a qualquer altera\u00e7\u00e3o. \n\n## Por que muitos n\u00e3o praticam?\n\n### Dificuldade em come\u00e7ar Apesar de uma extensa e clara documenta\u00e7\u00e3o, iniciar o desenvolvimento orientado a testes pode ser um trabalho \u00e1rduo para muitos pelo simples fato de que geralmente muitos iniciantes tentam pratic\u00e1-lo em c\u00f3digo j\u00e1 existente. Este definitivamente n\u00e3o \u00e9 o caminho. A principal caracter\u00edstica do desenvolvimento orientado a testes \u00e9 que ele seja orientado a testes. Em outras palavras o c\u00f3digo que realizar\u00e1 sua l\u00f3gica deve ser criado somente ap\u00f3s a cria\u00e7\u00e3o do teste e isso torna-se algo de dif\u00edcil aceita\u00e7\u00e3o pois ainda n\u00e3o se tem nada e j\u00e1 se faz necess\u00e1rio testar. \n\n### Curva de apendizado Complementando o item anterior, este \u00e9 outro motivo que faz programadores desistirem do desenvolvimento orientado a testes. Como qualquer nova tecnologia, para a pratica de TDD leva-se um bom tempo dependendo disponibilidade e principalmente da vontade do programador.\nTempo Engana-se quem pensa que produzir\u00e1 mais c\u00f3digo pelo simples fato de utilizar TDD. O TDD na verdade chega a desacelerar a produ\u00e7\u00e3o de c\u00f3digo. Quando falo em produ\u00e7\u00e3o de c\u00f3digo, me refiro \u00e0 quantidade de linhas escritas. Mas nisso tudo h\u00e1 vantagens e elas ser\u00e3o descritas mais a frente. \n\n### Cultura Muito fala-se de TDD no Brasil, mas ao questionarmos programadores de diversas empresas muitos apresentam os motivos citados acima para n\u00e3o utiliz\u00e1-lo. Existem sim muitas empresas e programadores que levam a pr\u00e1tica a s\u00e9rio e a evangelizam justamente por conhecerem as vantagens que o TDD nos traz. \n\n##  Devo praticar TDD 100% do tempo? A resposta para essa pergunta serve para toda e qualquer pr\u00e1tica de engenharia de  software . \u00c9 claro que n\u00e3o. Como j\u00e1 discutido anteriormente, TDD faz com que o desenvolvedor teste melhor sua aplica\u00e7\u00e3o, bem como pense em um design de classes melhor e mais flex\u00edvel para aquele problema. Mas n\u00e3o \u00e9 sempre que precisamos disso. Se estamos, por exemplo, escrevendo a implementa\u00e7\u00e3o de um DAO (classe que se comunica com o banco de dados), talvez escrever os testes antes n\u00e3o v\u00e1 ajudar tanto, afinal n\u00e3o h\u00e1 grandes decis\u00f5es de  design  a serem tomadas em classes como essa, e a funcionalidade tende a ser simples. Escrever o teste depois, portanto, n\u00e3o ser\u00e1 t\u00e3o diferente de escrever o teste antes. O desenvolvedor maduro leva em considera\u00e7\u00e3o a sua experi\u00eancia, e entende bem as vantagens da pr\u00e1tica. E, na hora certa, fazer uso dela. \n\n## Refer\u00eancias\n\n[1] K. W. Miller,Test Driven Development on the Cheap:Text Files and Explicit Scaffolding. Dispon\u00edvel em:  .\n[2] GASPARETO, Ot\u00e1vio. Test Driven Development. Universidade Federal do Rio Grande do Sul. Dispon\u00edvel em:  .\n[3] TDD: fundamentos do desenvolvimento orientado a testes. Dispon\u00edvel em:  . Acesso em: 10/11/2016.  \n[4] Test-Driven Development. Dispon\u00edvel em: http://tdd.caelum.com.br/. Acesso em: 10/11/2016  \n[5] BORGES, Eduardo N. Conceitos e Benef\u00edcios do Test Driven Development. Universidade Federal do Rio Grande do Sul. Dispon\u00edvel em:  .\n\n\n# Treinamento TDD\n\n## Introdu\u00e7\u00e3o Para realizar o treinamento de TDD ( Test Driven Development ), definimos uma metodologia de din\u00e2mica em grupo e a utilizamos em uma atividade. A metodologia escolhida foi uma pr\u00e1tica de pareamento j\u00e1 que, assim, podemos aplicar o treinamento em grupos grandes de pessoas. A ideia principal \u00e9 dividir o TDD em duas partes, para que cada elemento da dupla realize uma etapa. Em qualquer aplica\u00e7\u00e3o da metodologia TDD existem tr\u00eas partes b\u00e1sicas: a declara\u00e7\u00e3o do problema, a transforma\u00e7\u00e3o dele em testes e por fim a codifica\u00e7\u00e3o para que os testes sejam aceitos. Sendo assim no treinamento \u00e9 apresentado o problema, um dos elementos da dupla far\u00e1 os testes enquanto o outro faz o c\u00f3digo. Por fim a ideia \u00e9 que seja percebido que n\u00e3o \u00e9 t\u00e3o trivial quanto parece e vem a ser algo que se aperfei\u00e7oa com pr\u00e1tica. Al\u00e9m da metodologia, devemos nos atentar a qual linguagem de programa\u00e7\u00e3o utilizaremos. Tal fator \u00e9 vari\u00e1vel dependendo do grupo que est\u00e1 sendo treinado. Aconselha-se utilizar alguma linguagem que possua um  framework  de testes e que n\u00e3o exija longas configura\u00e7\u00f5es, logo o grupo possa se familiarizar rapidamente. No exemplo dado, utilizamos a linguagem  Python  com a biblioteca unittest como ferramenta de testes unit\u00e1rios, pois a mesma consegue atender todos esses objetivos. Por conta da apresenta\u00e7\u00e3o te\u00f3rica, que foi feita em slides, precisamos de um projetor ou televisor no ambiente de treinamento. Al\u00e9m disso, precisamos de um n\u00famero de computadores maior ou igual \u00e0 metade do n\u00famero de participantes. Caso o ambiente de desenvolvimento necessite de maiores configura\u00e7\u00f5es, disponibilize-as antes do treinamento para os participantes que desejarem utilizar m\u00e1quinas pr\u00f3prias e realize os procedimentos necess\u00e1rios nos computadores locais. No exemplo que ser\u00e1 trabalhado, foi utilizada uma linguagem que possui suporte nativo na maioria das m\u00e1quinas dos participantes. Caso n\u00e3o houvesse suporte, seria poss\u00edvel desenvolver em IDEs online, como o IDEOne. \n\n\n\nO treinamento \u00e9 dividido em tr\u00eas etapas:\n - Apresenta\u00e7\u00e3o te\u00f3rica sobre o Test Driven Development, tendo como \u00eanfase suas vantagens em uma produ\u00e7\u00e3o.\n - Breve introdu\u00e7\u00e3o \u00e0s ferramentas que ser\u00e3o utilizadas no treinamento. \n - Trabalho pr\u00e1tico com aplica\u00e7\u00e3o de TDD.\n\n## Desenvolvimento das etapas\n\n### Primeira etapa\nComposta pela apresenta\u00e7\u00e3o te\u00f3rica sobre TDD, nela ressaltamos as vantagens da pr\u00e1tica: \n- N\u00e3o h\u00e1 influ\u00eancia de um c\u00f3digo pronto ao codificar os testes, logo voc\u00ea consegue ter testes melhores e consequentemente melhor qualidade de c\u00f3digo.\n- Com o TDD o programador \u00e9 for\u00e7ado a olhar seu c\u00f3digo de maneira diferente, isso gera designs diferentes para o c\u00f3digo.\n- A seguran\u00e7a que o TDD gera para o software \u00e9 incompar\u00e1vel, pois com testes qualquer m\u00ednima altera\u00e7\u00e3o tem de ser muito cuidadosa para n\u00e3o quebrar testes anteriores e nem os da feature em si.\n- Novos programadores tem vantagem ao entrar no projeto. Em alguns casos o programador novo j\u00e1 tem projetos entreg\u00e1veis no primeiro dia pois elimina uma necessidade de adapta\u00e7\u00e3o gigante.\n- Testes descritivos ajudam muito na documenta\u00e7\u00e3o f\u00e1cil e enxuta.\n\nPor\u00e9m nem tudo \u00e9 um mar de rosas, h\u00e1 tamb\u00e9m dificuldades (desvantagens) que fazem muitos quererem fugir desta pr\u00e1tica:\n\n- A curva de aprendizado \u00e9 dif\u00edcil, \u00e9 algo que necessita de adapta\u00e7\u00e3o e pr\u00e1tica, por\u00e9m vem muito bem recompensada.\n- O in\u00edcio no meio do projeto \u00e9 dif\u00edcil pois os testers tentam aplicar testes a c\u00f3digo j\u00e1 existente perdendo algumas vantagens do TDD.\nO in\u00edcio da pr\u00e1tica TDD \u00e9 demorada, logo muitas empresas visando que tempo \u00e9 dinheiro n\u00e3o se interessam em aplicar o m\u00e9todo.\n\n### Segunda etapa\nNa segunda etapa, a ideia principal \u00e9 o nivelamento do conhecimento pr\u00e1tico de cria\u00e7\u00e3o de testes na linguagem espec\u00edfica escolhida, Python. Para isso n\u00e3o \u00e9 necess\u00e1rio muito tempo gra\u00e7as a simplicidade da pr\u00f3pria. \u00c9 mostrado o seguinte c\u00f3digo:\n\n![Exemplo](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/exemplo.png?raw=true) A partir dele, mencionamos as principais peculiaridades da linguagem para que seja poss\u00edvel desenvolver pequenos programas. Caso o problema a ser apresentado na terceira etapa tenha como requisito alguma estrutura mais avan\u00e7ada, esta deve ser mencionada neste momento do treinamento para que o foco permane\u00e7a apenas na pr\u00e1tica do TDD. Al\u00e9m disso deixa-se o c\u00f3digo projetado para que todos possam consult\u00e1-lo caso necess\u00e1rio. Utilizamos a biblioteca \u201cunittest\u201d, que possibilita realizar testes unit\u00e1rios como demonstrado no c\u00f3digo de exemplo. O resultado da execu\u00e7\u00e3o do exemplo, que cont\u00e9m dois testes v\u00e1lidos e um falhando, \u00e9: \n\n![Resultado](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/exemploResultado.png?raw=true) Apresenta-se um teste falhando para exemplificar o funcionamento da biblioteca de testes e, ap\u00f3s esclarecimentos necess\u00e1rios sobre sintaxe, partimos para a terceira e \u00faltima etapa do treinamento. \n\n### Terceira etapa Neste \u00faltimo momento, \u00e9 apresentado um problema real que deve ser resolvido com o uso do TDD. \u00c9 orientado aos treinados para se unirem em pares e desenvolverem os testes. D\u00e1-se o tempo necess\u00e1rio para desenvolver os testes baseado na problem\u00e1tica apresentada e, logo em seguida, apresenta-se a solu\u00e7\u00e3o esperada para o problema at\u00e9 o momento. Como exemplo, temos uma classe Banco com alguns m\u00e9todos vazios que devem ser preenchidos para tornarem os testes verdadeiros. \n\n![CodigoInicial](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/classeBancoEstruturaBasica.png?raw=true) Perceba que os testes validam os valores retornados por cada fun\u00e7\u00e3o em determinadas situa\u00e7\u00f5es. Apresente o c\u00f3digo parcial com a classe montada e os testes falhando. A partir daqui, oriente os participantes a tornarem um dos testes verdadeiro e, s\u00f3 ap\u00f3s isso, ir para o pr\u00f3ximo teste. D\u00e1-se mais tempo para escrever a solu\u00e7\u00e3o e, ao final, mostra-se o c\u00f3digo completo. O c\u00f3digo que completa as fun\u00e7\u00f5es de forma que os testes mostrados como exemplo pode ser visto abaixo. \n\n![ClasseBanco](https://github.com/fga-gpp-mds/00-Disciplina/blob/master/MDS_Material/TDD/classeBanco.png?raw=true) Por fim, aponte as vantagens obtidas na pr\u00e1tica. No exemplo, podemos mencionar que caso n\u00e3o houvesse o teste de saque inv\u00e1lido, a implementa\u00e7\u00e3o da fun\u00e7\u00e3o saque poderia n\u00e3o considerar opera\u00e7\u00f5es que solicitassem valores maiores que o saldo, o que resultaria em saldo negativo. Assim, exemplificamos uma maior qualidade de c\u00f3digo como resultado do desenvolvimento orientado a testes. O   c\u00f3digo   que foi utilizado como exemplo e um modelo de   apresenta\u00e7\u00e3o   em slides, est\u00e3o dispon\u00edveis no reposit\u00f3rio da disciplina.", 
            "title": "Defini\u00e7\u00e3o"
        }, 
        {
            "location": "/Acceptance-Test-Driven-Development-(ATDD)/", 
            "text": "Teste de Aceita\u00e7\u00e3o\n\n\nDefini\u00e7\u00e3o\n\n\nTestes de aceita\u00e7\u00e3o s\u00e3o especifica\u00e7\u00f5es para o comportamento desejado de um sistema. Esse tipo de teste consegue descrever, dada uma hist\u00f3ria de usu\u00e1rio, como o sistema deve se comportar de acordo com \ninputs\n e intera\u00e7\u00f5es que o usu\u00e1rio tem com a aplica\u00e7\u00e3o e qual deve ser o resultado esperado. Esses testes s\u00e3o criados para avaliar a qualidade externa do que foi desenvolvido, ou seja, verificar se o software (ou as funcionalidades) est\u00e1 pronto e pode ser utilizado por usu\u00e1rios finais. Esse tipo de teste \u00e9 idealmente implementado de acordo com a descri\u00e7\u00e3o do cliente/interessado no produto, que descreve situa\u00e7\u00f5es de uso da aplica\u00e7\u00e3o pelo usu\u00e1rio que devem ser testadas.\n\n\nBoas pr\u00e1ticas para a cria\u00e7\u00e3o de testes de aceita\u00e7\u00e3o\n\n\n\u00c9 importante lembrar que o uso do termo \nescrever o teste\n n\u00e3o necessariamente est\u00e1 relacionado a implementa\u00e7\u00e3o dele, mas sim \u00e0 defini\u00e7\u00e3o do que deve ser testado, quais s\u00e3o os aspectos relevantes do teste e ainda, qual deve ser o resultado esperado.\n\n\n\n\nPertence ao cliente\n\n\n\n\nO prop\u00f3sito principal dos testes de aceita\u00e7\u00e3o \u00e9 especificar os crit\u00e9rios que ir\u00e3o confirmar que uma hist\u00f3ria de usu\u00e1rio est\u00e1 funcionando. Logo, a pessoa mais bem posicionada para escrev\u00ea-los \u00e9 o cliente, que tem a maior compreens\u00e3o do que o produto deve fazer para atender o usu\u00e1rio final.\n\n+ **Devem ser escritos em conjunto**\n\n\n\nMesmo que o maior interessado do produto esteja numa melhor posi\u00e7\u00e3o para definir os testes de aceita\u00e7\u00e3o, a falta de conhecimento sobre o funcionamento da metodologia \u00e1gil, de hist\u00f3rias de usu\u00e1rio ou de testes em programa\u00e7\u00e3o pode ser um problema se este escrever os testes sozinho. Por isso, a melhor forma de realizar essa tarefa \u00e9 definir o que deve ser testado em conjunto, de maneira que toda a equipe se mantenha integrada e tenha no\u00e7\u00e3o do escopo de cada teste, al\u00e9m de aumentar a comunica\u00e7\u00e3o entre cliente e desenvolvedor.\n\n+ **\u00c9 sobre o _o que_, e n\u00e3o sobre o _como_**\n\n\n\n\u00c9 importante perceber que os testes de aceita\u00e7\u00e3o devem focar em \nonde est\u00e1 o valor para o usu\u00e1rio final\n, ao inv\u00e9s de em como esse valor \u00e9 adquirido. Ao escrever um teste de aceita\u00e7\u00e3o n\u00e3o se deve focar na implementa\u00e7\u00e3o, mas sim nas a\u00e7\u00f5es que s\u00e3o feitas e os detalhes desnecess\u00e1rios devem ser omitidos.\n\n+ **Deve ser de maneira que o cliente possa compreender**\n\n\nComo \u00e9 recomendado que os testes sejam escritos em conjunto com o cliente, \u00e9 f\u00e1cil compreender que a descri\u00e7\u00e3o dos passos de cada teste deve ser feita em uma linguagem simples e f\u00e1cil, de maneira que o cliente possa compreender o que ser\u00e1 feito em cada um e quais s\u00e3o seus objetivos.\n\n+ **Deve ser conciso, preciso e n\u00e3o amb\u00edguo**\n\n\nUma boa pr\u00e1tica na realiza\u00e7\u00e3o dos testes de aceita\u00e7\u00e3o \u00e9 manter a simplicidade na descri\u00e7\u00e3o dos passos. N\u00e3o \u00e9 necess\u00e1rio descrever quais telas precisam ser acessadas, quais bot\u00f5es s\u00e3o utilizados e outros fatores semelhantes - estes s\u00e3o passos da implementa\u00e7\u00e3o. O ideal \u00e9 refor\u00e7ar apenas o objetivo real do teste, de maneira que a compreens\u00e3o seja imediata.\n\n\n\n# Desenvolvimento Orientado a Teste de Aceita\u00e7\u00e3o (ATDD)\n\n## O que \u00e9?\n\n \nO Acceptance Test-Driven Development\n (ATDD), ou \"Desenvolvimento Orientado a Testes de Aceita\u00e7\u00e3o\", \u00e9 uma pr\u00e1tica de obten\u00e7\u00e3o de requisitos de forma colaborativa aplicada por equipes \u00e1geis, onde exemplos concretos e testes automatizados s\u00e3o utilizados para especificar os requisitos, tornando-os mais claros, com o objetivo de criar especifica\u00e7\u00f5es execut\u00e1veis.Eles s\u00e3o gerados em sess\u00f5es de cria\u00e7\u00e3o do \n backlog\n  do produto, com a participa\u00e7\u00e3o da equipe, \n Product Owner\n , al\u00e9m dos demais interessados.\n\nO ATDD \u00e9 muito similar ao TDD, diferenciando-se deste \u00faltimo pelo fato de termos uma colabora\u00e7\u00e3o maior entre o desenvolvedor, analista de qualidade (\n tester\n ) e neg\u00f3cio (cliente/partes interessadas). Enquanto o teste unit\u00e1rio est\u00e1 intrinsicamente relacionado com o c\u00f3digo, de um \u00e2ngulo do desenvolvedor (vis\u00e3o interna), o teste de aceita\u00e7\u00e3o est\u00e1 voltado ao ponto de vista do usu\u00e1rio, uma vis\u00e3o externa ao sistema.\n\n## Ciclo do desenvolvimento da metodologia ATDD\n\n\nA imagem abaixo representa o ciclo do desenvolvimento orientado a testes de aceita\u00e7\u00e3o, composto por 4 passos para aplic\u00e1-lo que ser\u00e3o descritos a seguir, conforme Elisabeth Hendrickson.\n\n![](https://cdn.infoq.com/statics_s2_20161011-0321_4/resource/articles/atdd-passo-a-passo/pt/resources/image01.png)\n\n## Aplicando o ATDD\n   1. **Debater os requisitos**\n\nAs hist\u00f3rias de usu\u00e1rio (\nuser story\n) s\u00e3o refinadas em um workshop ou em uma reuni\u00e3o de prepara\u00e7\u00e3o do backlog do produto  \n backlog grooming\n, antes da reuni\u00e3o de planejamento da itera\u00e7\u00e3o/sprint. Em ambos os casos, os participantes s\u00e3o uma equipe multifuncional, o Product Owner e, algum outro interessado que potencialmente tem mais informa\u00e7\u00f5es sobre as hist\u00f3rias.  \n\nAlgumas perguntas devem ser feitas para elencar exemplos de utiliza\u00e7\u00e3o ou cen\u00e1rios de uso dessas hist\u00f3rias de usu\u00e1rio e, assim, entendermos melhor o que est\u00e1 sendo conversado, de tal forma que esses cen\u00e1rios possam ser escritos como testes.\n\n   2. **Refinar os testes de aceita\u00e7\u00e3o**\n\nO pr\u00f3ximo passo \u00e9 organizar os testes de aceita\u00e7\u00e3o em um formato requerido pelo framework de automa\u00e7\u00e3o de testes.\n\n   3. **Implementar o c\u00f3digo com TDD**\n\nO pr\u00f3ximo passo \u00e9 implementar a funcionalidade para fazer com que o teste de aceita\u00e7\u00e3o passe.  \n\nE, para tanto, o desenvolvimento deve iniciar pelos testes unit\u00e1rios, incluindo todas as condi\u00e7\u00f5es propostas para as expectativas existentes.  \n\nDepois de codificados todos os testes unit\u00e1rios, eles s\u00e3o executados e passamos a uma fase para ajustar aqueles que est\u00e3o falhando.\n\n   4. **Apresentar os resultados dos testes de aceita\u00e7\u00e3o**\n\n Ap\u00f3s os testes passarem com sucesso, a hist\u00f3ria \u00e9 verificada pelo Product Owner, normalmente em uma reuni\u00e3o de Review/Showcase, onde ele poder\u00e1 aprov\u00e1-la ou n\u00e3o. O resultado pode levar \u00e0 cria\u00e7\u00e3o de uma nova hist\u00f3ria ou uma altera\u00e7\u00e3o nos testes existentes, a fim de contemplar novos cen\u00e1rios. Outra forma que tamb\u00e9m funciona bem, e n\u00e3o posterga a valida\u00e7\u00e3o em uma reuni\u00e3o espec\u00edfica, \u00e9 a valida\u00e7\u00e3o de cada hist\u00f3ria (Review), imediatamente ap\u00f3s ela ser desenvolvida pela equipe, de tal maneira que o Product Owner possa fazer isso com o desenvolvedor ou o par de desenvolvedores que a finalizaram.\n\n## Diferen\u00e7a entre ATDD e BDD\n\n O \nBehavior Driven Development\n (BDD) ou \u201cDesenvolvimento Guiado por Comportamento\u201d \u00e9 uma pr\u00e1tica \u00e1gil que permite uma melhor comunica\u00e7\u00e3o entre desenvolvedores, analistas de qualidade, \u00e1reas de neg\u00f3cio e pessoas n\u00e3o-t\u00e9cnicas, durante um projeto de software, descrevendo um ciclo de itera\u00e7\u00f5es com sa\u00eddas bem definidas e resultando na entrega de software testado e que funciona.\n\n\n O BDD d\u00e1 uma compreens\u00e3o mais clara sobre o que o sistema deve fazer a partir da perspectiva de todas as partes interessadas, tanto desenvolvedores e analistas quanto de clientes e outros \nstakeholders\n. Portanto, ATDD e BDD tem como foco a defini\u00e7\u00e3o do comportamento esperado do sistema com a participa\u00e7\u00e3o de todos os interessados, a diferen\u00e7a \u00e9 que o ATDD explicita o uso dos testes de aceita\u00e7\u00e3o enquanto o BDD n\u00e3o os exige, por\u00e9m na pr\u00e1tica do BDD os testes de aceita\u00e7\u00e3o s\u00e3o comumente usados.\n\n# Treinamento ATDD\n- Incluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas\n- Registrar os detalhes da din\u00e2mica\n- Infraestrutura Necess\u00e1ria para a din\u00e2mica\n- C\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)\n- Treinamento em, pelo menos 2 linguagens\n\n# Refer\u00eancias Bibliogr\u00e1ficas\n* INFOQ BRASIL.Acceptance Test-Driven Development (ATDD), passo a passo. Dispon\u00edvel em:\n\n. Acesso em: 19 de out. 2016", 
            "title": "Acceptance Test Driven Development (ATDD)"
        }, 
        {
            "location": "/Acceptance-Test-Driven-Development-(ATDD)/#teste-de-aceitacao", 
            "text": "", 
            "title": "Teste de Aceita\u00e7\u00e3o"
        }, 
        {
            "location": "/Acceptance-Test-Driven-Development-(ATDD)/#definicao", 
            "text": "Testes de aceita\u00e7\u00e3o s\u00e3o especifica\u00e7\u00f5es para o comportamento desejado de um sistema. Esse tipo de teste consegue descrever, dada uma hist\u00f3ria de usu\u00e1rio, como o sistema deve se comportar de acordo com  inputs  e intera\u00e7\u00f5es que o usu\u00e1rio tem com a aplica\u00e7\u00e3o e qual deve ser o resultado esperado. Esses testes s\u00e3o criados para avaliar a qualidade externa do que foi desenvolvido, ou seja, verificar se o software (ou as funcionalidades) est\u00e1 pronto e pode ser utilizado por usu\u00e1rios finais. Esse tipo de teste \u00e9 idealmente implementado de acordo com a descri\u00e7\u00e3o do cliente/interessado no produto, que descreve situa\u00e7\u00f5es de uso da aplica\u00e7\u00e3o pelo usu\u00e1rio que devem ser testadas.", 
            "title": "Defini\u00e7\u00e3o"
        }, 
        {
            "location": "/Acceptance-Test-Driven-Development-(ATDD)/#boas-praticas-para-a-criacao-de-testes-de-aceitacao", 
            "text": "\u00c9 importante lembrar que o uso do termo  escrever o teste  n\u00e3o necessariamente est\u00e1 relacionado a implementa\u00e7\u00e3o dele, mas sim \u00e0 defini\u00e7\u00e3o do que deve ser testado, quais s\u00e3o os aspectos relevantes do teste e ainda, qual deve ser o resultado esperado.   Pertence ao cliente   O prop\u00f3sito principal dos testes de aceita\u00e7\u00e3o \u00e9 especificar os crit\u00e9rios que ir\u00e3o confirmar que uma hist\u00f3ria de usu\u00e1rio est\u00e1 funcionando. Logo, a pessoa mais bem posicionada para escrev\u00ea-los \u00e9 o cliente, que tem a maior compreens\u00e3o do que o produto deve fazer para atender o usu\u00e1rio final.\n\n+ **Devem ser escritos em conjunto** Mesmo que o maior interessado do produto esteja numa melhor posi\u00e7\u00e3o para definir os testes de aceita\u00e7\u00e3o, a falta de conhecimento sobre o funcionamento da metodologia \u00e1gil, de hist\u00f3rias de usu\u00e1rio ou de testes em programa\u00e7\u00e3o pode ser um problema se este escrever os testes sozinho. Por isso, a melhor forma de realizar essa tarefa \u00e9 definir o que deve ser testado em conjunto, de maneira que toda a equipe se mantenha integrada e tenha no\u00e7\u00e3o do escopo de cada teste, al\u00e9m de aumentar a comunica\u00e7\u00e3o entre cliente e desenvolvedor.\n\n+ **\u00c9 sobre o _o que_, e n\u00e3o sobre o _como_** \u00c9 importante perceber que os testes de aceita\u00e7\u00e3o devem focar em  onde est\u00e1 o valor para o usu\u00e1rio final , ao inv\u00e9s de em como esse valor \u00e9 adquirido. Ao escrever um teste de aceita\u00e7\u00e3o n\u00e3o se deve focar na implementa\u00e7\u00e3o, mas sim nas a\u00e7\u00f5es que s\u00e3o feitas e os detalhes desnecess\u00e1rios devem ser omitidos.\n\n+ **Deve ser de maneira que o cliente possa compreender** Como \u00e9 recomendado que os testes sejam escritos em conjunto com o cliente, \u00e9 f\u00e1cil compreender que a descri\u00e7\u00e3o dos passos de cada teste deve ser feita em uma linguagem simples e f\u00e1cil, de maneira que o cliente possa compreender o que ser\u00e1 feito em cada um e quais s\u00e3o seus objetivos.\n\n+ **Deve ser conciso, preciso e n\u00e3o amb\u00edguo** Uma boa pr\u00e1tica na realiza\u00e7\u00e3o dos testes de aceita\u00e7\u00e3o \u00e9 manter a simplicidade na descri\u00e7\u00e3o dos passos. N\u00e3o \u00e9 necess\u00e1rio descrever quais telas precisam ser acessadas, quais bot\u00f5es s\u00e3o utilizados e outros fatores semelhantes - estes s\u00e3o passos da implementa\u00e7\u00e3o. O ideal \u00e9 refor\u00e7ar apenas o objetivo real do teste, de maneira que a compreens\u00e3o seja imediata.\n\n\n\n# Desenvolvimento Orientado a Teste de Aceita\u00e7\u00e3o (ATDD)\n\n## O que \u00e9?   O Acceptance Test-Driven Development  (ATDD), ou \"Desenvolvimento Orientado a Testes de Aceita\u00e7\u00e3o\", \u00e9 uma pr\u00e1tica de obten\u00e7\u00e3o de requisitos de forma colaborativa aplicada por equipes \u00e1geis, onde exemplos concretos e testes automatizados s\u00e3o utilizados para especificar os requisitos, tornando-os mais claros, com o objetivo de criar especifica\u00e7\u00f5es execut\u00e1veis.Eles s\u00e3o gerados em sess\u00f5es de cria\u00e7\u00e3o do   backlog   do produto, com a participa\u00e7\u00e3o da equipe,   Product Owner  , al\u00e9m dos demais interessados. O ATDD \u00e9 muito similar ao TDD, diferenciando-se deste \u00faltimo pelo fato de termos uma colabora\u00e7\u00e3o maior entre o desenvolvedor, analista de qualidade (  tester  ) e neg\u00f3cio (cliente/partes interessadas). Enquanto o teste unit\u00e1rio est\u00e1 intrinsicamente relacionado com o c\u00f3digo, de um \u00e2ngulo do desenvolvedor (vis\u00e3o interna), o teste de aceita\u00e7\u00e3o est\u00e1 voltado ao ponto de vista do usu\u00e1rio, uma vis\u00e3o externa ao sistema.\n\n## Ciclo do desenvolvimento da metodologia ATDD A imagem abaixo representa o ciclo do desenvolvimento orientado a testes de aceita\u00e7\u00e3o, composto por 4 passos para aplic\u00e1-lo que ser\u00e3o descritos a seguir, conforme Elisabeth Hendrickson.\n\n![](https://cdn.infoq.com/statics_s2_20161011-0321_4/resource/articles/atdd-passo-a-passo/pt/resources/image01.png)\n\n## Aplicando o ATDD\n   1. **Debater os requisitos** As hist\u00f3rias de usu\u00e1rio ( user story ) s\u00e3o refinadas em um workshop ou em uma reuni\u00e3o de prepara\u00e7\u00e3o do backlog do produto    backlog grooming , antes da reuni\u00e3o de planejamento da itera\u00e7\u00e3o/sprint. Em ambos os casos, os participantes s\u00e3o uma equipe multifuncional, o Product Owner e, algum outro interessado que potencialmente tem mais informa\u00e7\u00f5es sobre as hist\u00f3rias.   Algumas perguntas devem ser feitas para elencar exemplos de utiliza\u00e7\u00e3o ou cen\u00e1rios de uso dessas hist\u00f3rias de usu\u00e1rio e, assim, entendermos melhor o que est\u00e1 sendo conversado, de tal forma que esses cen\u00e1rios possam ser escritos como testes.\n\n   2. **Refinar os testes de aceita\u00e7\u00e3o** O pr\u00f3ximo passo \u00e9 organizar os testes de aceita\u00e7\u00e3o em um formato requerido pelo framework de automa\u00e7\u00e3o de testes.\n\n   3. **Implementar o c\u00f3digo com TDD** O pr\u00f3ximo passo \u00e9 implementar a funcionalidade para fazer com que o teste de aceita\u00e7\u00e3o passe.   E, para tanto, o desenvolvimento deve iniciar pelos testes unit\u00e1rios, incluindo todas as condi\u00e7\u00f5es propostas para as expectativas existentes.   Depois de codificados todos os testes unit\u00e1rios, eles s\u00e3o executados e passamos a uma fase para ajustar aqueles que est\u00e3o falhando.\n\n   4. **Apresentar os resultados dos testes de aceita\u00e7\u00e3o**  Ap\u00f3s os testes passarem com sucesso, a hist\u00f3ria \u00e9 verificada pelo Product Owner, normalmente em uma reuni\u00e3o de Review/Showcase, onde ele poder\u00e1 aprov\u00e1-la ou n\u00e3o. O resultado pode levar \u00e0 cria\u00e7\u00e3o de uma nova hist\u00f3ria ou uma altera\u00e7\u00e3o nos testes existentes, a fim de contemplar novos cen\u00e1rios. Outra forma que tamb\u00e9m funciona bem, e n\u00e3o posterga a valida\u00e7\u00e3o em uma reuni\u00e3o espec\u00edfica, \u00e9 a valida\u00e7\u00e3o de cada hist\u00f3ria (Review), imediatamente ap\u00f3s ela ser desenvolvida pela equipe, de tal maneira que o Product Owner possa fazer isso com o desenvolvedor ou o par de desenvolvedores que a finalizaram.\n\n## Diferen\u00e7a entre ATDD e BDD  O  Behavior Driven Development  (BDD) ou \u201cDesenvolvimento Guiado por Comportamento\u201d \u00e9 uma pr\u00e1tica \u00e1gil que permite uma melhor comunica\u00e7\u00e3o entre desenvolvedores, analistas de qualidade, \u00e1reas de neg\u00f3cio e pessoas n\u00e3o-t\u00e9cnicas, durante um projeto de software, descrevendo um ciclo de itera\u00e7\u00f5es com sa\u00eddas bem definidas e resultando na entrega de software testado e que funciona.  O BDD d\u00e1 uma compreens\u00e3o mais clara sobre o que o sistema deve fazer a partir da perspectiva de todas as partes interessadas, tanto desenvolvedores e analistas quanto de clientes e outros  stakeholders . Portanto, ATDD e BDD tem como foco a defini\u00e7\u00e3o do comportamento esperado do sistema com a participa\u00e7\u00e3o de todos os interessados, a diferen\u00e7a \u00e9 que o ATDD explicita o uso dos testes de aceita\u00e7\u00e3o enquanto o BDD n\u00e3o os exige, por\u00e9m na pr\u00e1tica do BDD os testes de aceita\u00e7\u00e3o s\u00e3o comumente usados.\n\n# Treinamento ATDD\n- Incluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas\n- Registrar os detalhes da din\u00e2mica\n- Infraestrutura Necess\u00e1ria para a din\u00e2mica\n- C\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)\n- Treinamento em, pelo menos 2 linguagens\n\n# Refer\u00eancias Bibliogr\u00e1ficas\n* INFOQ BRASIL.Acceptance Test-Driven Development (ATDD), passo a passo. Dispon\u00edvel em: . Acesso em: 19 de out. 2016", 
            "title": "Boas pr\u00e1ticas para a cria\u00e7\u00e3o de testes de aceita\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/", 
            "text": "Qualities of Quality\n\n\nD\u00edvidas t\u00e9cnicas:\nhttps://www.youtube.com/watch?v=pqeJFYwnkjE\n\n\n\n\nRefatora\u00e7\u00e3o\n\n\n A refatora\u00e7\u00e3o \u00e9 um processo de reorganiza\u00e7\u00e3o da estrutura interna do software, sem alterar o seu comportamento externo. \u00c9 um modo disciplinado de reorganizar c\u00f3digo, facilitando a posterior depura\u00e7\u00e3o, eliminando c\u00f3digo presum\u00edvel de introduzir erros. De modo geral, quando se refabrica o c\u00f3digo, melhora-se o desenho e a estrutura\u00e7\u00e3o deste.\n\n\n\nO que n\u00e3o \u00e9 Refatora\u00e7\u00e3o\n\n\n\n\nEncontrar e arrumar bugs enquanto faz o c\u00f3digo, de maneira que essa a\u00e7\u00e3o \u00e9 considerada apenas como melhoria de c\u00f3digo.\n\n\nIntensificar o tratamento de erros, que tamb\u00e9m \u00e9 considerado apenas como melhoria da cobertura de c\u00f3digo.\n\n\nC\u00f3digo defensivo, de maneira que erros aplica\u00e7\u00e3o sejam raros.\n\n\nTornar o c\u00f3digo mais test\u00e1vel.\n\n\n\n\nEm resumo, melhoria de cobertura e tratamento de erros n\u00e3o \u00e9 considerado como refatora\u00e7\u00e3o de c\u00f3digo.\n\n\nQuando a refatora\u00e7\u00e3o \u00e9 necess\u00e1ria?\n\n\nPara se encontrar um bug no c\u00f3digo\n\n\n Bugs s\u00e3o como baratas: se escondendo nos lugares mais escuros e sujos do c\u00f3digo. Desta forma, a limpeza do c\u00f3digo vai tornar evidente os poss\u00edveis bugs.\n\n\nAo se adicionar uma nova funcionalidade\n\n\n Ao se adicionar uma nova funcionalidade \u00e9 necess\u00e1rio refatorar o c\u00f3digo para um melhor entendimento do c\u00f3digo e para que os bugs fiquem mais vis\u00edveis, pois um c\u00f3digo desnecessariamente complexo dificulta a visualiza\u00e7\u00e3o de problemas.\n\n\nDurante a vis\u00e3o de c\u00f3digo\n\n\n A revis\u00e3o de c\u00f3digo \u00e9 sempre um bom momento para a refatora\u00e7\u00e3o, pois pode ser o \u00faltimo momento antes do c\u00f3digo/software estar dispon\u00edvel para o p\u00fablico.\n\n\n A melhor forma de revisar o c\u00f3digo \u00e9 em conjunto com o autor do c\u00f3digo, pois pode-se decidir formas e t\u00e9cnicas de refatora\u00e7\u00e3o sem prejudicar as funcionalidades. As mudan\u00e7as podem ser feita diretas ao ponto.\n\n\n\nQualquer hora\n\n\nDe tempos em tempos o c\u00f3digo precisa ser revisado para refatora\u00e7\u00e3o, de forma que fique mais limpo.\n\n\nPara qu\u00ea utilizar a refatora\u00e7\u00e3o?\n\n\n\n\nElimina\u00e7\u00e3o de c\u00f3digo duplicado, fazendo com que a repeti\u00e7\u00e3o de c\u00f3digo seja nivelada ao m\u00ednimo poss\u00edvel.\n\n\nElimana\u00e7\u00e3o de c\u00f3digo morto, excluindo linhas de c\u00f3digo que n\u00e3o acrescentam nada \u00e0 aplica\u00e7\u00e3o.\n\n\nMelhorar a l\u00f3gica utilizada no sistema, de maneira que o design seja mais claro para programadores de fora.\n\n\nMelhorar o uso da linguagem, otimizando o desempenho.\n\n\n\n\nBad Smells in code (mal cheiro de c\u00f3digo)\n\n\nBad smell \u00e9 uma situa\u00e7\u00e3o na qual a estrutura do programa pode ser melhorada com refatora\u00e7\u00e3o, como por exemplo: Duplica\u00e7\u00e3o de c\u00f3digo e classe ou m\u00e9todos longos.\n\n\nIdentificando mal cheiro de c\u00f3digo - m\u00e9tricas de c\u00f3digo fonte\n\n\n Existem v\u00e1rios indicativos de bad smells, abaixo deixo algumas defini\u00e7\u00f5es desses bad smells bem como a refatora\u00e7\u00e3o sugerida:\n\n\n\n\n\n\n\nLong Method/ God Method:\n \n\n S\u00e3o m\u00e9todos que centralizam a funcionalidade da classe e que, geralmente, s\u00e3o dif\u00edceis de entender e de manter.\nPara melhorar esses m\u00e9todos pode-se dividir o m\u00e9todo em dois ou transformar o m\u00e9todo em uma classe.\n\n\n\n\n\n\nFeature Envy:\n \n\n Acontece quando uma parte do c\u00f3digo de uma classe \"inveja\" outra classe, por exemplo quando um m\u00e9todo de uma classe usa atributos somente de outra classe.\nPara refatorar pode-se mover os m\u00e9todos e atributos entre classes ou juntar duas classes em uma.\n\n\n\n\n\n\nDivergent Change:\n\n\n Ocorre quando uma classe pode mudar frequentemente de diferentes formas e por raz\u00f5es distintas.\nComo refatora\u00e7\u00e3o pode-se dividir a classe em duas.\n\n\n\n\n\n\nShotgun Surgery:\n \n\n Oposto do Divergent Change acima, pois toda vez que uma classe for alterada, s\u00e3o necess\u00e1rias v\u00e1rias pequenas mudan\u00e7as em outras classes diferentes.\nComo refatora\u00e7\u00e3o pode se mover m\u00e9todos e atributos entre as classes e juntar duas classes em uma.\n\n\n\n\n\n\nRefused Bequest:\n \n\n Ocorre quando uma classe herda atributos e m\u00e9todos de outra classe, mas n\u00e3o os usa.\nComo refatora\u00e7\u00e3o prop\u00f5e-se mover o m\u00e9todo ou atributo da superclasse para a subclasse e substituir o relacionamento de heran\u00e7a por associa\u00e7\u00e3o.\n\n\n\n\n\n\nComments:\n \n\n Os coment\u00e1rios n\u00e3o s\u00e3o ruins, por\u00e9m quando em excesso podem indicar que os nomes de m\u00e9todos/atributos n\u00e3o est\u00e3o suficientemente expressivos.\nPode-se quebrar um m\u00e9todo em dois ou renomear.\n\n\n\n\n\n\nExemplo de Refatora\u00e7\u00e3o\n\n\nA refatora\u00e7\u00e3o deve resultar em um c\u00f3digo mais limpo, que seja leg\u00edvel, claro e com o m\u00ednimo de repeti\u00e7\u00f5es. Na imagem abaixo podemos fazer uma analogia a refatora\u00e7\u00e3o:\n\n\n\n\n Esta imagem retrata uma cozinha em duas situa\u00e7\u00f5es distintas. Na esquerda, vemos uma cozinha em situa\u00e7\u00e3o ca\u00f3tica, onde preparar alimentos, lavar e encontrar utens\u00edlios, que s\u00e3o o objetivo principal da cozinha, se tornaram tarefas dif\u00edceis. J\u00e1 na direita, vemos uma cozinha limpa e organizada, onde pode-se realizar as mesmas tarefas da anterior, por\u00e9m com muito mais facilidade.\n\n\n\n A refatora\u00e7\u00e3o deve funcionar desta mesma forma: fazer com que um c\u00f3digo inadequado se torne limpo, facilitando seu entendimento, e tornando a detec\u00e7\u00e3o de bugs mais simples. A refatora\u00e7\u00e3o n\u00e3o pode alterar o comportamento do c\u00f3digo.\n\n\n\nFerramentas das m\u00e9tricas\n\n\nRela\u00e7\u00e3o entre Testes e Refatora\u00e7\u00e3o\n\n\nRefatora\u00e7\u00e3o e Testes\n\n\n Os testes est\u00e3o intrinsecamente relacionados \u00e0 refatora\u00e7\u00e3o. Como a refatora\u00e7\u00e3o n\u00e3o pode alterar o funcionamento do c\u00f3digo, os testes s\u00e3o a perfeita ferramenta para garantir o funcionamento correto do c\u00f3digo \nantes e depois\n da refatora\u00e7\u00e3o.\n\n\nRefatora\u00e7\u00e3o e TDD\n\n\n O TDD tamb\u00e9m est\u00e1 relacionado \u00e0 refatora\u00e7\u00e3o, pois a refatora\u00e7\u00e3o dos testes \u00e9 parte b\u00e1sica do ciclo de desenvolvimento direcionado \u00e0 testes. Pode-se entender essa rela\u00e7\u00e3o atrav\u00e9s da figura abaixo:\n\n\n\n\nTipos de Refatora\u00e7\u00e3o\n\n\nTreinamento\n\n\n\n\nIncluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas\n\n\nRegistrar os detalhes da din\u00e2mica\n\n\nInfraestrutura Necess\u00e1ria para a din\u00e2mica\n\n\nC\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)\n\n\nTreinamento em, pelo menos 2 linguagens\n\n\n\n\nRefer\u00eancias\n\n\n Engenharia de software. Refactoring.\n\n\nIan Sommerville. Engenharia de Software, 9\u00aa Edi\u00e7\u00e3o. Pearson Education, 2011.", 
            "title": "Refactoring"
        }, 
        {
            "location": "/Refactoring/#refatoracao", 
            "text": "A refatora\u00e7\u00e3o \u00e9 um processo de reorganiza\u00e7\u00e3o da estrutura interna do software, sem alterar o seu comportamento externo. \u00c9 um modo disciplinado de reorganizar c\u00f3digo, facilitando a posterior depura\u00e7\u00e3o, eliminando c\u00f3digo presum\u00edvel de introduzir erros. De modo geral, quando se refabrica o c\u00f3digo, melhora-se o desenho e a estrutura\u00e7\u00e3o deste.", 
            "title": "Refatora\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/#o-que-nao-e-refatoracao", 
            "text": "Encontrar e arrumar bugs enquanto faz o c\u00f3digo, de maneira que essa a\u00e7\u00e3o \u00e9 considerada apenas como melhoria de c\u00f3digo.  Intensificar o tratamento de erros, que tamb\u00e9m \u00e9 considerado apenas como melhoria da cobertura de c\u00f3digo.  C\u00f3digo defensivo, de maneira que erros aplica\u00e7\u00e3o sejam raros.  Tornar o c\u00f3digo mais test\u00e1vel.   Em resumo, melhoria de cobertura e tratamento de erros n\u00e3o \u00e9 considerado como refatora\u00e7\u00e3o de c\u00f3digo.", 
            "title": "O que n\u00e3o \u00e9 Refatora\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/#quando-a-refatoracao-e-necessaria", 
            "text": "", 
            "title": "Quando a refatora\u00e7\u00e3o \u00e9 necess\u00e1ria?"
        }, 
        {
            "location": "/Refactoring/#para-se-encontrar-um-bug-no-codigo", 
            "text": "Bugs s\u00e3o como baratas: se escondendo nos lugares mais escuros e sujos do c\u00f3digo. Desta forma, a limpeza do c\u00f3digo vai tornar evidente os poss\u00edveis bugs.", 
            "title": "Para se encontrar um bug no c\u00f3digo"
        }, 
        {
            "location": "/Refactoring/#ao-se-adicionar-uma-nova-funcionalidade", 
            "text": "Ao se adicionar uma nova funcionalidade \u00e9 necess\u00e1rio refatorar o c\u00f3digo para um melhor entendimento do c\u00f3digo e para que os bugs fiquem mais vis\u00edveis, pois um c\u00f3digo desnecessariamente complexo dificulta a visualiza\u00e7\u00e3o de problemas.", 
            "title": "Ao se adicionar uma nova funcionalidade"
        }, 
        {
            "location": "/Refactoring/#durante-a-visao-de-codigo", 
            "text": "A revis\u00e3o de c\u00f3digo \u00e9 sempre um bom momento para a refatora\u00e7\u00e3o, pois pode ser o \u00faltimo momento antes do c\u00f3digo/software estar dispon\u00edvel para o p\u00fablico.   A melhor forma de revisar o c\u00f3digo \u00e9 em conjunto com o autor do c\u00f3digo, pois pode-se decidir formas e t\u00e9cnicas de refatora\u00e7\u00e3o sem prejudicar as funcionalidades. As mudan\u00e7as podem ser feita diretas ao ponto.", 
            "title": "Durante a vis\u00e3o de c\u00f3digo"
        }, 
        {
            "location": "/Refactoring/#qualquer-hora", 
            "text": "De tempos em tempos o c\u00f3digo precisa ser revisado para refatora\u00e7\u00e3o, de forma que fique mais limpo.", 
            "title": "Qualquer hora"
        }, 
        {
            "location": "/Refactoring/#para-que-utilizar-a-refatoracao", 
            "text": "Elimina\u00e7\u00e3o de c\u00f3digo duplicado, fazendo com que a repeti\u00e7\u00e3o de c\u00f3digo seja nivelada ao m\u00ednimo poss\u00edvel.  Elimana\u00e7\u00e3o de c\u00f3digo morto, excluindo linhas de c\u00f3digo que n\u00e3o acrescentam nada \u00e0 aplica\u00e7\u00e3o.  Melhorar a l\u00f3gica utilizada no sistema, de maneira que o design seja mais claro para programadores de fora.  Melhorar o uso da linguagem, otimizando o desempenho.", 
            "title": "Para qu\u00ea utilizar a refatora\u00e7\u00e3o?"
        }, 
        {
            "location": "/Refactoring/#bad-smells-in-code-mal-cheiro-de-codigo", 
            "text": "Bad smell \u00e9 uma situa\u00e7\u00e3o na qual a estrutura do programa pode ser melhorada com refatora\u00e7\u00e3o, como por exemplo: Duplica\u00e7\u00e3o de c\u00f3digo e classe ou m\u00e9todos longos.", 
            "title": "Bad Smells in code (mal cheiro de c\u00f3digo)"
        }, 
        {
            "location": "/Refactoring/#identificando-mal-cheiro-de-codigo-metricas-de-codigo-fonte", 
            "text": "Existem v\u00e1rios indicativos de bad smells, abaixo deixo algumas defini\u00e7\u00f5es desses bad smells bem como a refatora\u00e7\u00e3o sugerida:    Long Method/ God Method:    S\u00e3o m\u00e9todos que centralizam a funcionalidade da classe e que, geralmente, s\u00e3o dif\u00edceis de entender e de manter.\nPara melhorar esses m\u00e9todos pode-se dividir o m\u00e9todo em dois ou transformar o m\u00e9todo em uma classe.    Feature Envy:    Acontece quando uma parte do c\u00f3digo de uma classe \"inveja\" outra classe, por exemplo quando um m\u00e9todo de uma classe usa atributos somente de outra classe.\nPara refatorar pode-se mover os m\u00e9todos e atributos entre classes ou juntar duas classes em uma.    Divergent Change:   Ocorre quando uma classe pode mudar frequentemente de diferentes formas e por raz\u00f5es distintas.\nComo refatora\u00e7\u00e3o pode-se dividir a classe em duas.    Shotgun Surgery:    Oposto do Divergent Change acima, pois toda vez que uma classe for alterada, s\u00e3o necess\u00e1rias v\u00e1rias pequenas mudan\u00e7as em outras classes diferentes.\nComo refatora\u00e7\u00e3o pode se mover m\u00e9todos e atributos entre as classes e juntar duas classes em uma.    Refused Bequest:    Ocorre quando uma classe herda atributos e m\u00e9todos de outra classe, mas n\u00e3o os usa.\nComo refatora\u00e7\u00e3o prop\u00f5e-se mover o m\u00e9todo ou atributo da superclasse para a subclasse e substituir o relacionamento de heran\u00e7a por associa\u00e7\u00e3o.    Comments:    Os coment\u00e1rios n\u00e3o s\u00e3o ruins, por\u00e9m quando em excesso podem indicar que os nomes de m\u00e9todos/atributos n\u00e3o est\u00e3o suficientemente expressivos.\nPode-se quebrar um m\u00e9todo em dois ou renomear.", 
            "title": "Identificando mal cheiro de c\u00f3digo - m\u00e9tricas de c\u00f3digo fonte"
        }, 
        {
            "location": "/Refactoring/#exemplo-de-refatoracao", 
            "text": "A refatora\u00e7\u00e3o deve resultar em um c\u00f3digo mais limpo, que seja leg\u00edvel, claro e com o m\u00ednimo de repeti\u00e7\u00f5es. Na imagem abaixo podemos fazer uma analogia a refatora\u00e7\u00e3o:    Esta imagem retrata uma cozinha em duas situa\u00e7\u00f5es distintas. Na esquerda, vemos uma cozinha em situa\u00e7\u00e3o ca\u00f3tica, onde preparar alimentos, lavar e encontrar utens\u00edlios, que s\u00e3o o objetivo principal da cozinha, se tornaram tarefas dif\u00edceis. J\u00e1 na direita, vemos uma cozinha limpa e organizada, onde pode-se realizar as mesmas tarefas da anterior, por\u00e9m com muito mais facilidade.   A refatora\u00e7\u00e3o deve funcionar desta mesma forma: fazer com que um c\u00f3digo inadequado se torne limpo, facilitando seu entendimento, e tornando a detec\u00e7\u00e3o de bugs mais simples. A refatora\u00e7\u00e3o n\u00e3o pode alterar o comportamento do c\u00f3digo.", 
            "title": "Exemplo de Refatora\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/#ferramentas-das-metricas", 
            "text": "", 
            "title": "Ferramentas das m\u00e9tricas"
        }, 
        {
            "location": "/Refactoring/#relacao-entre-testes-e-refatoracao", 
            "text": "", 
            "title": "Rela\u00e7\u00e3o entre Testes e Refatora\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/#refatoracao-e-testes", 
            "text": "Os testes est\u00e3o intrinsecamente relacionados \u00e0 refatora\u00e7\u00e3o. Como a refatora\u00e7\u00e3o n\u00e3o pode alterar o funcionamento do c\u00f3digo, os testes s\u00e3o a perfeita ferramenta para garantir o funcionamento correto do c\u00f3digo  antes e depois  da refatora\u00e7\u00e3o.", 
            "title": "Refatora\u00e7\u00e3o e Testes"
        }, 
        {
            "location": "/Refactoring/#refatoracao-e-tdd", 
            "text": "O TDD tamb\u00e9m est\u00e1 relacionado \u00e0 refatora\u00e7\u00e3o, pois a refatora\u00e7\u00e3o dos testes \u00e9 parte b\u00e1sica do ciclo de desenvolvimento direcionado \u00e0 testes. Pode-se entender essa rela\u00e7\u00e3o atrav\u00e9s da figura abaixo:", 
            "title": "Refatora\u00e7\u00e3o e TDD"
        }, 
        {
            "location": "/Refactoring/#tipos-de-refatoracao", 
            "text": "", 
            "title": "Tipos de Refatora\u00e7\u00e3o"
        }, 
        {
            "location": "/Refactoring/#treinamento", 
            "text": "Incluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas  Registrar os detalhes da din\u00e2mica  Infraestrutura Necess\u00e1ria para a din\u00e2mica  C\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)  Treinamento em, pelo menos 2 linguagens", 
            "title": "Treinamento"
        }, 
        {
            "location": "/Refactoring/#referencias", 
            "text": "Engenharia de software. Refactoring.  Ian Sommerville. Engenharia de Software, 9\u00aa Edi\u00e7\u00e3o. Pearson Education, 2011.", 
            "title": "Refer\u00eancias"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/", 
            "text": "Integra\u00e7\u00e3o Cont\u00ednua\n\n\nIntrodu\u00e7\u00e3o\n\n\nIntegra\u00e7\u00e3o Cont\u00ednua \u00e9 uma pr\u00e1tica de desenvolvimento de software onde os membros de um time integram seu trabalho frequentemente, geralmente cada pessoa integra pelo menos diariamente \u0096 podendo haver m\u00faltiplas integra\u00e7\u00f5es por dia. Cada integra\u00e7\u00e3o \u00e9 verificada por um build automatizado (incluindo testes) para detectar erros de integra\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel. Muitos times acham que essa abordagem leva a uma significante redu\u00e7\u00e3o nos problemas de integra\u00e7\u00e3o e permite que um time desenvolva software coeso mais rapidamente.\n Martin Fowler\n\n\nA vis\u00e3o de integra\u00e7\u00e3o cont\u00ednua do software \u00e9 uma pr\u00e1tica oriunda do metodologia \u00e1gil XP, que visa integrar o c\u00f3digo alterado na mesma frequ\u00eancia com que as funcionalidades s\u00e3o desenvolvidas. A implementa\u00e7\u00e3o desta pr\u00e1tica traz o benef\u00edcio de detectar erros no sistema o mais r\u00e1pido poss\u00edvel, garantindo maior qualidade no produto final.\n\n\nControle de Vers\u00e3o\n\n\nO controle de vers\u00e3o \u00e9 uma ferramenta crucial para a integra\u00e7\u00e3o cont\u00ednua, pelo simples fato de ser uma ferramenta que permite o trabalho colaborativo, onde h\u00e1 compartilhamento de dados entre diversos desenvolvedores que trabalham em conjunto. Para o XP, que tem como premissa o trabalho cont\u00ednuo e constante, o controle de vers\u00e3o \u00e9 essencial.\n\n\nO controle de vers\u00e3o juntamente com um reposit\u00f3rio online permitem ter-se sempre uma vers\u00e3o v\u00e1lida e funcional, e saber quem fez altera\u00e7\u00f5es no projeto, e ainda evita que desenvolvedores fa\u00e7am trabalho j\u00e1 feito. Para ferramentas de controle de vers\u00e3o que permitem o trabalho em conjunto temos CVS, \nSubversion\n, \nGit\n, entre outros. Utilizando reposit\u00f3rios onlines como por exemplo github, temos juntamente com a ferramenta de versionamento o suporte online para usu\u00e1rios, podendo desde acessar e visualizar um sistema a gerenci\u00e1-lo.\n\n\nCom o desenvolvedor sempre integrando c\u00f3digo, benef\u00edcios como restaura\u00e7\u00e3o de vers\u00f5es anteriores, compara\u00e7\u00e3o de c\u00f3digo e gest\u00e3o de altera\u00e7\u00f5es s\u00e3o poss\u00edveis gra\u00e7as \u00e0 ferramenta de controle de vers\u00e3o e seu reposit\u00f3rio.\n\n\nTestes Automatizados\n\n\nUma das vantagens quando se utiliza uma ferramenta de integra\u00e7\u00e3o cont\u00ednua reside nos testes automatizados. Uma vez que se conclui uma funcionalidade do sistema e deseja-se integrar estas mudan\u00e7as \u00e0 build principal, deve-se antes ter certeza de que essa build est\u00e1 devidamente testada e livre de erros. Por\u00e9m, somente  este procedimento n\u00e3o garante a integridade do sistema como um todo. Quando se implementa uma ferramenta de integra\u00e7\u00e3o cont\u00ednua dentro do seu projeto, tem-se implicitamente a necessidade de que sua build principal esteja sempre \u00edntegra. Isto \u00e9 poss\u00edvel gra\u00e7as \u00e0 integra\u00e7\u00e3o cont\u00ednua. Na m\u00e1quina servidora onde est\u00e1 hospedada o ambiente de integra\u00e7\u00e3o cont\u00ednua pode-se, e deve-se, implementar o uso de testes automatizados. Sempre que novas altera\u00e7\u00f5es s\u00e3o fundidas ao projeto principal, a integra\u00e7\u00e3o cont\u00ednua entra em a\u00e7\u00e3o e gera uma nova build. Esta nova build ent\u00e3o passa por um processo de testes, que ir\u00e3o fazer a an\u00e1lise quanto a integridade da build atual. Se os testes forem bem sucedidos(ou n\u00e3o), a ferramenta de integra\u00e7\u00e3o gera as respectivas notifica\u00e7\u00f5es . A esses testes que executam dentro da servidora de integra\u00e7\u00e3o d\u00e3o-se o nome de testes automatizados.\n\n\nBuild Automatizado\n\n\nO processo de build baseia-se na ideia de compilar, preparar o execut\u00e1vel e testar uma aplica\u00e7\u00e3o sem a necessidade da interven\u00e7\u00e3o manual de um desenvolvedor. Para tal, \u00e9 necess\u00e1rio possuir uma estrutura bem organizada do projeto, c\u00f3digos-fonte independentes de qualquer vari\u00e1vel do ambiente de desenvolvimento, modelos para os arquivos de configura\u00e7\u00e3o de forma que o build possa ser executado em qualquer ambiente -  desenvolvimento, homologa\u00e7\u00e3o, teste e produ\u00e7\u00e3o. Assim, qualquer desenvolvedor poder\u00e1 executar o script de build garantindo que o processo de valida\u00e7\u00e3o da funcionalidade implementada ser\u00e1 o mesmo aplicado por toda a equipe de desenvolvimento.\n\n\nVantagens da Integra\u00e7\u00e3o Cont\u00ednua\n\n\nEm equipes que adotam metodologias \u00e1geis como eXtreme Programming, Scrum, dentre outras, a integra\u00e7\u00e3o cont\u00ednua \u00e9 um dos pilares da agilidade, pois ela garante que todo o sistema funcione a cada build, n\u00e3o importando o tamanho da equipe e mesmo diversas partes do c\u00f3digo estejam sendo alteradas ao mesmo tempo ela garante sua integridade.\nA grande vantagem da integra\u00e7\u00e3o cont\u00ednua consiste no feedback instant\u00e2neo. Que funciona da seguinte forma: a cada commit no reposit\u00f3rio, o build \u00e9 feito automaticamente, executando todos os testes de forma autom\u00e1tica, detectando falhas e avisando em tempo real os envolvidos no projeto. Dessa forma se algum commit n\u00e3o compilar ou quebrar qualquer um dos testes, a equipe toma conhecimento instantaneamente (atrav\u00e9s de e-mail, por exemplo, indicando as falhas e o commit causador das mesmas). O que possibilita uma que uma corre\u00e7\u00e3o seja efetuada o mais r\u00e1pido poss\u00edvel, fator esse que \u00e9 fundamental para n\u00e3o propagar erros ao criar novas funcionalidades e refatorar o c\u00f3digo.\nDe forma simplificada integra\u00e7\u00e3o cont\u00ednua \u00e9 uma forma de trazer seguran\u00e7a em rela\u00e7\u00e3o a mudan\u00e7as, voc\u00ea pode fazer modifica\u00e7\u00f5es sem medo, pois ser\u00e1 avisado caso algo saia do esperado.\n\n\nReferencias\n\n\n \nhttp://www.devmedia.com.br/integracao-continua-uma-introducao-ao-assunto/28002\n Acesso em  23-05-2017\n\n\n\n\nMARTIN,Fowler. Continuous Integration, 2009. Dispon\u00edvel em: \nhttps://martinfowler.com/articles/continuousIntegration.html\n. Acesso em: 23 de maio.2017.\n\n\n\n\nFL\u00c1VIO, Jos\u00e9. \nBuild autom\u00e1tico de projetos com Continuum\n. Dispon\u00edvel em: \n \nhttp://www.devmedia.com.br/build-automatico-de-projetos-com-continuum/28914\n Acesso em 23/05/2017 \u00e0s 20h.\n\n\nCAU\u00ca, Guerra. Integra\u00e7\u00e3o Cont\u00ednua e o processo Agile. Dispon\u00edvel em:\n\nhttp://blog.caelum.com.br/integracao-continua/\n\nAcesso em 23 de maio de 2017.\n\n\nIntegra\u00e7\u00e3o Cont\u00ednua com o Travis\n\n\nO seguinte tutorial objetiva exemplicar de maneira clara os passos necess\u00e1rios para implementar o Travis-CI em reposit\u00f3rio com o intuito de realizar a integra\u00e7\u00e3o cont\u00ednua no mesmo.\n\n\n\n\n\n\nAcessar travis-ci.org e fazer fazer cadastro autorizando a vincula\u00e7\u00e3o com o GitHub\n\n\n\n\n\n\nNo p\u00e1gina de perfil do Travis acesse o '+' para habilitar o travis em um novo reposit\u00f3rio\n\n\n\n\n\n\nHabilite o travis no reposit\u00f3rio desejado\n\n\n\n\n\n\nNa raiz do seu reposit\u00f3rio, crie o arquivo .travis.yml\n\n\n\n\n\n\nUm exemplo do conte\u00fado do arquivo \u00e9:\n\n\n  language: ruby\n  services:\n  - mysql\n  before_script:\n  - cp 2017.1-SIGS/SIGS/config/database.yml.travis 2017.1-SIGS/SIGS/config/database.yml\n  - mysql -e 'create database myapp_test;' -uroot\n  script:\n  - cd 2017.1-SIGS3/SIGS\n  - bundle install\n  - bundle exec rake db:load_config\n  - bundle exec rake db:create\n  - bundle exec rake db:migrate\n  - rake cucumber\n  - bundle exec rspec\n  - rubocop\n  after_sucess:\n  - coveralls push\n  rvm:\n  - 2.3.1\n  notifications:\n    email:\n      recipients:\n      - email@example.com\n  branches:\n    only:\n    - master\n    - /.*/\n\n\n\n\n\n\nlanguage:\n linguagem do projeto\nLista das lingagens aceitas pelo Travis\n\n\n\n\nservices:\n servi\u00e7os que ser\u00e3o utilizados pelo Travis\n\n\n\n\n\n\nbefore_script:\n comandos que devem ser executados antes de rodar o script\n\n\n\n\n\n\nscript:\n comandos para executar os testes\n\n\n\n\n\n\nafter_sucess:\n comando a ser executado ap\u00f3s a finaliza\u00e7\u00e3o dos testes\n\n\n\n\n\n\nnotifications:\n configura\u00e7\u00e3o de notifica\u00e7\u00f5es que podem ser associadas ao Travis.\nLista de Notifica\u00e7\u00f5es\n\n\n\n\n\n\nbranchs:\n defini\u00e7\u00e3o das branchs em que ser\u00e3o rodado os testes\n\n\n\n\n\n\n\n\nEquipe\n\n  * Bruno Matias 15/0051212\n  * Carlos Aragon 15/0121148\n  * Iasmin Mendes 14/0041940\n  * Wallacy Braz 15/0059329", 
            "title": "Integra\u00e7\u00e3o continua"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#integracao-continua", 
            "text": "", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#introducao", 
            "text": "Integra\u00e7\u00e3o Cont\u00ednua \u00e9 uma pr\u00e1tica de desenvolvimento de software onde os membros de um time integram seu trabalho frequentemente, geralmente cada pessoa integra pelo menos diariamente \u0096 podendo haver m\u00faltiplas integra\u00e7\u00f5es por dia. Cada integra\u00e7\u00e3o \u00e9 verificada por um build automatizado (incluindo testes) para detectar erros de integra\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel. Muitos times acham que essa abordagem leva a uma significante redu\u00e7\u00e3o nos problemas de integra\u00e7\u00e3o e permite que um time desenvolva software coeso mais rapidamente.  Martin Fowler  A vis\u00e3o de integra\u00e7\u00e3o cont\u00ednua do software \u00e9 uma pr\u00e1tica oriunda do metodologia \u00e1gil XP, que visa integrar o c\u00f3digo alterado na mesma frequ\u00eancia com que as funcionalidades s\u00e3o desenvolvidas. A implementa\u00e7\u00e3o desta pr\u00e1tica traz o benef\u00edcio de detectar erros no sistema o mais r\u00e1pido poss\u00edvel, garantindo maior qualidade no produto final.", 
            "title": "Introdu\u00e7\u00e3o"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#controle-de-versao", 
            "text": "O controle de vers\u00e3o \u00e9 uma ferramenta crucial para a integra\u00e7\u00e3o cont\u00ednua, pelo simples fato de ser uma ferramenta que permite o trabalho colaborativo, onde h\u00e1 compartilhamento de dados entre diversos desenvolvedores que trabalham em conjunto. Para o XP, que tem como premissa o trabalho cont\u00ednuo e constante, o controle de vers\u00e3o \u00e9 essencial.  O controle de vers\u00e3o juntamente com um reposit\u00f3rio online permitem ter-se sempre uma vers\u00e3o v\u00e1lida e funcional, e saber quem fez altera\u00e7\u00f5es no projeto, e ainda evita que desenvolvedores fa\u00e7am trabalho j\u00e1 feito. Para ferramentas de controle de vers\u00e3o que permitem o trabalho em conjunto temos CVS,  Subversion ,  Git , entre outros. Utilizando reposit\u00f3rios onlines como por exemplo github, temos juntamente com a ferramenta de versionamento o suporte online para usu\u00e1rios, podendo desde acessar e visualizar um sistema a gerenci\u00e1-lo.  Com o desenvolvedor sempre integrando c\u00f3digo, benef\u00edcios como restaura\u00e7\u00e3o de vers\u00f5es anteriores, compara\u00e7\u00e3o de c\u00f3digo e gest\u00e3o de altera\u00e7\u00f5es s\u00e3o poss\u00edveis gra\u00e7as \u00e0 ferramenta de controle de vers\u00e3o e seu reposit\u00f3rio.", 
            "title": "Controle de Vers\u00e3o"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#testes-automatizados", 
            "text": "Uma das vantagens quando se utiliza uma ferramenta de integra\u00e7\u00e3o cont\u00ednua reside nos testes automatizados. Uma vez que se conclui uma funcionalidade do sistema e deseja-se integrar estas mudan\u00e7as \u00e0 build principal, deve-se antes ter certeza de que essa build est\u00e1 devidamente testada e livre de erros. Por\u00e9m, somente  este procedimento n\u00e3o garante a integridade do sistema como um todo. Quando se implementa uma ferramenta de integra\u00e7\u00e3o cont\u00ednua dentro do seu projeto, tem-se implicitamente a necessidade de que sua build principal esteja sempre \u00edntegra. Isto \u00e9 poss\u00edvel gra\u00e7as \u00e0 integra\u00e7\u00e3o cont\u00ednua. Na m\u00e1quina servidora onde est\u00e1 hospedada o ambiente de integra\u00e7\u00e3o cont\u00ednua pode-se, e deve-se, implementar o uso de testes automatizados. Sempre que novas altera\u00e7\u00f5es s\u00e3o fundidas ao projeto principal, a integra\u00e7\u00e3o cont\u00ednua entra em a\u00e7\u00e3o e gera uma nova build. Esta nova build ent\u00e3o passa por um processo de testes, que ir\u00e3o fazer a an\u00e1lise quanto a integridade da build atual. Se os testes forem bem sucedidos(ou n\u00e3o), a ferramenta de integra\u00e7\u00e3o gera as respectivas notifica\u00e7\u00f5es . A esses testes que executam dentro da servidora de integra\u00e7\u00e3o d\u00e3o-se o nome de testes automatizados.", 
            "title": "Testes Automatizados"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#build-automatizado", 
            "text": "O processo de build baseia-se na ideia de compilar, preparar o execut\u00e1vel e testar uma aplica\u00e7\u00e3o sem a necessidade da interven\u00e7\u00e3o manual de um desenvolvedor. Para tal, \u00e9 necess\u00e1rio possuir uma estrutura bem organizada do projeto, c\u00f3digos-fonte independentes de qualquer vari\u00e1vel do ambiente de desenvolvimento, modelos para os arquivos de configura\u00e7\u00e3o de forma que o build possa ser executado em qualquer ambiente -  desenvolvimento, homologa\u00e7\u00e3o, teste e produ\u00e7\u00e3o. Assim, qualquer desenvolvedor poder\u00e1 executar o script de build garantindo que o processo de valida\u00e7\u00e3o da funcionalidade implementada ser\u00e1 o mesmo aplicado por toda a equipe de desenvolvimento.", 
            "title": "Build Automatizado"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#vantagens-da-integracao-continua", 
            "text": "Em equipes que adotam metodologias \u00e1geis como eXtreme Programming, Scrum, dentre outras, a integra\u00e7\u00e3o cont\u00ednua \u00e9 um dos pilares da agilidade, pois ela garante que todo o sistema funcione a cada build, n\u00e3o importando o tamanho da equipe e mesmo diversas partes do c\u00f3digo estejam sendo alteradas ao mesmo tempo ela garante sua integridade.\nA grande vantagem da integra\u00e7\u00e3o cont\u00ednua consiste no feedback instant\u00e2neo. Que funciona da seguinte forma: a cada commit no reposit\u00f3rio, o build \u00e9 feito automaticamente, executando todos os testes de forma autom\u00e1tica, detectando falhas e avisando em tempo real os envolvidos no projeto. Dessa forma se algum commit n\u00e3o compilar ou quebrar qualquer um dos testes, a equipe toma conhecimento instantaneamente (atrav\u00e9s de e-mail, por exemplo, indicando as falhas e o commit causador das mesmas). O que possibilita uma que uma corre\u00e7\u00e3o seja efetuada o mais r\u00e1pido poss\u00edvel, fator esse que \u00e9 fundamental para n\u00e3o propagar erros ao criar novas funcionalidades e refatorar o c\u00f3digo.\nDe forma simplificada integra\u00e7\u00e3o cont\u00ednua \u00e9 uma forma de trazer seguran\u00e7a em rela\u00e7\u00e3o a mudan\u00e7as, voc\u00ea pode fazer modifica\u00e7\u00f5es sem medo, pois ser\u00e1 avisado caso algo saia do esperado.", 
            "title": "Vantagens da Integra\u00e7\u00e3o Cont\u00ednua"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#referencias", 
            "text": "http://www.devmedia.com.br/integracao-continua-uma-introducao-ao-assunto/28002  Acesso em  23-05-2017   MARTIN,Fowler. Continuous Integration, 2009. Dispon\u00edvel em:  https://martinfowler.com/articles/continuousIntegration.html . Acesso em: 23 de maio.2017.   FL\u00c1VIO, Jos\u00e9.  Build autom\u00e1tico de projetos com Continuum . Dispon\u00edvel em:    http://www.devmedia.com.br/build-automatico-de-projetos-com-continuum/28914  Acesso em 23/05/2017 \u00e0s 20h.  CAU\u00ca, Guerra. Integra\u00e7\u00e3o Cont\u00ednua e o processo Agile. Dispon\u00edvel em: http://blog.caelum.com.br/integracao-continua/ \nAcesso em 23 de maio de 2017.", 
            "title": "Referencias"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua/#integracao-continua-com-o-travis", 
            "text": "O seguinte tutorial objetiva exemplicar de maneira clara os passos necess\u00e1rios para implementar o Travis-CI em reposit\u00f3rio com o intuito de realizar a integra\u00e7\u00e3o cont\u00ednua no mesmo.    Acessar travis-ci.org e fazer fazer cadastro autorizando a vincula\u00e7\u00e3o com o GitHub    No p\u00e1gina de perfil do Travis acesse o '+' para habilitar o travis em um novo reposit\u00f3rio    Habilite o travis no reposit\u00f3rio desejado    Na raiz do seu reposit\u00f3rio, crie o arquivo .travis.yml    Um exemplo do conte\u00fado do arquivo \u00e9:    language: ruby\n  services:\n  - mysql\n  before_script:\n  - cp 2017.1-SIGS/SIGS/config/database.yml.travis 2017.1-SIGS/SIGS/config/database.yml\n  - mysql -e 'create database myapp_test;' -uroot\n  script:\n  - cd 2017.1-SIGS3/SIGS\n  - bundle install\n  - bundle exec rake db:load_config\n  - bundle exec rake db:create\n  - bundle exec rake db:migrate\n  - rake cucumber\n  - bundle exec rspec\n  - rubocop\n  after_sucess:\n  - coveralls push\n  rvm:\n  - 2.3.1\n  notifications:\n    email:\n      recipients:\n      - email@example.com\n  branches:\n    only:\n    - master\n    - /.*/   language:  linguagem do projeto Lista das lingagens aceitas pelo Travis   services:  servi\u00e7os que ser\u00e3o utilizados pelo Travis    before_script:  comandos que devem ser executados antes de rodar o script    script:  comandos para executar os testes    after_sucess:  comando a ser executado ap\u00f3s a finaliza\u00e7\u00e3o dos testes    notifications:  configura\u00e7\u00e3o de notifica\u00e7\u00f5es que podem ser associadas ao Travis. Lista de Notifica\u00e7\u00f5es    branchs:  defini\u00e7\u00e3o das branchs em que ser\u00e3o rodado os testes     Equipe \n  * Bruno Matias 15/0051212\n  * Carlos Aragon 15/0121148\n  * Iasmin Mendes 14/0041940\n  * Wallacy Braz 15/0059329", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua com o Travis"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua---Deploy-Cont\u00ednuo/", 
            "text": "Deploying the Netflix API\n\n\nAdopting Continuous Delivery\n\n\n\n\n\n\nGitHub, de Janeiro a Setembro de 2012 foram realizados 41.679 builds e 12.602 deploys sendo somente no dia 23 de agosto de 2012 realizados 563 builds e 175 deploys.\n\n\nA Amazon uma das maiores varejistas do mundo com servi\u00e7os de cloud realiza o deploy de um novo software a cada segundo.\n\n\nO Facebook, visando o tamanho e o impacto que ele oferece atualmente, possui um departamento de release engineering desde 2008 com o objetivo de realizar uma libera\u00e7\u00e3o por dia como melhorias e novas funcionalidades. Com o novo escrit\u00f3rio de engenharia em Londres, tinha como objetivo dobrar o n\u00famero de deploys.\n\n\n# Integra\u00e7\u00e3o Cont\u00ednua\n\n\n\n\n Durante o desenvolvimento de um software, seus conjuntos de procedimentos e devido a presen\u00e7a de uma equipe que se constitui de diversos integrantes trabalhando e fazendo o controle de versionamento em um reposit\u00f3rio, surge a necessidade de tratar erros e manter cada build da aplica\u00e7\u00e3o coesa atrav\u00e9s da utiliza\u00e7\u00e3o de um dos maiores pilares do desenvolvimento \u00e1gil, a integra\u00e7\u00e3o cont\u00ednua. A integra\u00e7\u00e3o \u00e9 respons\u00e1vel por garantir o funcionamento do c\u00f3digo atrav\u00e9s de feedbacks ainda que o mesmo esteja sendo alterado simultaneamente, agilizando e facilitando a resposta da equipe com rela\u00e7\u00e3o a poss\u00edveis problemas com a cria\u00e7\u00e3o de outras funcionalidades e contribuindo para a redu\u00e7\u00e3o do tempo gasto com testes, pois ser\u00e1 necess\u00e1rio que o programador teste somente a nova funcionalidade implementada enquanto o servidor da integra\u00e7\u00e3o cont\u00ednua fica respons\u00e1vel por realizar os testes do sistema e garantir sua funcionalidade. Ela permite melhor visibilidade do projeto.\n \n\n A Integra\u00e7\u00e3o Cont\u00ednua ajuda a construir confian\u00e7a para inovar novas melhorias. Os projetos sofrem quando n\u00e3o h\u00e1 dados reais ou recentes para apoiar as decis\u00f5es. Normalmente, os membros da equipe agrupam essas informa\u00e7\u00f5es manualmente, exigindo tempo e esfor\u00e7o. O resultado \u00e9 que muitas vezes a informa\u00e7\u00e3o relevante nunca \u00e9 coletada. Desse modo a integra\u00e7\u00e3o facilita fazendo com que a equipe tome decis\u00f5es eficazes fornecendo informa\u00e7\u00f5es sobre o status de constru\u00e7\u00e3o e m\u00e9tricas de qualidade do c\u00f3digo e geralmente projetos que n\u00e3o abra\u00e7am essas abordagens s\u00e3o propensos a lan\u00e7amentos atrasados.\n\n\n\n* Vantagens da integra\u00e7\u00e3o cont\u00ednua:\n  - Feedback instant\u00e2neo\n  - Seguran\u00e7a em rela\u00e7\u00e3o a mudan\u00e7as\n  - Agilidade para corre\u00e7\u00e3o de problemas\n  - Automa\u00e7\u00e3o\n  - Sincroniza\u00e7\u00e3o\n\n![Integra\u00e7\u00e3o](http://i.imgur.com/h1x61BP.png)\n\n## Como ocorre a integra\u00e7\u00e3o cont\u00ednua\n* Envio do c\u00f3digo atualizado para o reposit\u00f3rio com o c\u00f3digo fonte.\n\n\n* Um sistema automatizado observa o sistema de controle de vers\u00e3o. \n   - O sistema automatizado compila o c\u00f3digo;\n   - O sistema automatizado executa os testes unit\u00e1rios;\n   - O sistema automatizado envia o feedback para que os membros da equipe possam conhecer o estado atual da build.\n\n![Int2](http://i.imgur.com/dlXW3av.png)\n\n# Deploy Cont\u00ednuo\n\n Um processo de Deploy Cont\u00ednuo (\u201cContinuous Deploy\u201d) \u00e9 a capacidade de automatizar a homologa\u00e7\u00e3o e testes do software de um produto desenvolvido de forma autom\u00e1tica e r\u00e1pida, onde a cada altera\u00e7\u00e3o significativa seja poss\u00edvel rodar toda a integra\u00e7\u00e3o cont\u00ednua, validar o produtos e suas credencias e deixa-lo dispon\u00edvel para produ\u00e7\u00e3o. Esse processo geralmente \u00e9 classificado dentro de duas vertentes, que variam de acordo com as capacidades de cada projeto e seus requisitos:\n\n\n\n\n\nTotalmente automatizado:\n uma mudan\u00e7a no c\u00f3digo \u00e9 automaticamente verificada e, se tudo estiver certo, a aplica\u00e7\u00e3o vai para produ\u00e7\u00e3o;\n\n\n\nSemi-automatizado:\n a ideia \u00e9 ser capaz de empurrar para produ\u00e7\u00e3o a \u00faltima vers\u00e3o est\u00e1vel do aplicativo em qualquer momento apenas apertando um bot\u00e3o. Nesse caso, chamamos de \u201cone-click-deployment\u201d.\n\n\n## Exemplo: Task gradle para subir para google play beta ou production\n\nAntes de configurar a task, voce deve adiquirir o serviceAccountEmail e o jsonFile como descrito no \n[Tutorial de Deploy Automatico na Google Play PDF](https://github.com/GPP-MDS-2016/ImagensDaWiki/raw/master/tutorial_deploy_autom\u00e1tico_google_play.pdf)\n\nO ${track} foi configurado como uma variavel de ambiente do gradle no script do circle ci, para especificar se \u00e9 uma build de produ\u00e7\u00e3o que vai para a play store ou uma build de testes que vai para emails selecionados. \n\n\n\u0002wzxhzdk:0\u0003\n\n\n\nBasicamente, sua ferramenta de integra\u00e7\u00e3o cont\u00ednua dever\u00e1 gerar a build do produto, rodando os testes unit\u00e1rios e de aceita\u00e7\u00e3o, ou quaisquer outras medidas de valida\u00e7\u00e3o do seu produto e de acordo com o configurado, podendo ser por commit ou push em uma branch espec\u00edfica ele ir\u00e1 enviar o seu aplicativo para ser publicado na loja de acordo com suas configura\u00e7\u00f5es ou para beta ou para distribui\u00e7\u00e3o de produ\u00e7\u00e3o.\n\n\n# Build Automation\n\n# Treinamento\n\n* Incluir descri\u00e7\u00e3o do treinamento/DOJO - passo a passo - etapas\n* Registrar os detalhes da din\u00e2mica\n* Infraestrutura Necess\u00e1ria para a din\u00e2mica\n* C\u00f3digo refer\u00eancia no projeto da disciplina (00-Disciplina)\n* Treinamento em, pelo menos 2 linguagens", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua Deploy Cont\u00ednuo"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/", 
            "text": "Integra\u00e7\u00e3o Cont\u00ednua (Travis - Docker - Docker-Compose)\n\n\nNo arquivo .travis.yml \u00e9 necess\u00e1rio configurar o docker e o docker-compose.\n\n\n\n\nPasso 1: Defina os servi\u00e7os utilizados, no caso o docker:\n\n\n\n\nservices:\n  - docker\n\n\n\n\n\n\nPasso 2: Defina a vers\u00e3o do docker-compose a ser instalada:\n\n\n\n\nenv:\n  - DOCKER_COMPOSE_VERSION=1.15.0\n\n\n\n\n\n\nPasso 3: Instale o docker-compose na integra\u00e7\u00e3o cont\u00ednua:\n\n\n\n\nbefore_install:\n  - sudo rm /usr/local/bin/docker-compose\n  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` \n docker-compose\n  - chmod +x docker-compose\n  - sudo mv docker-compose /usr/local/bin\n\n\n\n\n\n\nPasso 4: Crie os containers e execute os scripts necess\u00e1rios de build/testes:\n\n\n\n\nscript:\n    - docker-compose up --build -d\n        ...\n\n\n\n\nDeploy (Heroku)\n\n\nAp\u00f3s ter feito as configura\u00e7\u00f5es de integra\u00e7\u00e3o cont\u00ednua, caso deseje utilizar o heroku para deploy, \u00e9 necess\u00e1rio, primeiramente, criar uma conta no heroku. Com isso feito \u00e9 preciso criar uma aplica\u00e7\u00e3o. \n\n\n\n\nPasso 1: Na dashboard do heroku selecione a op\u00e7\u00e3o \"New\" e depois \"Create new App\":\n\n\n\n\n\n\n\n\nPasso 2: Digite o nome do seu app e selecione a regi\u00e3o, por default ser\u00e1 United States\n\n\n\n\n\n\n\n\nPasso 3: Verifique qual a api-key do usu\u00e1rio, selecione \"Account Settings\" e clique em \"Reveal\"\n\n\n\n\n\n\n\n\nPasso 4: Agora no travis.ci, entre no local onde a integra\u00e7\u00e3o cont\u00ednua est\u00e1 configurada e selecione a op\u00e7\u00e3o \"More Options\" e depois \"Settings\".\n\n\n\n\n\n\n\n\nPasso 5: Adicione a api-key do heroku como uma vari\u00e1vel de ambiente, \"Environment Variables\":\n\n\n\n\n\n\n\n\nPasso 6: Configure o arquivo .travis.yml com deploy, onde o provider \u00e9 o heroku que j\u00e1 \u00e9 integrado com o travis, a api-key \u00e9 a vari\u00e1vel de ambiente do usu\u00e1rio criador do app, o app \u00e9 aquele criado no heroku e a branch a ser executada o deploy, normalmente a master. Exemplo:\n\n\n\n\ndeploy:\n  provider: heroku\n  api_key: $SECRET_USER_KEY\n  app: exemplo-gpp-mds\n  on: master\n\n\n\n\nObserva\u00e7\u00f5es:\n\n\n\n\nExistem particularidades de linguagens espec\u00edficas, e essas nu\u00e2ncias n\u00e3o foram abordadas nesse documento.\n\n\n\n\nGulp\n\n\nO Gulp \u00e9 uma ferramenta de automa\u00e7\u00e3o de tarefas feita em JavaScript e rodando em cima do Node.js. Como o core da execu\u00e7\u00e3o \u00e9 o Node, precisamos come\u00e7ar nossos trabalhos definindo o arquivo de vai gerenciar os m\u00f3dulos gulp que voc\u00ea utilizar\u00e1 no seu projeto(Caelum).\n\n\nSincroniza\u00e7\u00e3o com o \nBrowser\n\n\nOs arquivos est\u00e1ticos mudam constantemente e existe uma dificuldade de atualiza\u00e7\u00e3o dos arquivos no \nbrowser\n, simplesmente para modifica\u00e7\u00f5es de arquivos html, js e css \u00e9 necess\u00e1rio um dar \nreload\n na p\u00e1gina utilizada. Normalmente, os arquivos se mant\u00e9m em cache e \u00e9 comum que estes continuem na vers\u00e3o anterior. O gulp juntamente com o browser-sync oferece uma solu\u00e7\u00e3o para isso. Onde arquivos ou pastas s\u00e3o observadas e quando s\u00e3o atualizadas a p\u00e1gina em quest\u00e3o \u00e9 recarregada. Portanto, \u00e9 mais simples para em ambiente de desenvolvimento, principalmente, com a utiliza\u00e7\u00e3o de frameworks web como o rails e o django. N\u00e3o se preocupando com atualiza\u00e7\u00e3o dos arquivos est\u00e1ticos no navegador. Abaixo existe um exemplo de como configurar arquivos a serem observados e auto-sincronizar com o gulp.\n\n\ngulpfile.js\n\n\n'use strict';\n\n// Indica as depend\u00eancias necess\u00e1rias \nvar gulp = require('gulp');\nvar browserSync = require('browser-sync').create();\n\n// Define o diret\u00f3rio a ser utilizado\nvar directoryjs = './*.js'\n\n// Por padr\u00e3o, o gulp executa um server utilizando a porta 3000\n// Abaixo existe a defini\u00e7\u00e3o das configura\u00e7\u00f5es do servidor, sendo que  o proxy ser\u00e1 incluido no localhost:3000\n// Onde a porta 8000 \u00e9 o padr\u00e3o do django\ngulp.task('browserSync', function() {\n  browserSync.init({\n    open: false,\n    notify: false,\n    proxy: 'localhost:8000'\n  })\n});\n\n// Define os arquivos a serem observados e caso haja modifica\u00e7\u00e3o nesses arquivos,\n// o browser ser\u00e1 recarregado\ngulp.task('watch', function() {\n  gulp.watch(directoryjs, browserSync.reload);\n});\n\n// \u00c9 a fun\u00e7\u00e3o principal, como a main em c, onde \u00e9 executado o restante das fun\u00e7\u00f5es\ngulp.task('default',['browserSync', 'watch']);\n\n\n\n\n\nDepend\u00eancias necess\u00e1rias\n\n\nAs depend\u00eancias necess\u00e1rias para o gulp \u00e9 o node.js que \u00e9 um interpretador de c\u00f3digo javascript e o npm que \u00e9 um gerenciador de pacotes do node.js.\n\n\nComo instalar o node.js:\n\n\napt-get install -y nodejs\n\n\nComo instalar o npm:\n\n\napt-get install npm -y\n\n\nPS: Algumas depend\u00eancias internas do gulp necessitam de uma vers\u00e3o do node.js espec\u00edfica. \n\n\nAp\u00f3s a instala\u00e7\u00e3o das depend\u00eancais acima \u00e9 necess\u00e1rio instalar o gulp e o browser-sync, com os seguintes comandos:\n\n\nnpm install -g gulp-cli gulp\n\n\nnpm install browser-sync\n\n\n\u00c9 mais recomendado utilizar um arquivo de depend\u00eancias node: O packge.json.  Com o arquivo configurado basta utilizar o seguinte comando comando:\n\n\nnpm install\n\n\nUtilizando Django com  o Gulp\n\n\nPara utilizar o servidor do django integrado com o gulp para sincronizar arquivos est\u00e1ticos ao \nbrowser\n \u00e9 simples basta executar os servidores juntamente, mapeando o proxy do browser-sync com o server do django(pode ser visto acima). Utilize o seguinte comando:\n\n\npython3 aplication/manage.py runserver \n .\n\nnpm run gulp\n\n\n\n\nNote que \u00e9 poss\u00edvel acessar o localhost:8000, no entanto a sincroniza\u00e7\u00e3o s\u00f3 \u00e9 feita no endere\u00e7o localhost:3000.\n\n\nUtilizando Gulp e Django no docker-compose\n\n\nPara utilizar o gulp e django no docker-compose \u00e9 necessario mapear as portas 8000:8000 e a 3000:3000. Al\u00e9m disso \u00e9 preciso adiconar os seguintes comandos no docker-compose.yml para executar os servidores: \n\n\npython3 medical_prescription/manage.py runserver 0.0.0.0:8000 \n .\n\n./node_modules/.bin/gulp default\n\n\n\n\nRefer\u00eancias\n\n\n\n\n SOUZA, Leonardo. Bye bye Grunt.js, hello Gulp.js!. Dispon\u00edvel em:\n http://blog.caelum.com.br/bye-bye-grunt-js-hello-gulp-js/ \n Acesso em: 29 de Novembro de 2017 \n\n\n TRAVIS. Heroku Deployment. Dispon\u00edvel em :\n https://docs.travis-ci.com/user/deployment/heroku/ \n. Acesso em: 29 de Novembro de 2017 \n\n\n TRAVIS. Using Docker in Builds. Dispon\u00edvel em : \n https://docs.travis-ci.com/user/docker/ \n Acesso em: 29 de Novembro de 2017", 
            "title": "Automa\u00e7\u00f5es"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#integracao-continua-travis-docker-docker-compose", 
            "text": "No arquivo .travis.yml \u00e9 necess\u00e1rio configurar o docker e o docker-compose.   Passo 1: Defina os servi\u00e7os utilizados, no caso o docker:   services:\n  - docker   Passo 2: Defina a vers\u00e3o do docker-compose a ser instalada:   env:\n  - DOCKER_COMPOSE_VERSION=1.15.0   Passo 3: Instale o docker-compose na integra\u00e7\u00e3o cont\u00ednua:   before_install:\n  - sudo rm /usr/local/bin/docker-compose\n  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`   docker-compose\n  - chmod +x docker-compose\n  - sudo mv docker-compose /usr/local/bin   Passo 4: Crie os containers e execute os scripts necess\u00e1rios de build/testes:   script:\n    - docker-compose up --build -d\n        ...", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua (Travis - Docker - Docker-Compose)"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#deploy-heroku", 
            "text": "Ap\u00f3s ter feito as configura\u00e7\u00f5es de integra\u00e7\u00e3o cont\u00ednua, caso deseje utilizar o heroku para deploy, \u00e9 necess\u00e1rio, primeiramente, criar uma conta no heroku. Com isso feito \u00e9 preciso criar uma aplica\u00e7\u00e3o.    Passo 1: Na dashboard do heroku selecione a op\u00e7\u00e3o \"New\" e depois \"Create new App\":     Passo 2: Digite o nome do seu app e selecione a regi\u00e3o, por default ser\u00e1 United States     Passo 3: Verifique qual a api-key do usu\u00e1rio, selecione \"Account Settings\" e clique em \"Reveal\"     Passo 4: Agora no travis.ci, entre no local onde a integra\u00e7\u00e3o cont\u00ednua est\u00e1 configurada e selecione a op\u00e7\u00e3o \"More Options\" e depois \"Settings\".     Passo 5: Adicione a api-key do heroku como uma vari\u00e1vel de ambiente, \"Environment Variables\":     Passo 6: Configure o arquivo .travis.yml com deploy, onde o provider \u00e9 o heroku que j\u00e1 \u00e9 integrado com o travis, a api-key \u00e9 a vari\u00e1vel de ambiente do usu\u00e1rio criador do app, o app \u00e9 aquele criado no heroku e a branch a ser executada o deploy, normalmente a master. Exemplo:   deploy:\n  provider: heroku\n  api_key: $SECRET_USER_KEY\n  app: exemplo-gpp-mds\n  on: master  Observa\u00e7\u00f5es:   Existem particularidades de linguagens espec\u00edficas, e essas nu\u00e2ncias n\u00e3o foram abordadas nesse documento.", 
            "title": "Deploy (Heroku)"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#gulp", 
            "text": "O Gulp \u00e9 uma ferramenta de automa\u00e7\u00e3o de tarefas feita em JavaScript e rodando em cima do Node.js. Como o core da execu\u00e7\u00e3o \u00e9 o Node, precisamos come\u00e7ar nossos trabalhos definindo o arquivo de vai gerenciar os m\u00f3dulos gulp que voc\u00ea utilizar\u00e1 no seu projeto(Caelum).", 
            "title": "Gulp"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#sincronizacao-com-o-browser", 
            "text": "Os arquivos est\u00e1ticos mudam constantemente e existe uma dificuldade de atualiza\u00e7\u00e3o dos arquivos no  browser , simplesmente para modifica\u00e7\u00f5es de arquivos html, js e css \u00e9 necess\u00e1rio um dar  reload  na p\u00e1gina utilizada. Normalmente, os arquivos se mant\u00e9m em cache e \u00e9 comum que estes continuem na vers\u00e3o anterior. O gulp juntamente com o browser-sync oferece uma solu\u00e7\u00e3o para isso. Onde arquivos ou pastas s\u00e3o observadas e quando s\u00e3o atualizadas a p\u00e1gina em quest\u00e3o \u00e9 recarregada. Portanto, \u00e9 mais simples para em ambiente de desenvolvimento, principalmente, com a utiliza\u00e7\u00e3o de frameworks web como o rails e o django. N\u00e3o se preocupando com atualiza\u00e7\u00e3o dos arquivos est\u00e1ticos no navegador. Abaixo existe um exemplo de como configurar arquivos a serem observados e auto-sincronizar com o gulp.  gulpfile.js  'use strict';\n\n// Indica as depend\u00eancias necess\u00e1rias \nvar gulp = require('gulp');\nvar browserSync = require('browser-sync').create();\n\n// Define o diret\u00f3rio a ser utilizado\nvar directoryjs = './*.js'\n\n// Por padr\u00e3o, o gulp executa um server utilizando a porta 3000\n// Abaixo existe a defini\u00e7\u00e3o das configura\u00e7\u00f5es do servidor, sendo que  o proxy ser\u00e1 incluido no localhost:3000\n// Onde a porta 8000 \u00e9 o padr\u00e3o do django\ngulp.task('browserSync', function() {\n  browserSync.init({\n    open: false,\n    notify: false,\n    proxy: 'localhost:8000'\n  })\n});\n\n// Define os arquivos a serem observados e caso haja modifica\u00e7\u00e3o nesses arquivos,\n// o browser ser\u00e1 recarregado\ngulp.task('watch', function() {\n  gulp.watch(directoryjs, browserSync.reload);\n});\n\n// \u00c9 a fun\u00e7\u00e3o principal, como a main em c, onde \u00e9 executado o restante das fun\u00e7\u00f5es\ngulp.task('default',['browserSync', 'watch']);", 
            "title": "Sincroniza\u00e7\u00e3o com o Browser"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#dependencias-necessarias", 
            "text": "As depend\u00eancias necess\u00e1rias para o gulp \u00e9 o node.js que \u00e9 um interpretador de c\u00f3digo javascript e o npm que \u00e9 um gerenciador de pacotes do node.js.  Como instalar o node.js:  apt-get install -y nodejs  Como instalar o npm:  apt-get install npm -y  PS: Algumas depend\u00eancias internas do gulp necessitam de uma vers\u00e3o do node.js espec\u00edfica.   Ap\u00f3s a instala\u00e7\u00e3o das depend\u00eancais acima \u00e9 necess\u00e1rio instalar o gulp e o browser-sync, com os seguintes comandos:  npm install -g gulp-cli gulp  npm install browser-sync  \u00c9 mais recomendado utilizar um arquivo de depend\u00eancias node: O packge.json.  Com o arquivo configurado basta utilizar o seguinte comando comando:  npm install", 
            "title": "Depend\u00eancias necess\u00e1rias"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#utilizando-django-com-o-gulp", 
            "text": "Para utilizar o servidor do django integrado com o gulp para sincronizar arquivos est\u00e1ticos ao  browser  \u00e9 simples basta executar os servidores juntamente, mapeando o proxy do browser-sync com o server do django(pode ser visto acima). Utilize o seguinte comando:  python3 aplication/manage.py runserver   .\n\nnpm run gulp  Note que \u00e9 poss\u00edvel acessar o localhost:8000, no entanto a sincroniza\u00e7\u00e3o s\u00f3 \u00e9 feita no endere\u00e7o localhost:3000.", 
            "title": "Utilizando Django com  o Gulp"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#utilizando-gulp-e-django-no-docker-compose", 
            "text": "Para utilizar o gulp e django no docker-compose \u00e9 necessario mapear as portas 8000:8000 e a 3000:3000. Al\u00e9m disso \u00e9 preciso adiconar os seguintes comandos no docker-compose.yml para executar os servidores:   python3 medical_prescription/manage.py runserver 0.0.0.0:8000   .\n\n./node_modules/.bin/gulp default", 
            "title": "Utilizando Gulp e Django no docker-compose"
        }, 
        {
            "location": "/Automa\u00e7\u00f5es/#referencias", 
            "text": "SOUZA, Leonardo. Bye bye Grunt.js, hello Gulp.js!. Dispon\u00edvel em:  http://blog.caelum.com.br/bye-bye-grunt-js-hello-gulp-js/   Acesso em: 29 de Novembro de 2017    TRAVIS. Heroku Deployment. Dispon\u00edvel em :  https://docs.travis-ci.com/user/deployment/heroku/  . Acesso em: 29 de Novembro de 2017    TRAVIS. Using Docker in Builds. Dispon\u00edvel em :   https://docs.travis-ci.com/user/docker/   Acesso em: 29 de Novembro de 2017", 
            "title": "Refer\u00eancias"
        }, 
        {
            "location": "/Configuracao-de-ambiente-virtual-utilizando-docker/", 
            "text": "Configura\u00e7\u00e3o de ambiente virtual utilizando Docker\n\n\nDocker\n\u00a0\u00e9 um projeto de\u00a0c\u00f3digo aberto que automatiza a implanta\u00e7\u00e3o de aplicativos dentro de recipientes de software, fornecendo uma camada adicional de abstra\u00e7\u00e3o e automa\u00e7\u00e3o de virtualiza\u00e7\u00e3o de sistemas.\n\n\n\"Docker \u00e9 uma ferramenta que permite empacotar uma aplica\u00e7\u00e3o com todas as suas depend\u00eancias em uma unidade padronizada para desenvolvimento de software.\u201d [1]\n\n### Instala\u00e7\u00e3o\n\n* [Instale o Docker](https://docs.docker.com/engine/installation)\n\n### Utiliza\u00e7\u00e3o\n\nFaz uma listagem das imagens em seu computador\n\n\u0002wzxhzdk:0\u0003\n\n\nBaixa uma imagem em sua m\u00e1quina\n\n\u0002wzxhzdk:1\u0003\n\n\nEnvia a imagem para reposit\u00f3rio remoto do Docker Hub\n\n\u0002wzxhzdk:2\u0003\n\n\nCria um container utilizando uma imagem existente ou se ela n\u00e3o estiver adicionada a sua listagem de imagens, ele procurar\u00e1 no docker hub.\n\n\u0002wzxhzdk:3\u0003\n\n\nLista os containers em execu\u00e7\u00e3o\n\n\u0002wzxhzdk:4\u0003\n\n\nLista os containers em execu\u00e7\u00e3o e os desligados\n\n\u0002wzxhzdk:5\u0003\n\n\nPara o container ou inicia o containers\n\n\u0002wzxhzdk:6\u0003\n\n\nExclui container ou imagem\n\n\u0002wzxhzdk:7\u0003\n\n\n#### Vantagens\n\n* Containers f\u00e1cilmente port\u00e1veis:\u00a0voc\u00ea pode criar uma imagem de toda a configura\u00e7\u00e3o e aplicativos instalados em seu container, transferir e instalar em outro host com Docker previamente instalado.\n* Versionamento:\u00a0Docker permite que voc\u00ea versione as altera\u00e7\u00f5es de um container de uma forma muito semelhante ao git. Permitindo portanto verificar as diferen\u00e7as entre vers\u00f5es, commitar novas vers\u00f5es e voltar (rollback) vers\u00f5es.\n* Reutiliza\u00e7\u00e3o de componentes:\u00a0como citado anteriormente as imagens criadas podem ser reutilizadas, vamos supor que diversas de suas aplica\u00e7\u00f5es utilizem um stack com Apache e MySQL, desta maneira voc\u00ea instala e configura ambos e cria uma imagem base, contendo estes itens, que representar\u00e1 a sua instala\u00e7\u00e3o e configura\u00e7\u00e3o, desta maneira esta imagem poder\u00e1 ser reutilizada em quantos forem os containers que a necessite\n* Compartilhamento:\u00a0o Docker Hub, citado no inc\u00edcio, j\u00e1 est\u00e1 povoado de milhares de containers com as mais diversas aplica\u00e7\u00f5es instaladas e configura\u00e7\u00f5es aplicadas, desta maneira voc\u00ea pode r\u00e1pidamente criar sua aplica\u00e7\u00e3o com uma base desenvolvida por outra pessoa, ou ainda criar sua base e compartilh\u00e1-la.\n\n#### Desvantagens\n* Pelo fato de compartilhar o kernel, seus containers n\u00e3o ter\u00e3o completo isolamento.\n* N\u00e3o tem garantia de recursos a n\u00edvel de hardware.\n* Enquanto a instala\u00e7\u00e3o \u00e9 f\u00e1cil no Linux, outros sistemas precisam de M\u00e1quina Virtual.\n\n\n#### Principais diferen\u00e7as de Vagrant e Docker\n| Recurso                                  | Docker     | Vagrant        |\n|------------------------------------------|------------|----------------|\n| Tipo de virtualiza\u00e7\u00e3o                    | VE         | VM             |\n| Garantia de recursos a n\u00edvel de hardware | N\u00e3o        | Sim            |\n| Tempo de inicializa\u00e7\u00e3o                   | Segundos   | Alguns minutos |\n| N\u00edvel de isolamento                      | Parcial    | Total          |\n| Tamanho dos sitemas virtuais             | Muito Leve | Pesado         |\n\n#### Refer\u00eancias\n\n[1] Aprendendo Docker. Dispon\u00edvel em https://s3.novatec.com.br/capitulos/capitulo-9788575224861.pdf\n\n[2] Docker. Dispon\u00edvel em https://www.docker.com/", 
            "title": "Automa\u00e7\u00e3o de Ambiente com Docker"
        }, 
        {
            "location": "/Configuracao-de-ambiente-virtual-utilizando-docker/#configuracao-de-ambiente-virtual-utilizando-docker", 
            "text": "Docker \u00a0\u00e9 um projeto de\u00a0c\u00f3digo aberto que automatiza a implanta\u00e7\u00e3o de aplicativos dentro de recipientes de software, fornecendo uma camada adicional de abstra\u00e7\u00e3o e automa\u00e7\u00e3o de virtualiza\u00e7\u00e3o de sistemas.  \"Docker \u00e9 uma ferramenta que permite empacotar uma aplica\u00e7\u00e3o com todas as suas depend\u00eancias em uma unidade padronizada para desenvolvimento de software.\u201d [1]\n\n### Instala\u00e7\u00e3o\n\n* [Instale o Docker](https://docs.docker.com/engine/installation)\n\n### Utiliza\u00e7\u00e3o\n\nFaz uma listagem das imagens em seu computador\n\n\u0002wzxhzdk:0\u0003\n\n\nBaixa uma imagem em sua m\u00e1quina\n\n\u0002wzxhzdk:1\u0003\n\n\nEnvia a imagem para reposit\u00f3rio remoto do Docker Hub\n\n\u0002wzxhzdk:2\u0003\n\n\nCria um container utilizando uma imagem existente ou se ela n\u00e3o estiver adicionada a sua listagem de imagens, ele procurar\u00e1 no docker hub.\n\n\u0002wzxhzdk:3\u0003\n\n\nLista os containers em execu\u00e7\u00e3o\n\n\u0002wzxhzdk:4\u0003\n\n\nLista os containers em execu\u00e7\u00e3o e os desligados\n\n\u0002wzxhzdk:5\u0003\n\n\nPara o container ou inicia o containers\n\n\u0002wzxhzdk:6\u0003\n\n\nExclui container ou imagem\n\n\u0002wzxhzdk:7\u0003\n\n\n#### Vantagens\n\n* Containers f\u00e1cilmente port\u00e1veis:\u00a0voc\u00ea pode criar uma imagem de toda a configura\u00e7\u00e3o e aplicativos instalados em seu container, transferir e instalar em outro host com Docker previamente instalado.\n* Versionamento:\u00a0Docker permite que voc\u00ea versione as altera\u00e7\u00f5es de um container de uma forma muito semelhante ao git. Permitindo portanto verificar as diferen\u00e7as entre vers\u00f5es, commitar novas vers\u00f5es e voltar (rollback) vers\u00f5es.\n* Reutiliza\u00e7\u00e3o de componentes:\u00a0como citado anteriormente as imagens criadas podem ser reutilizadas, vamos supor que diversas de suas aplica\u00e7\u00f5es utilizem um stack com Apache e MySQL, desta maneira voc\u00ea instala e configura ambos e cria uma imagem base, contendo estes itens, que representar\u00e1 a sua instala\u00e7\u00e3o e configura\u00e7\u00e3o, desta maneira esta imagem poder\u00e1 ser reutilizada em quantos forem os containers que a necessite\n* Compartilhamento:\u00a0o Docker Hub, citado no inc\u00edcio, j\u00e1 est\u00e1 povoado de milhares de containers com as mais diversas aplica\u00e7\u00f5es instaladas e configura\u00e7\u00f5es aplicadas, desta maneira voc\u00ea pode r\u00e1pidamente criar sua aplica\u00e7\u00e3o com uma base desenvolvida por outra pessoa, ou ainda criar sua base e compartilh\u00e1-la.\n\n#### Desvantagens\n* Pelo fato de compartilhar o kernel, seus containers n\u00e3o ter\u00e3o completo isolamento.\n* N\u00e3o tem garantia de recursos a n\u00edvel de hardware.\n* Enquanto a instala\u00e7\u00e3o \u00e9 f\u00e1cil no Linux, outros sistemas precisam de M\u00e1quina Virtual.\n\n\n#### Principais diferen\u00e7as de Vagrant e Docker\n| Recurso                                  | Docker     | Vagrant        |\n|------------------------------------------|------------|----------------|\n| Tipo de virtualiza\u00e7\u00e3o                    | VE         | VM             |\n| Garantia de recursos a n\u00edvel de hardware | N\u00e3o        | Sim            |\n| Tempo de inicializa\u00e7\u00e3o                   | Segundos   | Alguns minutos |\n| N\u00edvel de isolamento                      | Parcial    | Total          |\n| Tamanho dos sitemas virtuais             | Muito Leve | Pesado         |\n\n#### Refer\u00eancias\n\n[1] Aprendendo Docker. Dispon\u00edvel em https://s3.novatec.com.br/capitulos/capitulo-9788575224861.pdf\n\n[2] Docker. Dispon\u00edvel em https://www.docker.com/", 
            "title": "Configura\u00e7\u00e3o de ambiente virtual utilizando Docker"
        }, 
        {
            "location": "/Docker-Compose/", 
            "text": "Orquestra\u00e7\u00e3o de Containers com Docker Compose\n\n\n1. Sobre o Docker Compose\n\n\nO docker compose \u00e9 uma ferramenta para orquestrar e executar diversos container \ndocker\n. Auxilia na organiza\u00e7\u00e3o evitando imensas linhas de comando docker com muitas passagens de par\u00e2metros. \n\n\n[[img/logos/docker-compose-logo.png |height = 250px]]\n\n\n\n2. Configura\u00e7\u00e3o\n\n\n2.1. O arquivo yml\n\n\nO compose usa um arquivo de configura\u00e7\u00e3o chamado \ndocker-compose.yml\n, nesse arquivo define-se os servi\u00e7os que ser\u00e3o levantados pelo compose. Os servi\u00e7os usam uma imagem base, podendo ser criada a partir de um \nDockerfile\n ou baixada do \ndocker hub\n. Veja o exemplo abaixo:\n\n\nversion: '3'\n\nservices:\n  redis:\n    build: .\n    ports:\n      - \n6379:6379\n\n\n\n\n\nNo exemplo, cria-se um servi\u00e7o \nredis\n utilizando o \nDockerfile\n que se encontra na mesma pasta que o docker-compose.yml indicado pelo caractere \n.\n. Poderia-se tamb\u00e9m utilizar a imagem oficial do redis disponivel no docker hub, basta substituir o \nbuild: .\n por \nimage: redis\n, onde o valor \nredis\n na chave refere-se ao nome da imagem.\n\n\n2.2. Chaves b\u00e1sicas\n\n\n2.2.1. ports\n\n\nA comunica\u00e7\u00e3o com um container \u00e9 normalmente feita via porta exposta. No exemplo acima, a porta \n6379\n do container \u00e9 mapeada para a porta de mesmo n\u00famero do \nhost\n. Isto significa que ao acessar a porta 6379 no localhost o conte\u00fado apresentado refere-se \u00e0 aplica\u00e7\u00e3o em execu\u00e7\u00e3o no container. \n\n\nO mapeamento \u00e9 iniciado pela porta do host seguida pela porta do container: \n\"host:conatainer\"\n.\n\n\n2.2.2. volumes\n\n\nArquivos e pastas podem ser compartilhados entre o host e um container, ou entre containers, usando volumes. No \ndocker-compose.yml\n o mapeamento de volume \u00e9 feita com o uso da chave \nvolumes\n. No exemplo, o arquivo \nnginx.conf\n \u00e9 compartilhado com o container \nnginx\n. Dessa forma ser\u00e1 poss\u00edvel executar altera\u00e7\u00f5es nas configura\u00e7\u00f5es do \nnginx\n diretamente do host, de forma que essas mudan\u00e7as s\u00e3o refletidas no arquivo \nnginx.conf\n do container.\n\n\nservices:\n  nginx:\n    image: nginx\n    ports:\n      - \n80:80\n\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n\n\n\n\n2.2.3. depends_on\n\n\nMuitas vezes \u00e9 preciso subir containers em uma ordem espec\u00edfica por quest\u00f5es de depend\u00eancia. A chave \ndepends_on\n evita que um container suba antes de suas dependencias estarem em execu\u00e7\u00e3o. No exemplo, o servi\u00e7o \nweb\n ir\u00e1 esperar o servi\u00e7o \nredis\n para iniciar.\n\n\n  web:\n    build: .\n    ports:\n      - \n8000:8000\n\n    depends_on:\n      - redis\n\n\n\n\n2.2.4. command\n\n\nEsta chave executa o comando passado como seu valor assim que o container est\u00e1 em execu\u00e7\u00e3o. No exemplo, ao terminar a build da imagem, ser\u00e1 levantado o servidor do django.\n\n\n  web:\n    build: .\n    command: python3 manage.py runserver 0.0.0.0:8000\n\n\n\n\n2.2.5. environment\n\n\nVari\u00e1veis de ambiente podem ser passadas aos containers usando a chave \nenviroment\n, como no exemplo abaixo:\n\n\npostgres:\n    image: postgres\n    environment:\n        POSTGRES_PASSWORD: 1234\n        POSTGRES_DB: postgres\n        POSTGRES_USER: eu\n\n\n\n\nPor\u00e9m, por quest\u00f5es de segura\u00e7a n\u00e3o \u00e9 legal expor senhas desta maneira. Mas, ao usar outra chave chamada \nenv_file\n, \u00e9 poss\u00edvel externalizar as vari\u00e1veis para um arquivo \n.env\n e utiliz\u00e1-lo como a seguir:\n\n\nweb:\n  env_file:\n    - web-variables.env\n\n\n\n\n3. Executando o Docker Compose\n\n\nAp\u00f3s configurado o docker-compose.yml, pode-se executar e subir todos os servi\u00e7os com o comando:\n\n\ndocker-compose up\n\n\n\n\n3.1. Comandos \u00fateis:\n\n\n\n\ndocker-compose up\n : Constr\u00f3i as imagens, (re)cria, inicia e anexa containers a um servi\u00e7o. A flag \n-d\n executa os cantainers em segundo plano. \n\n\ndocker-compose down\n : Termina a execu\u00e7\u00e3o dos containers, os remove e remove networks e volumes criados por \nup\n. \n\n\ndocker-compose stop\n : Termina a execu\u00e7\u00e3o dos containers sem remov\u00ea-los. \n\n\ndocker-compose start\n : Inicia containers existentes para um servi\u00e7o. \n\n\ndocker-compose logs\n : Exibe sa\u00edda de log dos servi\u00e7os, a flag \n-f\n segue a sa\u00edda de log. \n\n\ndocker-compose exec web bash\n : Executa o comado \nbash\n no servi\u00e7o \nweb\n. \n\n\n\n\nObs: Estes comandos exigem sudo, a menos, que tenha configurado para que n\u00e3o.", 
            "title": "Orquestra\u00e7\u00e3o de Containers com Docker Compose"
        }, 
        {
            "location": "/Docker-Compose/#orquestracao-de-containers-com-docker-compose", 
            "text": "", 
            "title": "Orquestra\u00e7\u00e3o de Containers com Docker Compose"
        }, 
        {
            "location": "/Docker-Compose/#1-sobre-o-docker-compose", 
            "text": "O docker compose \u00e9 uma ferramenta para orquestrar e executar diversos container  docker . Auxilia na organiza\u00e7\u00e3o evitando imensas linhas de comando docker com muitas passagens de par\u00e2metros.  \n[[img/logos/docker-compose-logo.png |height = 250px]]", 
            "title": "1. Sobre o Docker Compose"
        }, 
        {
            "location": "/Docker-Compose/#2-configuracao", 
            "text": "", 
            "title": "2. Configura\u00e7\u00e3o"
        }, 
        {
            "location": "/Docker-Compose/#21-o-arquivo-yml", 
            "text": "O compose usa um arquivo de configura\u00e7\u00e3o chamado  docker-compose.yml , nesse arquivo define-se os servi\u00e7os que ser\u00e3o levantados pelo compose. Os servi\u00e7os usam uma imagem base, podendo ser criada a partir de um  Dockerfile  ou baixada do  docker hub . Veja o exemplo abaixo:  version: '3'\n\nservices:\n  redis:\n    build: .\n    ports:\n      -  6379:6379   No exemplo, cria-se um servi\u00e7o  redis  utilizando o  Dockerfile  que se encontra na mesma pasta que o docker-compose.yml indicado pelo caractere  . . Poderia-se tamb\u00e9m utilizar a imagem oficial do redis disponivel no docker hub, basta substituir o  build: .  por  image: redis , onde o valor  redis  na chave refere-se ao nome da imagem.", 
            "title": "2.1. O arquivo yml"
        }, 
        {
            "location": "/Docker-Compose/#22-chaves-basicas", 
            "text": "", 
            "title": "2.2. Chaves b\u00e1sicas"
        }, 
        {
            "location": "/Docker-Compose/#221-ports", 
            "text": "A comunica\u00e7\u00e3o com um container \u00e9 normalmente feita via porta exposta. No exemplo acima, a porta  6379  do container \u00e9 mapeada para a porta de mesmo n\u00famero do  host . Isto significa que ao acessar a porta 6379 no localhost o conte\u00fado apresentado refere-se \u00e0 aplica\u00e7\u00e3o em execu\u00e7\u00e3o no container.   O mapeamento \u00e9 iniciado pela porta do host seguida pela porta do container:  \"host:conatainer\" .", 
            "title": "2.2.1. ports"
        }, 
        {
            "location": "/Docker-Compose/#222-volumes", 
            "text": "Arquivos e pastas podem ser compartilhados entre o host e um container, ou entre containers, usando volumes. No  docker-compose.yml  o mapeamento de volume \u00e9 feita com o uso da chave  volumes . No exemplo, o arquivo  nginx.conf  \u00e9 compartilhado com o container  nginx . Dessa forma ser\u00e1 poss\u00edvel executar altera\u00e7\u00f5es nas configura\u00e7\u00f5es do  nginx  diretamente do host, de forma que essas mudan\u00e7as s\u00e3o refletidas no arquivo  nginx.conf  do container.  services:\n  nginx:\n    image: nginx\n    ports:\n      -  80:80 \n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf", 
            "title": "2.2.2. volumes"
        }, 
        {
            "location": "/Docker-Compose/#223-depends_on", 
            "text": "Muitas vezes \u00e9 preciso subir containers em uma ordem espec\u00edfica por quest\u00f5es de depend\u00eancia. A chave  depends_on  evita que um container suba antes de suas dependencias estarem em execu\u00e7\u00e3o. No exemplo, o servi\u00e7o  web  ir\u00e1 esperar o servi\u00e7o  redis  para iniciar.    web:\n    build: .\n    ports:\n      -  8000:8000 \n    depends_on:\n      - redis", 
            "title": "2.2.3. depends_on"
        }, 
        {
            "location": "/Docker-Compose/#224-command", 
            "text": "Esta chave executa o comando passado como seu valor assim que o container est\u00e1 em execu\u00e7\u00e3o. No exemplo, ao terminar a build da imagem, ser\u00e1 levantado o servidor do django.    web:\n    build: .\n    command: python3 manage.py runserver 0.0.0.0:8000", 
            "title": "2.2.4. command"
        }, 
        {
            "location": "/Docker-Compose/#225-environment", 
            "text": "Vari\u00e1veis de ambiente podem ser passadas aos containers usando a chave  enviroment , como no exemplo abaixo:  postgres:\n    image: postgres\n    environment:\n        POSTGRES_PASSWORD: 1234\n        POSTGRES_DB: postgres\n        POSTGRES_USER: eu  Por\u00e9m, por quest\u00f5es de segura\u00e7a n\u00e3o \u00e9 legal expor senhas desta maneira. Mas, ao usar outra chave chamada  env_file , \u00e9 poss\u00edvel externalizar as vari\u00e1veis para um arquivo  .env  e utiliz\u00e1-lo como a seguir:  web:\n  env_file:\n    - web-variables.env", 
            "title": "2.2.5. environment"
        }, 
        {
            "location": "/Docker-Compose/#3-executando-o-docker-compose", 
            "text": "Ap\u00f3s configurado o docker-compose.yml, pode-se executar e subir todos os servi\u00e7os com o comando:  docker-compose up", 
            "title": "3. Executando o Docker Compose"
        }, 
        {
            "location": "/Docker-Compose/#31-comandos-uteis", 
            "text": "docker-compose up  : Constr\u00f3i as imagens, (re)cria, inicia e anexa containers a um servi\u00e7o. A flag  -d  executa os cantainers em segundo plano.   docker-compose down  : Termina a execu\u00e7\u00e3o dos containers, os remove e remove networks e volumes criados por  up .   docker-compose stop  : Termina a execu\u00e7\u00e3o dos containers sem remov\u00ea-los.   docker-compose start  : Inicia containers existentes para um servi\u00e7o.   docker-compose logs  : Exibe sa\u00edda de log dos servi\u00e7os, a flag  -f  segue a sa\u00edda de log.   docker-compose exec web bash  : Executa o comado  bash  no servi\u00e7o  web .    Obs: Estes comandos exigem sudo, a menos, que tenha configurado para que n\u00e3o.", 
            "title": "3.1. Comandos \u00fateis:"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-um-ambiente-virtual-utilizando-o-Vagrant/", 
            "text": "Automatizando o ambiente com Vagrant\n\n\no \nVagrant\n \u00e9 uma ferramenta para automatizar a cria\u00e7\u00e3o, configura\u00e7\u00e3o e principalmente gerenciamento de ambientes de desenvolvimento atrav\u00e9s de m\u00e1quinas virtuais (VM) via softwares de virtualiza\u00e7\u00e3o como VirtualBox, VMWare, Parallels, entre outros. A ideia principal \u00e9 voc\u00ea poder montar e configurar uma m\u00e1quina virtual de maneira totalmente automatizada atrav\u00e9s de um conjunto de instru\u00e7\u00f5es escritas usando a \nDSL\n (\nDomain-Specific Language\n) da pr\u00f3pria ferramenta. Sempre que voc\u00ea rodar essas instru\u00e7\u00f5es o resultado dever\u00e1 ser o mesmo.\n\n\nO \nVagrant\n ir\u00e1 isolar depend\u00eancias e configura\u00e7\u00f5es em um \u00fanico ambiente virtual, consistente e descart\u00e1vel, sem precisar sacrificar nenhuma das ferramentas que estamos acostumados a trabalhar. Para isso, s\u00f3 precisamos criar um \u00fanico arquivo dentro do projeto, o \nVagrantfile\n, e logo em seguida dar um simples comando para que todo o ambiente seja montado, instalado e configurado.\n\n\nOutra grande vantagem \u00e9 a possibilidade de replicar o mesmo ambiente de maneira f\u00e1cil e r\u00e1pida em diferentes m\u00e1quinas. Por as configura\u00e7\u00f5es do \nVagrant\n serem apenas arquivos texto, elas podem estar embutidas dentro do seu projeto e controle de vers\u00e3o, como no caso o \ngit\n, onde qualquer membro da equipe poder\u00e1 baixar e criar o pr\u00f3prio ambiente de desenvolvimento a partir do \nVagrantfile\n criado dentro do seu reposit\u00f3rio.\n\n\nCria\u00e7\u00e3o do ambiente\n\n\nConsiderando que o seu sistema operacional \u00e9 um Linux Ubuntu, o primeiro passo, \u00e9 instalar o programa \nVirtualBox\n, que \u00e9 um software de virtualiza\u00e7\u00e3o, utilizando-o para criar dinamicamente m\u00e1quinas virtuais configur\u00e1veis, leves e port\u00e1teis. Para isso, execute o seguinte comando no terminal:\n\n\nsudo apt-get install virtualbox\n\n\nAp\u00f3s o VirtualBox ter sido instalado corretamente, falta instalar o \nVagrant\n. No terminal, execute:\n\n\nsudo apt-get install vagrant\n\n\nE pronto, agora temos a vagrant instalada com sucesso, pr\u00f3ximo passo \u00e9 a configura\u00e7\u00e3o do ambiente.\n\n\nConfigura\u00e7\u00e3o da Vagrant\n\n\nPrimeiramente escolha e acesse, via terminal, um diret\u00f3rio ou projeto qualquer existente da sua m\u00e1quina.\n\n\nAgora, iremos criar o arquivo que conter\u00e1 toda a configura\u00e7\u00e3o inicial do nosso ambiente virtual. Esse arquivo \u00e9 o \nVagrantfile\n, mencionado anteriormente. Ele ser\u00e1 criado automaticamente quando executarmos o seguinte comando:\n\n\nvagrant init ubuntu/trusty64\n\n\nNote que este comando cria uma m\u00e1quina virtual com um sistema operacional Ubuntu server 14.04 LTS, no qual \u00e9 considerado o suficiente para este tutorial. \n\n\nPara rodar esta \nVM\n basta executar o comando abaixo:\n\n\nvagrant up\n\n\n\u00c9 importante ter paci\u00eancia ao rodar este comando pela primeira vez, pois o \nVagrant\n ter\u00e1 que baixar a \nVM\n da internet de um reposit\u00f3rio global com \nVMs\n pr\u00e9-configuradas.\n\n\nSe o comando foi executado com sucesso, j\u00e1 podemos utilizar nossa m\u00e1quina virtual. Para isso, podemos conectar na VM via SSH atrav\u00e9s do comando a seguir:\n\n\nvagrant ssh\n\n\nProvisionamento\n\n\nEst\u00e1 \u00e9 uma etapa importante para inicializar o \nVagrant\n com todas as depend\u00eancias necess\u00e1rias para trabalhar no projeto, sendo que a \nVagrant\n rec\u00e9m criada \u00e9 um vem enxuta e normalmente n\u00e3o satisfaz os requisitos do nosso ambiente de desenvolvimento.\n\n\nO ideal \u00e9 que o \nVagrant\n fizesse isso automaticamente sempre cri\u00e1ssemos a VM no primeiro comando \nvagrant up\n. Para isso, eu teria que de alguma forma indicar ao \nVagrant\n para executar alguns comandos dentro da VM assim que ela fosse inicializada. Esses comandos poderiam estar em um \nscript shell\n.\n\n\nPara isso \u00e9 necess\u00e1rio criar um arquivo, como por exemplo \ninit.sh\n, contendo as instru\u00e7\u00f5es de instala\u00e7\u00e3o das depend\u00eancias para o ambiente de desenvolvimento.\n\n\nNeste arquivo devem conter instru\u00e7\u00f5es do tipo:\n\n\nsudo apt-get -y update\nsudo apt-get -y install openjdk-7-jdk\nsudo apt-get -y install tomcat7\nsudo service tomcat7 start\n\n\n\n\nPronto! Agora s\u00f3 resta indicar ao \nVagrant\n para rodar o script \ninit.sh\n acima que fica localizado na raiz do nosso projeto. Para isso, precisamos configurar o arquivo \nVagrantfile\n como a seguir:\n\n\nVagrant.configure(\n2\n) do |config|\n    config.vm.box = \nubuntu/trusty64\n\n    config.vm.provision :shell, path: \ninit.sh\n\nend\n\n\n\n\nBasicamente adicionamos a linha \nconfig.vm.provision\n informando o tipo do arquivo a ser provisionado :\nshell\n e sua localiza\u00e7\u00e3o relativa dentro do projeto. Para finalizar, s\u00f3 precisamos executar o comando \nvagrant up\n e nossa VM ser\u00e1 criada e configurada a partir do nosso \nscript shell\n.\n\n\nA principal vantagem de usar o provisionamento do \nVagrant\n \u00e9 que podemos automatizar todo o processo de configura\u00e7\u00e3o da \nVM\n o que nos permite ter ambientes replic\u00e1veis. \n\n\nAgora est\u00e1 finalizada a instala\u00e7\u00e3o e configura\u00e7\u00e3o do ambiente virtual utilizando a \nVagrant\n.", 
            "title": "Automa\u00e7\u00e3o de Ambiente com Vagrant"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-um-ambiente-virtual-utilizando-o-Vagrant/#automatizando-o-ambiente-com-vagrant", 
            "text": "o  Vagrant  \u00e9 uma ferramenta para automatizar a cria\u00e7\u00e3o, configura\u00e7\u00e3o e principalmente gerenciamento de ambientes de desenvolvimento atrav\u00e9s de m\u00e1quinas virtuais (VM) via softwares de virtualiza\u00e7\u00e3o como VirtualBox, VMWare, Parallels, entre outros. A ideia principal \u00e9 voc\u00ea poder montar e configurar uma m\u00e1quina virtual de maneira totalmente automatizada atrav\u00e9s de um conjunto de instru\u00e7\u00f5es escritas usando a  DSL  ( Domain-Specific Language ) da pr\u00f3pria ferramenta. Sempre que voc\u00ea rodar essas instru\u00e7\u00f5es o resultado dever\u00e1 ser o mesmo.  O  Vagrant  ir\u00e1 isolar depend\u00eancias e configura\u00e7\u00f5es em um \u00fanico ambiente virtual, consistente e descart\u00e1vel, sem precisar sacrificar nenhuma das ferramentas que estamos acostumados a trabalhar. Para isso, s\u00f3 precisamos criar um \u00fanico arquivo dentro do projeto, o  Vagrantfile , e logo em seguida dar um simples comando para que todo o ambiente seja montado, instalado e configurado.  Outra grande vantagem \u00e9 a possibilidade de replicar o mesmo ambiente de maneira f\u00e1cil e r\u00e1pida em diferentes m\u00e1quinas. Por as configura\u00e7\u00f5es do  Vagrant  serem apenas arquivos texto, elas podem estar embutidas dentro do seu projeto e controle de vers\u00e3o, como no caso o  git , onde qualquer membro da equipe poder\u00e1 baixar e criar o pr\u00f3prio ambiente de desenvolvimento a partir do  Vagrantfile  criado dentro do seu reposit\u00f3rio.", 
            "title": "Automatizando o ambiente com Vagrant"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-um-ambiente-virtual-utilizando-o-Vagrant/#criacao-do-ambiente", 
            "text": "Considerando que o seu sistema operacional \u00e9 um Linux Ubuntu, o primeiro passo, \u00e9 instalar o programa  VirtualBox , que \u00e9 um software de virtualiza\u00e7\u00e3o, utilizando-o para criar dinamicamente m\u00e1quinas virtuais configur\u00e1veis, leves e port\u00e1teis. Para isso, execute o seguinte comando no terminal:  sudo apt-get install virtualbox  Ap\u00f3s o VirtualBox ter sido instalado corretamente, falta instalar o  Vagrant . No terminal, execute:  sudo apt-get install vagrant  E pronto, agora temos a vagrant instalada com sucesso, pr\u00f3ximo passo \u00e9 a configura\u00e7\u00e3o do ambiente.", 
            "title": "Cria\u00e7\u00e3o do ambiente"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-um-ambiente-virtual-utilizando-o-Vagrant/#configuracao-da-vagrant", 
            "text": "Primeiramente escolha e acesse, via terminal, um diret\u00f3rio ou projeto qualquer existente da sua m\u00e1quina.  Agora, iremos criar o arquivo que conter\u00e1 toda a configura\u00e7\u00e3o inicial do nosso ambiente virtual. Esse arquivo \u00e9 o  Vagrantfile , mencionado anteriormente. Ele ser\u00e1 criado automaticamente quando executarmos o seguinte comando:  vagrant init ubuntu/trusty64  Note que este comando cria uma m\u00e1quina virtual com um sistema operacional Ubuntu server 14.04 LTS, no qual \u00e9 considerado o suficiente para este tutorial.   Para rodar esta  VM  basta executar o comando abaixo:  vagrant up  \u00c9 importante ter paci\u00eancia ao rodar este comando pela primeira vez, pois o  Vagrant  ter\u00e1 que baixar a  VM  da internet de um reposit\u00f3rio global com  VMs  pr\u00e9-configuradas.  Se o comando foi executado com sucesso, j\u00e1 podemos utilizar nossa m\u00e1quina virtual. Para isso, podemos conectar na VM via SSH atrav\u00e9s do comando a seguir:  vagrant ssh", 
            "title": "Configura\u00e7\u00e3o da Vagrant"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-um-ambiente-virtual-utilizando-o-Vagrant/#provisionamento", 
            "text": "Est\u00e1 \u00e9 uma etapa importante para inicializar o  Vagrant  com todas as depend\u00eancias necess\u00e1rias para trabalhar no projeto, sendo que a  Vagrant  rec\u00e9m criada \u00e9 um vem enxuta e normalmente n\u00e3o satisfaz os requisitos do nosso ambiente de desenvolvimento.  O ideal \u00e9 que o  Vagrant  fizesse isso automaticamente sempre cri\u00e1ssemos a VM no primeiro comando  vagrant up . Para isso, eu teria que de alguma forma indicar ao  Vagrant  para executar alguns comandos dentro da VM assim que ela fosse inicializada. Esses comandos poderiam estar em um  script shell .  Para isso \u00e9 necess\u00e1rio criar um arquivo, como por exemplo  init.sh , contendo as instru\u00e7\u00f5es de instala\u00e7\u00e3o das depend\u00eancias para o ambiente de desenvolvimento.  Neste arquivo devem conter instru\u00e7\u00f5es do tipo:  sudo apt-get -y update\nsudo apt-get -y install openjdk-7-jdk\nsudo apt-get -y install tomcat7\nsudo service tomcat7 start  Pronto! Agora s\u00f3 resta indicar ao  Vagrant  para rodar o script  init.sh  acima que fica localizado na raiz do nosso projeto. Para isso, precisamos configurar o arquivo  Vagrantfile  como a seguir:  Vagrant.configure( 2 ) do |config|\n    config.vm.box =  ubuntu/trusty64 \n    config.vm.provision :shell, path:  init.sh \nend  Basicamente adicionamos a linha  config.vm.provision  informando o tipo do arquivo a ser provisionado : shell  e sua localiza\u00e7\u00e3o relativa dentro do projeto. Para finalizar, s\u00f3 precisamos executar o comando  vagrant up  e nossa VM ser\u00e1 criada e configurada a partir do nosso  script shell .  A principal vantagem de usar o provisionamento do  Vagrant  \u00e9 que podemos automatizar todo o processo de configura\u00e7\u00e3o da  VM  o que nos permite ter ambientes replic\u00e1veis.   Agora est\u00e1 finalizada a instala\u00e7\u00e3o e configura\u00e7\u00e3o do ambiente virtual utilizando a  Vagrant .", 
            "title": "Provisionamento"
        }, 
        {
            "location": "/Deploy-Cont\u00ednuo/", 
            "text": "Tutorial\n\n\n\n\n\n\nSe cadastre (ou fa\u00e7a login se j\u00e1 tiver uma conta) no site da ferramenta de deploy Heroku https://www.heroku.com/home.\n\n\n\n\n\n\nNas configura\u00e7\u00f5es da sua conta no Heroku (https://dashboard.heroku.com/account), v\u00e1 at\u00e9 o topico \u201cAPI Key\u201d, clique no bot\u00e3o \u201cReveal\u201d e copiei o campo de chave ao lado do bot\u00e3o.\n\n\n\n\n\n\n\nSe cadastre (ou fa\u00e7a login se j\u00e1 tiver uma conta) no site da ferramenta de integra\u00e7\u00e3o cont\u00ednua CircleCI https://circleci.com/.\n\n\n\n\n\n\nNas configura\u00e7\u00f5es da sua conta (\u201cAccounts Settings\u201d) no CircleCI em Heroku API Key (https://circleci.com/account/heroku), cole a sua chave do Heroku e clique em \u201cSave Heroku Key\u201d.\n\n\n\n\n\n\n\nInstale o aplicativo Heroku em seu Linux. Para Ubuntu e derivados basta adicionar o repo e instalar:\n\n\n$ sudo apt-get install software-properties-common # debian only\n\n$ sudo add-apt-repository \"deb https://cli-assets.heroku.com/branches/stable/apt ./\"\n\n$ curl -L https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -\n\n$ sudo apt-get update\n\n$ sudo apt-get install heroku\n\n\n\n\n\n\n\nFa\u00e7a login no heroku do seu pc com o comando:\n\n\n$ heroku login\n\n\n\n\n\n\n\nCriei um app no heroku:\n\n\n$ heroku apps:create \nnome_do_app_no_heroku_aqui\n\n\n\n\n\n\n\n\nNo site heroku v\u00e1 at\u00e9 a dashboard de apps (https://dashboard.heroku.com/apps/), clique no app que foi criado no terminal.\n\n\n\n\n\n\n\nClique na aba \u201cDeploy\u201d, selecione a ferramenta de versionamento como GitHub em \u201cDeployment method\u201d, selecione o reposit\u00f3rio desejado em \u201cApp connected to GitHub\u201d.\n\n\n\n\n\n\n\nAtive o deploy cont\u00ednuo de uma determinada branch do seu repositorio em \u201cAutomatic deploys\u201d, ative a checkbox \u201cWait for CI to pass before deploy\u201d e clique no bot\u00e3o \u201cEnable Automatic Deploys\u201d.\n\n\n\n\n\n\n\nCrie um arquivo na pasta do seu projeto chamado \u201ccircle.yml\u201d com algum editor de texto, em seguida coloque dentro desse arquivo as configura\u00e7\u00f5es:\n\n\ndeployment:\n\nstaging:\n\nbranch: master\n\nheroku:\n\n  appname: \nnome_do_seu_app_no_heroku_aqui\n\n\n\n\n\n\n\n\nConfigure o arquivo \u201ccircle.yml\u201d com os dados do seu projeto, adicione outras configura\u00e7\u00f5es e scripts se quiser.\n\n\n\n\n\n\nNo CircleCI na op\u00e7\u00e3o lateral \u201cProjects\u201d clique no bot\u00e3o \u201cAdd Project\u201d (https://circleci.com/add-projects/gh/:org) e selecione seu reposit\u00f3rio do GitHub que ser\u00e1 feito a integra\u00e7\u00e3o cont\u00ednua e clique no bot\u00e3o ao lado \u201cBuild Project\u201d.\n\n\n\n\n\n\n\nCaso seu projeto use SSH, nas configura\u00e7\u00f5es do projeto v\u00e1 no t\u00f3pico \u201cPermissions\u201d e clique em \u201cCheckout SSH Keys\u201d e adicione a deploy key e a user key. Ainda no mesmo t\u00f3pico clique em \u201cSSH Permissions\u201d e adicione a SSH key do seu reposit\u00f3rio.\n\n\n\n\n\n\nPronto ! Ao commitar na branch escolhida para deploy haver\u00e1 as mudan\u00e7as automaticamente inseridas no Heroku.", 
            "title": "Deploy Cont\u00ednuo na Plataforma Heroku"
        }, 
        {
            "location": "/Deploy-Cont\u00ednuo/#tutorial", 
            "text": "Se cadastre (ou fa\u00e7a login se j\u00e1 tiver uma conta) no site da ferramenta de deploy Heroku https://www.heroku.com/home.    Nas configura\u00e7\u00f5es da sua conta no Heroku (https://dashboard.heroku.com/account), v\u00e1 at\u00e9 o topico \u201cAPI Key\u201d, clique no bot\u00e3o \u201cReveal\u201d e copiei o campo de chave ao lado do bot\u00e3o.    Se cadastre (ou fa\u00e7a login se j\u00e1 tiver uma conta) no site da ferramenta de integra\u00e7\u00e3o cont\u00ednua CircleCI https://circleci.com/.    Nas configura\u00e7\u00f5es da sua conta (\u201cAccounts Settings\u201d) no CircleCI em Heroku API Key (https://circleci.com/account/heroku), cole a sua chave do Heroku e clique em \u201cSave Heroku Key\u201d.    Instale o aplicativo Heroku em seu Linux. Para Ubuntu e derivados basta adicionar o repo e instalar:  $ sudo apt-get install software-properties-common # debian only\n\n$ sudo add-apt-repository \"deb https://cli-assets.heroku.com/branches/stable/apt ./\"\n\n$ curl -L https://cli-assets.heroku.com/apt/release.key | sudo apt-key add -\n\n$ sudo apt-get update\n\n$ sudo apt-get install heroku    Fa\u00e7a login no heroku do seu pc com o comando:  $ heroku login    Criei um app no heroku:  $ heroku apps:create  nome_do_app_no_heroku_aqui     No site heroku v\u00e1 at\u00e9 a dashboard de apps (https://dashboard.heroku.com/apps/), clique no app que foi criado no terminal.    Clique na aba \u201cDeploy\u201d, selecione a ferramenta de versionamento como GitHub em \u201cDeployment method\u201d, selecione o reposit\u00f3rio desejado em \u201cApp connected to GitHub\u201d.    Ative o deploy cont\u00ednuo de uma determinada branch do seu repositorio em \u201cAutomatic deploys\u201d, ative a checkbox \u201cWait for CI to pass before deploy\u201d e clique no bot\u00e3o \u201cEnable Automatic Deploys\u201d.    Crie um arquivo na pasta do seu projeto chamado \u201ccircle.yml\u201d com algum editor de texto, em seguida coloque dentro desse arquivo as configura\u00e7\u00f5es:  deployment:\n\nstaging:\n\nbranch: master\n\nheroku:\n\n  appname:  nome_do_seu_app_no_heroku_aqui     Configure o arquivo \u201ccircle.yml\u201d com os dados do seu projeto, adicione outras configura\u00e7\u00f5es e scripts se quiser.    No CircleCI na op\u00e7\u00e3o lateral \u201cProjects\u201d clique no bot\u00e3o \u201cAdd Project\u201d (https://circleci.com/add-projects/gh/:org) e selecione seu reposit\u00f3rio do GitHub que ser\u00e1 feito a integra\u00e7\u00e3o cont\u00ednua e clique no bot\u00e3o ao lado \u201cBuild Project\u201d.    Caso seu projeto use SSH, nas configura\u00e7\u00f5es do projeto v\u00e1 no t\u00f3pico \u201cPermissions\u201d e clique em \u201cCheckout SSH Keys\u201d e adicione a deploy key e a user key. Ainda no mesmo t\u00f3pico clique em \u201cSSH Permissions\u201d e adicione a SSH key do seu reposit\u00f3rio.    Pronto ! Ao commitar na branch escolhida para deploy haver\u00e1 as mudan\u00e7as automaticamente inseridas no Heroku.", 
            "title": "Tutorial"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua-Travis-CI/", 
            "text": "Integra\u00e7\u00e3o Cont\u00ednua\n\n\n\u201cIntegra\u00e7\u00e3o Cont\u00ednua \u00e9 uma pratica de desenvolvimento de software onde os membros de um time integram seu trabalho frequentemente, geralmente cada pessoa integra pelo menos diariamente \u2013 podendo haver multiplas integra\u00e7\u00f5es por dia. Cada integra\u00e7\u00e3o \u00e9 verificada por um build automatizado (incluindo testes) para detectar erros de integra\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel. Muitos times acham que essa abordagem leva a uma significante redu\u00e7\u00e3o nos problemas de integra\u00e7\u00e3o e permite que um time desenvolva software coeso mais rapidamente.\u201d \nMartin Fowler\n\n\nTravis-CI\n\n\n\n\n\n\nO primeiro passo \u00e9 acessar o site do \ntravis-ci\n e fazer login com o seu usu\u00e1rio do \ngithub\n.\n\nImagem - Travis-CI\n\n\n\n\n\n\nFeito isso voc\u00ea vai acessar a p\u00e1gina do seu \nperfil\n, l\u00e1 voc\u00ea ir\u00e1 visualizar uma lista de todos os seus projetos. Basta mudar a chave para a posi\u00e7ao ON e clicar na engrenagem ao lado, isto te levar\u00e1 para a p\u00e1gina de configura\u00e7\u00f5es. \nImagem - Perfil\n\n\n\n\n\n\nNa p\u00e1gina de configura\u00e7\u00f5es n\u00f3s temos as seguintes op\u00e7\u00f5es:\n\n\n\n\n\n\nBuild only if .travis.yml is present: Este vem como off por padr\u00e3o, pois ainda n\u00e3o criamos o arquivo .travis.yml\n\n\n\n\nBuild pushes: Toda vez que for feito um push, ele vai gerar um novo build\n\n\nBuild pull requests: Toda vez que for feito um pull request, ele vai gerar um novo build\n\n\nLimit concurrent jobs\n\n\n\n\nMude a primeira chave \"Build only if .travis.yml is present\", para criar o .travis.yml e dar um commit para o reposit\u00f3rio. \nImagem - Chave.\n\nEscolha a linguagem que deseja utilizar \naqui\n. Aqui neste exemplo eu irei utilizar o Ruby, e o arquivo ficar\u00e1 assim:\n  \nyml\n  1 language: ruby\n  2 rvm:\n  3 - 2.2.0\n\n  Tamb\u00e9m \u00e9 poss\u00edvel validar o seu .travis.yml \nneste link\n.\n\n\n\n\nFeito isso, o arquivo deve ter sido criado/validado e devidamente \"commitado\" para o seu reposit\u00f3rio.\n\n\nO resultado final dever\u00e1 ser semelhante a este: \nImagem - Resultado.\n\n\n\n\nEste foi um exemplo bem simples de como utilizar a integra\u00e7\u00e3o cont\u00ednua com o travis-ci, o arquivo .travis.yml pode ser personalizado de acordo com as necessidades do seu projeto.", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua com Travis CI"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua-Travis-CI/#integracao-continua", 
            "text": "\u201cIntegra\u00e7\u00e3o Cont\u00ednua \u00e9 uma pratica de desenvolvimento de software onde os membros de um time integram seu trabalho frequentemente, geralmente cada pessoa integra pelo menos diariamente \u2013 podendo haver multiplas integra\u00e7\u00f5es por dia. Cada integra\u00e7\u00e3o \u00e9 verificada por um build automatizado (incluindo testes) para detectar erros de integra\u00e7\u00e3o o mais r\u00e1pido poss\u00edvel. Muitos times acham que essa abordagem leva a uma significante redu\u00e7\u00e3o nos problemas de integra\u00e7\u00e3o e permite que um time desenvolva software coeso mais rapidamente.\u201d  Martin Fowler", 
            "title": "Integra\u00e7\u00e3o Cont\u00ednua"
        }, 
        {
            "location": "/Integra\u00e7\u00e3o-Cont\u00ednua-Travis-CI/#travis-ci", 
            "text": "O primeiro passo \u00e9 acessar o site do  travis-ci  e fazer login com o seu usu\u00e1rio do  github . Imagem - Travis-CI    Feito isso voc\u00ea vai acessar a p\u00e1gina do seu  perfil , l\u00e1 voc\u00ea ir\u00e1 visualizar uma lista de todos os seus projetos. Basta mudar a chave para a posi\u00e7ao ON e clicar na engrenagem ao lado, isto te levar\u00e1 para a p\u00e1gina de configura\u00e7\u00f5es.  Imagem - Perfil    Na p\u00e1gina de configura\u00e7\u00f5es n\u00f3s temos as seguintes op\u00e7\u00f5es:    Build only if .travis.yml is present: Este vem como off por padr\u00e3o, pois ainda n\u00e3o criamos o arquivo .travis.yml   Build pushes: Toda vez que for feito um push, ele vai gerar um novo build  Build pull requests: Toda vez que for feito um pull request, ele vai gerar um novo build  Limit concurrent jobs   Mude a primeira chave \"Build only if .travis.yml is present\", para criar o .travis.yml e dar um commit para o reposit\u00f3rio.  Imagem - Chave. \nEscolha a linguagem que deseja utilizar  aqui . Aqui neste exemplo eu irei utilizar o Ruby, e o arquivo ficar\u00e1 assim:\n   yml\n  1 language: ruby\n  2 rvm:\n  3 - 2.2.0 \n  Tamb\u00e9m \u00e9 poss\u00edvel validar o seu .travis.yml  neste link .   Feito isso, o arquivo deve ter sido criado/validado e devidamente \"commitado\" para o seu reposit\u00f3rio.  O resultado final dever\u00e1 ser semelhante a este:  Imagem - Resultado.   Este foi um exemplo bem simples de como utilizar a integra\u00e7\u00e3o cont\u00ednua com o travis-ci, o arquivo .travis.yml pode ser personalizado de acordo com as necessidades do seu projeto.", 
            "title": "Travis-CI"
        }, 
        {
            "location": "/Colocando-a-aplica\u00e7\u00e3o-em-produ\u00e7\u00e3o-com-NGINX/", 
            "text": "= Colocando a aplica\u00e7\u00e3o em produ\u00e7\u00e3o com NGINX\n\n\nComo sabemos softwares feitos com python/Django e node.js/Express, s\u00e3o excelentes em rela\u00e7\u00e3o a produtividade de produ\u00e7\u00e3o, mas quando o a aplica\u00e7\u00e3o inteira \u00e9 colcoada em cima dessas tecnologias, a perfomace reduz consideravelmente. Nesse tutorial vamos aprender a como colcoar uma aplica\u00e7\u00e3o em produ\u00e7\u00e3o integrando com NGINX visando o aumento da perfomace da aplica\u00e7\u00e3o, atendendo mais usu\u00e1rios com os mesmos recursos. Dessa forma iremos criar dois servidores, proxy server do nginx com Django ou Express e tamb\u00e9m um servidor static server pelo qual ser\u00e1 usado para o processamento de arquivos est\u00e1ticos. Dessa forma \u00e9 poss\u00edvel diminuir o n\u00famero de requisi\u00e7\u00f5es diretas a aplica\u00e7\u00e3o.\n\n\n== Instalando o NGINX na sua vers\u00e3o mais recente\n\n\n(Foi utilizado sistema ubuntu na instala\u00e7\u00e3o)\n\n\nExecute os comandos em sequ\u00eancia:\n[source,Bash]\n....\n\n sudo apt-get update\n\n sudo apt-get sudo apt-get install nginx\n\n sudo service nginx start\n\n sudo update-rc.d nginx defaults\n....\n\n\nOs ultimos dois comandos iniciam a aplica\u00e7\u00e3o e a defini\u00e7\u00e3o para executar a aplica\u00e7\u00e3o quando o sistema for iniciado, repectivamente.\n\n\n== Configurando servidor\n\n\nAgora vamos configurar o NGINX para que ele comece a servir os arquivos est\u00e1ticos para o pr\u00f3pria aplica\u00e7\u00e3o, node ou django, n\u00e3o precisar fazer isso. Essas configura\u00e7\u00f5es ser\u00e3o realizadas dentro do arquivo principal do ngix, chamado \"nginx.conf\". No ubuntu a localiza\u00e7\u00e3o dele se encontra: \"/etc/nginx/nginx.conf\".\n\n\nArquivo nginx.conf melhorado---\n\n\n[source, nginx.conf]\n....\nworker_processes 1;\nevents {\n  worker_connections 1024;\n}\nhttp {\n  include mime.types;\n  default_type application/octet-stream;\n  sendfile on;\n  keepalive_timeout 65;\n  gzip on;\n\n\nserver {\n    listen 80;\n    server_name localhost;\n    access_log logs/access.log;\n\n\nlocation /static {\n  root /meuapp/public;\n  expires max;\n}\nlocation / {\n  proxy_pass http://localhost:3000;\n}\n\n\n\n}\n}\n....\n\n\nPara melhorar a perfomace habilitamos o gzip, em \"gzip on\", os arquivos v\u00e3o compactados para o cliente e l\u00e1 s\u00e3o descompactados, a performace da aplica\u00e7\u00e3o como um todo \u00e9 melhorada visto que GZIP consegue em m\u00e9dia reduzir o tamanho dos arquivos est\u00e1ticos em 50%. O servidor conseguir\u00e1 atender mais usu\u00e1rios com a mesma largura de banda.\n\n\nEm \"location /static{\" definimos a rota dos arquivos est\u00e1ticos da aplica\u00e7\u00e3o. No caso \"/static\" ser\u00e1 o caminho no site para os arquivos est\u00e1ticos e em \"root\" ser\u00e1 o caminho absoluto dentro da maquina para os arquivos est\u00e1ticos. Dentro do location tamb\u00e9m \u00e9 colocado \"expires max\" um cache simples.\n\n\n[source, nginx.conf]\n....\nlocation / {\n  proxy_pass http://localhost:3000;\n}\n....\n\n\nNo \u00faltimo location, o location /, vai para a raiz da aplica\u00e7\u00e3o sendo ela um proxy da nossa aplica\u00e7\u00e3o, node.js ou python, que est\u00e1 rodando em localhost:3000.\n\n\nMas ent\u00e3o quer dizer que se eu quiser rodar a aplica\u00e7\u00e3o em um servidor e os arquivos est\u00e1ticos em outro eu posso?\nSim, pode! Inclusive pode se fazer isso para aumentar ainda mais a perfomace do servidor e atenter mais usu\u00e1rios.\n\n\n== Refer\u00eancias\n\n\nhttps://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-14-04-lts [How to install NGINX on ubuntu]\nhttps://udgwebdev.com/nginx-servindo-nodejs [NGINX servindo nodejs]\nhttp://blog.thiagobelem.net/habilitando-gzip-em-servidores-nginx [Habilitando Gzip]", 
            "title": "Disponibilizando a Aplica\u00e7\u00e3o com o Proxy Reverso Nginx"
        }, 
        {
            "location": "/Git/", 
            "text": "Instalando e configurando o Git\n\n\nAntes de utilizarmos o Git, \u00e9 fundamental instal\u00e1-lo. Para isso, voc\u00ea deve verificar seu \nsistema operacional\n, que \u00e9 aonde voc\u00ea ir\u00e1 realizar a instala\u00e7\u00e3o de forma apropriada e m\u00e3os \u00e0 obra!\n\n\nAbaixo, se encontra t\u00f3picos relacionados a maneira de instal\u00e1-lo em diferentes \nsistemas operacionais\n.\n\n## Instalando no Windows\n\n\nAcesse a seguinte URL, fa\u00e7a o download e instale a \u00faltima vers\u00e3o dispon\u00edvel: http://msysgit.github.io/\n\n\nA instala\u00e7\u00e3o \u00e9 bastante simples. Escolha as op\u00e7\u00f5es padr\u00e3o. Ser\u00e3o instalados alguns programas, sendo o mais importante o Git Bash, que permite que o Git seja executado pela linha de comando no Windows.\n\n\nD\u00ea duplo clique no \u00edcone do Git Bash e ser\u00e1 aberto um terminal, com o seguinte prompt na linha de comando:\n\n``$``\n\n\nEsse prompt ser\u00e1 seu amigo a partir de agora. N\u00e3o tenha medo! Sempre que falarmos de terminal, estaremos falando do Git Bash.\n\n## Instalando no Mac\n\n\nBaixe a \u00faltima vers\u00e3o do instalador gr\u00e1fico do Git para Mac OS X a partir do link: https://code.google.com/p/git-osx-installer/downloads\n\n\nAbra um terminal e prepare-se para utilizar o Git!\n\n## Instalando no Linux\n\n\nPara instalar o Git no Ubuntu, ou em uma outra distribui\u00e7\u00e3o baseada em Debian, execute em um terminal:\n\n``$ sudo apt-get install git``\n\n\nNo Fedora, utilize:\n\n``$ sudo yum install git``\n\n\nPara as demais distribui\u00e7\u00f5es do Linux, veja o comando em: http://git-scm.com/download/linux\n\n## Configura\u00e7\u00f5es b\u00e1sicas\n\n\n\u00c9 importante nos identificarmos para o Git, informando nosso nome e e-mail. Em um terminal, execute os comandos a seguir:\n\n``$ git config --global user.name \"Fulano da Silva\"``\n\n``$ git config --global user.email fulanodasilva.git@gmail.com``\n\n\nClaro, utilize seu nome e e-mail!\n\n# Criar um reposit\u00f3rio\n\n\nO primeiro passo para trabalhar com Git \u00e9 criar um reposit\u00f3rio. Um reposit\u00f3rio \u00e9 um diret\u00f3rio de arquivos versionados. Para criar um reposit\u00f3rio, basta rodar o comando:\n\n``$ git init NOME_DO_REPOSITORIO``\n\nExemplo:\n\n``$ git init games``\u00a0cria a pasta chamada\u00a0games, que \u00e9 um reposit\u00f3rio Git.\n\n# Adicionar arquivos\n\nDo ponto do vista do Git, existem quatro estados no qual um determinado arquivo pode estar.\n\n*  Commited:\u00a0O arquivo est\u00e1 sob controle de vers\u00e3o e n\u00e3o apresenta nenhuma modifica\u00e7\u00e3o.\n\n*  Commit candidate:\u00a0Caso voc\u00ea crie um conjunto de modifica\u00e7\u00f5es (commit), esses ser\u00e3o os arquivos inclu\u00eddos.\n\n*  Modified:\u00a0Arquivos que foram modificados.\n\n*  Untracked:\u00a0Arquivos novos, que ainda n\u00e3o est\u00e3o no controle de vers\u00e3o.\n\n\nPara mudar um arquivo de\u00a0untracked\u00a0ou\u00a0modified\u00a0para\u00a0Commit candidate, voc\u00ea usa o comando\u00a0git add CAMINHO. O\u00a0git add\u00a0\u00e9 inteligente, ent\u00e3o se voc\u00ea passar um caminho parcial para ele, ele muda o estado de todos os arquivos que cont\u00e9m esse caminho parcial.\n\nExemplo:\n\n* ``$ git add .\u00a0`` mudaria o estado de todos os arquivos a partir do diret\u00f3rio atual.\n\n* ``$ git add arquivo.txt ``\u00a0mudaria o estado do arquivo\u00a0arquivo.txt\n\n* ``$ git add pasta ``\u00a0mudaria o estado do arquivo\u00a0pasta/arq1.txt\u00a0e do pasta/arq2.txt, mas n\u00e3o mudaria do\u00a0outra_pasta/arq1.txt\n\n# Fazer Commits\n\n\nAgora que voc\u00ea j\u00e1 sabe como selecionar as modifica\u00e7\u00f5es que quer incluir em um pacote de modifica\u00e7\u00f5es (um commit), chegou a hora de aprender como gerar esse pacote. \n\n\nO comando utilizado para criar um commit em git \u00e9\u00a0\ngit commit\n. Com esse comando, todos os arquivos que estiverem marcados como\u00a0Commit candidate\u00a0ser\u00e3o inclu\u00eddos no commit. Se voc\u00ea tamb\u00e9m quiser incluir os arquivos que est\u00e3o marcados como modified, voc\u00ea pode incluir a flag\u00a0\n-a\n.\n\n\nUma coisa muito importante de qualquer commit \u00e9 uma mensagem que explique o que significa aquele commit. Para isso, voc\u00ea pode passar a op\u00e7\u00e3o \n-m \"mensagem de commit\"\n. Caso voc\u00ea n\u00e3o passe, o git vai abrir um editor de texto para que voc\u00ea digite a mensagem.\n\nExemplo:\n\n`` $ git commit -m \"commit\" ``\u00a0cria um commit com todos os\u00a0Commit candidate\u00a0e a mensagem\u00a0*commit*\n\n`` $ git commit -a -m \"segundo commit\"``\u00a0cria um commit com os arquivos marcados como\u00a0Commit candidate e os\u00a0modified\u00a0e junta com a mensagem\u00a0*segundo commit*\n\n\nUma outra possibilidade para commit utiliza da flag \n-s\n. Essa flag permite que o mesmo commit tenho v\u00e1rios autores, ou seja, voc\u00ea e outro desenvolvedor podem coolaborar para um mesmo fim e commitarem \"juntos\".  \n\n\n\u00c9 importante lembrar que esse tipo de commit leva em considera\u00e7\u00e3o o usu\u00e1rio configurado no git como principal e d\u00e1 status de coolaborador para os demais.  \n\n\nPara usar essa flag basta digitar, \ngit commit -s\n.   \n\n\nCom Enter pressionado voc\u00ea ser\u00e1 redirecioado para seu editor de texto padr\u00e3o, visualizando algo semelhante:  \n\n![Commit em grupo](https://raw.githubusercontent.com/wiki/fga-gpp-mds/00-Disciplina/img/commitGrupo.png) \n\n\nNa primeira linha insira um \nT\u00edtulo\n para o commit.  \n\n\nNa segunda linha \ndescreva\n um pouco melhor as altera\u00e7\u00f5es.  \n\n\nPara adicionar os \ncoautores\n, basta copiar a linha, \nSigned-off-by\n e colar na linha abiaxo mudando os dados necess\u00e1rios.  \n\n\nFeito isso basta salvar o arquivo e seu commit ser\u00e1 efetuado com sucesso.  \n\n### Mudando o autor de um commit\n\nUm problema que se pode identificar ainda ao se parear utilizando apenas um computador \u00e9 o de que os commits s\u00f3 v\u00e3o para o usu\u00e1rio configurado, e logo nos gr\u00e1ficos referentes aos commits, s\u00f3 esse usu\u00e1rio configurado - geralmente o dono do computado - recebe commits. Esse problema pode ser solucionado reconfigurando os usu\u00e1rio registrado na m\u00e1quina como dito em [Configura\u00e7\u00f5es b\u00e1sicas](#configura%C3%A7%C3%B5es-b%C3%A1sicas), o que pode ser um overhead bem grande, ou apenas utilizando a tag `--author` conforme demonstrado abaixo:\n\n> git commit --author=\"Author Name \n\"\n\n* Author Name: Nome do autor registrado no git\n* \n: Email do autor registrado no git\n\n\nAo se utilizar essa tag, o commit ir\u00e1 contar agora para o author colocado, conseguindo driblar ent\u00e3o o sistema de ter que reconfigurar o usu\u00e1rio.\n\n# Enviar commits para um reposit\u00f3rio\n\n\nPara enviar os commits feitos para o reposit\u00f3rio desejado, utiliza-se o comando \npush\n. Este comando tem a seguinte assinatura: \ngit push local_remote_name remote_branch_name\n, onde \nlocal_remote_name\n indica o nome do reposit\u00f3rio local em que o reposit\u00f3rio git se encontra e \nremote_branch_name\n indica o nome da branch em que deve ser enviado o conjunto de commits.\n\n# Trabalhando com branches\n\n\n\u00c9 importante saber utilizar da melhor maneira poss\u00edvel as branches do git. Branches servem para voc\u00ea trabalhar em uma determinada funcionalidade, dependendo da pol\u00edtica de configura\u00e7\u00e3o implementada no seu projeto. O ideal de trabalhar com branches \u00e9 que voc\u00ea possa trabalhar sem interferir em funcionalidades que j\u00e1 est\u00e3o implementadas. \n\n\n\u00c9 sugerido que no seu projeto seja definida uma branch que contenha todo o conte\u00fado devidamente testado e aprovado conforme os crit\u00e9rios de aceita\u00e7\u00e3o. Essa branch \u00e9 criada a partir do \nmerge\n de outras e comp\u00f5e o produto mais atualizado nesse reposit\u00f3rio. \n\n### Situa\u00e7\u00e3o\n\n\nAp\u00f3s v\u00e1rios merges e \nrebases\n de outras branchs a branch \ndev\n \u00e9 a mais atual do projeto. Ainda faltam o caso de uso X para que o produto possa ser devidamente entregue, os desenvolvedores precisam trabalhar em paralelo para implementar todas as funcionalidades desse caso de uso. Sabendo que a \ndev\n est\u00e1 atualizada os desenvolvedores tomam a seguinte decis\u00e3o: \n\n * Todos, de seus computadores, mudam para `dev`: `git checkout dev`\n * A partir da `dev` criam novas branches com nomes significativos das funcionalidades que implementar\u00e3o: `git checkout -b funcionalidade_x`\n\n\nA partir de agora os desenvolvedores podem trabalhar separadamente na implementa\u00e7\u00e3o das funcionalidades de casos de uso sem problemas, de forma que minimizem os riscos de conflitos durante o projeto, pois as novas branches tem uma origem em comum. \n\n# O comando Git Stash\n\n\nCaso voc\u00ea esteja trabalhando em uma parte do seu projeto que n\u00e3o est\u00e1 fluindo muito bem e n\u00e3o deseja fazer um commit disso para trabalhar em outra branch por um tempo, o que fazer? D\u00e1 para resolver isso com um comando bem \u00fatil: \ngit stash>\n. Com esse comando os arquivos monitorados que foram modificados ser\u00e3o salvos em uma pilha de modifica\u00e7\u00e3o n\u00e3o finalizadas que voc\u00ea pode recuperar e finalizar depois. Voc\u00ea pode criar uma lista de stashes e visualiz\u00e1-los depois com o comando \ngit stash list\n. \n\nVoc\u00ea pode aplicar novamente o stash feito com o comando `git stash apply`. Por\u00e9m com esse comando o Git identifica apenas o \u00fatimo stash feito, para selecionar um stash espec\u00edfico utilize o comando : `git stash apply stash@{n\u00famero do stash}`\n\n# Merge e Rebase\n\n### Situa\u00e7\u00e3o \n\n\nTerminado o trabalho de implementa\u00e7\u00e3o das funcionalidades do Caso de Uso X os desenvolvedores desejam juntar suas altera\u00e7\u00f5es para, finalmente, terminarem o caso de uso. Como foi dito acima as branches das funcionalidades tem uma origem em comum, \ndev\n, o que torna a mescla mais f\u00e1cil. \n\n## Merge \n\n\nO merge \u00e9 a mescla do conte\u00fado de duas branches. Para realizar tal opera\u00e7\u00e3o tenha em mente que:\n\n * Voc\u00ea vai _fazer o merge_ da branch passada como par\u00e2metro na sua branch **ATUAL** \n\n### Exemplo: \n\nOs desenvolvedores resolveram _fazer o merge_ a branch `funcionalidade_a` na `funcionalidade_b`, para tal eles:\n\n* Mudaram para a branch `funcionalidade_b`. `git checkout funcionalidade_b`;\n* `On branch funcionalidade_b`\n* Realizaram o merge de a --> b. `git merge funcionalidade_a`\n\n\nIsso gerou um commit de merge. Isso pode gerar um pouco de polui\u00e7\u00e3o no log de commits. \n\n## Rebase \n\n\nO rebase \u00e9 uma alternativa ao merge. Tamb\u00e9m mesclando o conte\u00fado de duas branches, mas o rebase insere os commits de modo cronol\u00f3gico no hist\u00f3rico de commits. O rebase tamb\u00e9m n\u00e3o deixa uma mensagem de commit, uma das vantagens de usar-se o rebase. \n\nNo uso do rebase voc\u00ea adicionar\u00e1 os commits da branch `funcionalidade_a` na `funcionalidade_b` da seguinte maneira: \n\n* V\u00e1 para a branch `funcionalidade_a`\n* execute: `git rebase funcionalidade_b`\n\nisso adicionara os commits que est\u00e3o em `a` mas n\u00e3o est\u00e3o em `b` em `funcionalidade_b` de forma que voc\u00ea poder\u00e1 realizar um `fast-forward merge` em `b`\n\n* `git checkout funcionalidade_b`\n* `git merge funcionalidade_a`\n\n# Plataforma de Exemplo\n\n\nPara aprender mais sobre git e exercitar, acesse o [Codecademy](https://www.codecademy.com/pt-BR/learn/learn-git).\n\n\nPara exercitar e fixar os conhecimentos de Git, utilize a plataforma [Learn Git Branching](http://learngitbranching.js.org/)\n\n\nPara treinar Git de maneira interativa, um otimo estilo de jogo [Aprenda Git](http://aprenda.vidageek.net/aprenda/git)\nou\n[Git Real Code School](http://gitreal.codeschool.com/)\n\n# Refer\u00eancias\n\n* [Controlando vers\u00f5es com Git e GitHub - Casa do C\u00f3digo](https://github.com/brunoipjg/myEbooks/blob/master/Controlando%20vers%C3%B5es%20com%20Git%20e%20GitHub%20-%20Casa%20do%20Codigo.pdf)\n* [Ferramentas do Git - Fazendo Stash](https://git-scm.com/book/pt-br/v1/Ferramentas-do-Git-Fazendo-Stash)", 
            "title": "Tutorial Git"
        }, 
        {
            "location": "/Git/#instalando-e-configurando-o-git", 
            "text": "Antes de utilizarmos o Git, \u00e9 fundamental instal\u00e1-lo. Para isso, voc\u00ea deve verificar seu  sistema operacional , que \u00e9 aonde voc\u00ea ir\u00e1 realizar a instala\u00e7\u00e3o de forma apropriada e m\u00e3os \u00e0 obra! Abaixo, se encontra t\u00f3picos relacionados a maneira de instal\u00e1-lo em diferentes  sistemas operacionais .\n\n## Instalando no Windows Acesse a seguinte URL, fa\u00e7a o download e instale a \u00faltima vers\u00e3o dispon\u00edvel: http://msysgit.github.io/ A instala\u00e7\u00e3o \u00e9 bastante simples. Escolha as op\u00e7\u00f5es padr\u00e3o. Ser\u00e3o instalados alguns programas, sendo o mais importante o Git Bash, que permite que o Git seja executado pela linha de comando no Windows. D\u00ea duplo clique no \u00edcone do Git Bash e ser\u00e1 aberto um terminal, com o seguinte prompt na linha de comando:\n\n``$`` Esse prompt ser\u00e1 seu amigo a partir de agora. N\u00e3o tenha medo! Sempre que falarmos de terminal, estaremos falando do Git Bash.\n\n## Instalando no Mac Baixe a \u00faltima vers\u00e3o do instalador gr\u00e1fico do Git para Mac OS X a partir do link: https://code.google.com/p/git-osx-installer/downloads Abra um terminal e prepare-se para utilizar o Git!\n\n## Instalando no Linux Para instalar o Git no Ubuntu, ou em uma outra distribui\u00e7\u00e3o baseada em Debian, execute em um terminal:\n\n``$ sudo apt-get install git`` No Fedora, utilize:\n\n``$ sudo yum install git`` Para as demais distribui\u00e7\u00f5es do Linux, veja o comando em: http://git-scm.com/download/linux\n\n## Configura\u00e7\u00f5es b\u00e1sicas \u00c9 importante nos identificarmos para o Git, informando nosso nome e e-mail. Em um terminal, execute os comandos a seguir:\n\n``$ git config --global user.name \"Fulano da Silva\"``\n\n``$ git config --global user.email fulanodasilva.git@gmail.com`` Claro, utilize seu nome e e-mail!\n\n# Criar um reposit\u00f3rio O primeiro passo para trabalhar com Git \u00e9 criar um reposit\u00f3rio. Um reposit\u00f3rio \u00e9 um diret\u00f3rio de arquivos versionados. Para criar um reposit\u00f3rio, basta rodar o comando:\n\n``$ git init NOME_DO_REPOSITORIO``\n\nExemplo:\n\n``$ git init games``\u00a0cria a pasta chamada\u00a0games, que \u00e9 um reposit\u00f3rio Git.\n\n# Adicionar arquivos\n\nDo ponto do vista do Git, existem quatro estados no qual um determinado arquivo pode estar.\n\n*  Commited:\u00a0O arquivo est\u00e1 sob controle de vers\u00e3o e n\u00e3o apresenta nenhuma modifica\u00e7\u00e3o.\n\n*  Commit candidate:\u00a0Caso voc\u00ea crie um conjunto de modifica\u00e7\u00f5es (commit), esses ser\u00e3o os arquivos inclu\u00eddos.\n\n*  Modified:\u00a0Arquivos que foram modificados.\n\n*  Untracked:\u00a0Arquivos novos, que ainda n\u00e3o est\u00e3o no controle de vers\u00e3o. Para mudar um arquivo de\u00a0untracked\u00a0ou\u00a0modified\u00a0para\u00a0Commit candidate, voc\u00ea usa o comando\u00a0git add CAMINHO. O\u00a0git add\u00a0\u00e9 inteligente, ent\u00e3o se voc\u00ea passar um caminho parcial para ele, ele muda o estado de todos os arquivos que cont\u00e9m esse caminho parcial.\n\nExemplo:\n\n* ``$ git add .\u00a0`` mudaria o estado de todos os arquivos a partir do diret\u00f3rio atual.\n\n* ``$ git add arquivo.txt ``\u00a0mudaria o estado do arquivo\u00a0arquivo.txt\n\n* ``$ git add pasta ``\u00a0mudaria o estado do arquivo\u00a0pasta/arq1.txt\u00a0e do pasta/arq2.txt, mas n\u00e3o mudaria do\u00a0outra_pasta/arq1.txt\n\n# Fazer Commits Agora que voc\u00ea j\u00e1 sabe como selecionar as modifica\u00e7\u00f5es que quer incluir em um pacote de modifica\u00e7\u00f5es (um commit), chegou a hora de aprender como gerar esse pacote.  O comando utilizado para criar um commit em git \u00e9\u00a0 git commit . Com esse comando, todos os arquivos que estiverem marcados como\u00a0Commit candidate\u00a0ser\u00e3o inclu\u00eddos no commit. Se voc\u00ea tamb\u00e9m quiser incluir os arquivos que est\u00e3o marcados como modified, voc\u00ea pode incluir a flag\u00a0 -a . Uma coisa muito importante de qualquer commit \u00e9 uma mensagem que explique o que significa aquele commit. Para isso, voc\u00ea pode passar a op\u00e7\u00e3o  -m \"mensagem de commit\" . Caso voc\u00ea n\u00e3o passe, o git vai abrir um editor de texto para que voc\u00ea digite a mensagem.\n\nExemplo:\n\n`` $ git commit -m \"commit\" ``\u00a0cria um commit com todos os\u00a0Commit candidate\u00a0e a mensagem\u00a0*commit*\n\n`` $ git commit -a -m \"segundo commit\"``\u00a0cria um commit com os arquivos marcados como\u00a0Commit candidate e os\u00a0modified\u00a0e junta com a mensagem\u00a0*segundo commit* Uma outra possibilidade para commit utiliza da flag  -s . Essa flag permite que o mesmo commit tenho v\u00e1rios autores, ou seja, voc\u00ea e outro desenvolvedor podem coolaborar para um mesmo fim e commitarem \"juntos\".   \u00c9 importante lembrar que esse tipo de commit leva em considera\u00e7\u00e3o o usu\u00e1rio configurado no git como principal e d\u00e1 status de coolaborador para os demais.   Para usar essa flag basta digitar,  git commit -s .    Com Enter pressionado voc\u00ea ser\u00e1 redirecioado para seu editor de texto padr\u00e3o, visualizando algo semelhante:  \n\n![Commit em grupo](https://raw.githubusercontent.com/wiki/fga-gpp-mds/00-Disciplina/img/commitGrupo.png)  Na primeira linha insira um  T\u00edtulo  para o commit.   Na segunda linha  descreva  um pouco melhor as altera\u00e7\u00f5es.   Para adicionar os  coautores , basta copiar a linha,  Signed-off-by  e colar na linha abiaxo mudando os dados necess\u00e1rios.   Feito isso basta salvar o arquivo e seu commit ser\u00e1 efetuado com sucesso.  \n\n### Mudando o autor de um commit\n\nUm problema que se pode identificar ainda ao se parear utilizando apenas um computador \u00e9 o de que os commits s\u00f3 v\u00e3o para o usu\u00e1rio configurado, e logo nos gr\u00e1ficos referentes aos commits, s\u00f3 esse usu\u00e1rio configurado - geralmente o dono do computado - recebe commits. Esse problema pode ser solucionado reconfigurando os usu\u00e1rio registrado na m\u00e1quina como dito em [Configura\u00e7\u00f5es b\u00e1sicas](#configura%C3%A7%C3%B5es-b%C3%A1sicas), o que pode ser um overhead bem grande, ou apenas utilizando a tag `--author` conforme demonstrado abaixo:\n\n> git commit --author=\"Author Name  \"\n\n* Author Name: Nome do autor registrado no git\n*  : Email do autor registrado no git Ao se utilizar essa tag, o commit ir\u00e1 contar agora para o author colocado, conseguindo driblar ent\u00e3o o sistema de ter que reconfigurar o usu\u00e1rio.\n\n# Enviar commits para um reposit\u00f3rio Para enviar os commits feitos para o reposit\u00f3rio desejado, utiliza-se o comando  push . Este comando tem a seguinte assinatura:  git push local_remote_name remote_branch_name , onde  local_remote_name  indica o nome do reposit\u00f3rio local em que o reposit\u00f3rio git se encontra e  remote_branch_name  indica o nome da branch em que deve ser enviado o conjunto de commits.\n\n# Trabalhando com branches \u00c9 importante saber utilizar da melhor maneira poss\u00edvel as branches do git. Branches servem para voc\u00ea trabalhar em uma determinada funcionalidade, dependendo da pol\u00edtica de configura\u00e7\u00e3o implementada no seu projeto. O ideal de trabalhar com branches \u00e9 que voc\u00ea possa trabalhar sem interferir em funcionalidades que j\u00e1 est\u00e3o implementadas.  \u00c9 sugerido que no seu projeto seja definida uma branch que contenha todo o conte\u00fado devidamente testado e aprovado conforme os crit\u00e9rios de aceita\u00e7\u00e3o. Essa branch \u00e9 criada a partir do  merge  de outras e comp\u00f5e o produto mais atualizado nesse reposit\u00f3rio. \n\n### Situa\u00e7\u00e3o Ap\u00f3s v\u00e1rios merges e  rebases  de outras branchs a branch  dev  \u00e9 a mais atual do projeto. Ainda faltam o caso de uso X para que o produto possa ser devidamente entregue, os desenvolvedores precisam trabalhar em paralelo para implementar todas as funcionalidades desse caso de uso. Sabendo que a  dev  est\u00e1 atualizada os desenvolvedores tomam a seguinte decis\u00e3o: \n\n * Todos, de seus computadores, mudam para `dev`: `git checkout dev`\n * A partir da `dev` criam novas branches com nomes significativos das funcionalidades que implementar\u00e3o: `git checkout -b funcionalidade_x` A partir de agora os desenvolvedores podem trabalhar separadamente na implementa\u00e7\u00e3o das funcionalidades de casos de uso sem problemas, de forma que minimizem os riscos de conflitos durante o projeto, pois as novas branches tem uma origem em comum. \n\n# O comando Git Stash Caso voc\u00ea esteja trabalhando em uma parte do seu projeto que n\u00e3o est\u00e1 fluindo muito bem e n\u00e3o deseja fazer um commit disso para trabalhar em outra branch por um tempo, o que fazer? D\u00e1 para resolver isso com um comando bem \u00fatil:  git stash> . Com esse comando os arquivos monitorados que foram modificados ser\u00e3o salvos em uma pilha de modifica\u00e7\u00e3o n\u00e3o finalizadas que voc\u00ea pode recuperar e finalizar depois. Voc\u00ea pode criar uma lista de stashes e visualiz\u00e1-los depois com o comando  git stash list . \n\nVoc\u00ea pode aplicar novamente o stash feito com o comando `git stash apply`. Por\u00e9m com esse comando o Git identifica apenas o \u00fatimo stash feito, para selecionar um stash espec\u00edfico utilize o comando : `git stash apply stash@{n\u00famero do stash}`\n\n# Merge e Rebase\n\n### Situa\u00e7\u00e3o  Terminado o trabalho de implementa\u00e7\u00e3o das funcionalidades do Caso de Uso X os desenvolvedores desejam juntar suas altera\u00e7\u00f5es para, finalmente, terminarem o caso de uso. Como foi dito acima as branches das funcionalidades tem uma origem em comum,  dev , o que torna a mescla mais f\u00e1cil. \n\n## Merge  O merge \u00e9 a mescla do conte\u00fado de duas branches. Para realizar tal opera\u00e7\u00e3o tenha em mente que:\n\n * Voc\u00ea vai _fazer o merge_ da branch passada como par\u00e2metro na sua branch **ATUAL** \n\n### Exemplo: \n\nOs desenvolvedores resolveram _fazer o merge_ a branch `funcionalidade_a` na `funcionalidade_b`, para tal eles:\n\n* Mudaram para a branch `funcionalidade_b`. `git checkout funcionalidade_b`;\n* `On branch funcionalidade_b`\n* Realizaram o merge de a --> b. `git merge funcionalidade_a` Isso gerou um commit de merge. Isso pode gerar um pouco de polui\u00e7\u00e3o no log de commits. \n\n## Rebase  O rebase \u00e9 uma alternativa ao merge. Tamb\u00e9m mesclando o conte\u00fado de duas branches, mas o rebase insere os commits de modo cronol\u00f3gico no hist\u00f3rico de commits. O rebase tamb\u00e9m n\u00e3o deixa uma mensagem de commit, uma das vantagens de usar-se o rebase. \n\nNo uso do rebase voc\u00ea adicionar\u00e1 os commits da branch `funcionalidade_a` na `funcionalidade_b` da seguinte maneira: \n\n* V\u00e1 para a branch `funcionalidade_a`\n* execute: `git rebase funcionalidade_b`\n\nisso adicionara os commits que est\u00e3o em `a` mas n\u00e3o est\u00e3o em `b` em `funcionalidade_b` de forma que voc\u00ea poder\u00e1 realizar um `fast-forward merge` em `b`\n\n* `git checkout funcionalidade_b`\n* `git merge funcionalidade_a`\n\n# Plataforma de Exemplo Para aprender mais sobre git e exercitar, acesse o [Codecademy](https://www.codecademy.com/pt-BR/learn/learn-git). Para exercitar e fixar os conhecimentos de Git, utilize a plataforma [Learn Git Branching](http://learngitbranching.js.org/) Para treinar Git de maneira interativa, um otimo estilo de jogo [Aprenda Git](http://aprenda.vidageek.net/aprenda/git)\nou\n[Git Real Code School](http://gitreal.codeschool.com/)\n\n# Refer\u00eancias\n\n* [Controlando vers\u00f5es com Git e GitHub - Casa do C\u00f3digo](https://github.com/brunoipjg/myEbooks/blob/master/Controlando%20vers%C3%B5es%20com%20Git%20e%20GitHub%20-%20Casa%20do%20Codigo.pdf)\n* [Ferramentas do Git - Fazendo Stash](https://git-scm.com/book/pt-br/v1/Ferramentas-do-Git-Fazendo-Stash)", 
            "title": "Instalando e configurando o Git"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-Ambiente/", 
            "text": "Tutorial de Instala\u00e7\u00e3o do Ionic\n\n\nO tutorial leva em considera\u00e7\u00e3o o sistema operacional Ubuntu, na vers\u00e3o 16.04. Outras vers\u00f5es do Ubuntu devem funcionar bem. Se voc\u00ea est\u00e1 usando Debian, o passo a passo n\u00e3o dever\u00e1 ser muito diferente.\n\nAcessar o site do \nNode.js\n, e fazer o download da ferramenta. A vers\u00e3o v4.5.0 LTS servir\u00e1 bem.  \n\n\nDescompactar o tar em uma pasta de sua prefer\u00eancia. Eu recomendo a sua home (/home/nome_de_usuario), e o tutorial assume que a pasta estar\u00e1 l\u00e1.  \n\n\nAbra o terminal de seu sistema, e se certifique de que ele est\u00e1 na sua home (digite cd e aperte enter), e ent\u00e3o abra o arquivo .bashrc com seu editor de textos favorito. Neste caso, usou-se o gedit:  \n\n\n\n\ngedit .bashrc  \n\n\n\n\n(Note que h\u00e1 de fato um ponto antes do nome do arquivo).\n\n\nNo arquivo que se abrir\u00e1, adicione na \u00fatima linha:  \n\n\n\n\nPATH=\"/home/seu_usuario/node-v4.5.0-linux-x64/bin/:$PATH\"  \n\n\n\n\nNota: o nome da pasta do Node pode ser diferente, dependendo de seu Sistema Operacional.\n\n\nSalve e feche o arquivo.\n\n\nNeste ponto, voc\u00ea precisaria fazer logout e login. Contudo, se n\u00e3o quiser faz\u00ea-lo, digite no terminal:  \n\n\n\n\nsource .bashrc  \n\n\n\n\nNota: este comando tamb\u00e9m deve ser realizado na sua home. Digite cd e aperte enter no terminal para se certificar de que est\u00e1 l\u00e1.\n\n\nNote, por\u00e9m, que ser\u00e1 necess\u00e1rio fazer isso em cada novo terminal que abrir, at\u00e9 o logout ser realizado. Agora, para se certificar de que deu tudo certo, digite:  \n\n\n\n\nnode -v  \n\n\n\n\ne  \n\n\n\n\nnpm -v  \n\n\n\n\nAs vers\u00f5es destas duas aplica\u00e7\u00f5es devem ser retornadas a voc\u00ea.\n\n\nEm seguida, instale o cordova:\n\n\n\n\nnpm install -g cordova\n\n\n\n\nDeve demorar alguns minutos. Talvez ele retorne um ou dois warnings.\n\n\nPara se certificar de que deu tudo certo, digite:\n\n\n\n\ncordova -v\n\n\n\n\nTalvez ele fa\u00e7a uma pergunta sobre envio de estat\u00edsticas an\u00f4nimas. Fica ao seu crit\u00e9rio se voc\u00ea quer tornar o mundo um lugar melhor ou n\u00e3o.\n\n\nAp\u00f3s instalado o cordova, digite:\n\n\n\n\nnpm install -g ionic\n\n\n\n\nNota: Caso se deseje utilizar a vers\u00e3o 1 do Ionic, que n\u00e3o utiliza o Angular 2, digite:\n\n\n\n\nnpm install -g ionic@1.7.14\n\n\n\n\nEle deve instalar sem problemas tamb\u00e9m. Para se certificar, digite:\n\n\n\n\nionic -v\n\n\n\n\nInstalado o ionic, agora voc\u00ea pode criar o primeiro app:\n\n\n\n\nionic start nome_do_seu_projeto tabs\n\n\n\n\n\"tabs\" utiliza um template de demonstra\u00e7\u00e3o do framework.\n\n\nV\u00e1 para o diret\u00f3rio do projeto criado:\n\n\n\n\ncd nome_do_seu_projeto\n\n\n\n\nE digite ent\u00e3o:\n\n\n\n\nionic serve --lab\n\n\n\n\nEle talvez retorne m\u00faltiplos endere\u00e7os de servidor que voc\u00ea pode escolher. Digite 1, por exemplo, para escolher um. \n\n\nEm seguida, basta abrir este endere\u00e7o no navegador (na verdade, ele deve abrir sozinho).", 
            "title": "Tutorial de Instala\u00e7\u00e3o do Ionic"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-Ambiente/#tutorial-de-instalacao-do-ionic", 
            "text": "O tutorial leva em considera\u00e7\u00e3o o sistema operacional Ubuntu, na vers\u00e3o 16.04. Outras vers\u00f5es do Ubuntu devem funcionar bem. Se voc\u00ea est\u00e1 usando Debian, o passo a passo n\u00e3o dever\u00e1 ser muito diferente. \nAcessar o site do  Node.js , e fazer o download da ferramenta. A vers\u00e3o v4.5.0 LTS servir\u00e1 bem.    Descompactar o tar em uma pasta de sua prefer\u00eancia. Eu recomendo a sua home (/home/nome_de_usuario), e o tutorial assume que a pasta estar\u00e1 l\u00e1.    Abra o terminal de seu sistema, e se certifique de que ele est\u00e1 na sua home (digite cd e aperte enter), e ent\u00e3o abra o arquivo .bashrc com seu editor de textos favorito. Neste caso, usou-se o gedit:     gedit .bashrc     (Note que h\u00e1 de fato um ponto antes do nome do arquivo).  No arquivo que se abrir\u00e1, adicione na \u00fatima linha:     PATH=\"/home/seu_usuario/node-v4.5.0-linux-x64/bin/:$PATH\"     Nota: o nome da pasta do Node pode ser diferente, dependendo de seu Sistema Operacional.  Salve e feche o arquivo.  Neste ponto, voc\u00ea precisaria fazer logout e login. Contudo, se n\u00e3o quiser faz\u00ea-lo, digite no terminal:     source .bashrc     Nota: este comando tamb\u00e9m deve ser realizado na sua home. Digite cd e aperte enter no terminal para se certificar de que est\u00e1 l\u00e1.  Note, por\u00e9m, que ser\u00e1 necess\u00e1rio fazer isso em cada novo terminal que abrir, at\u00e9 o logout ser realizado. Agora, para se certificar de que deu tudo certo, digite:     node -v     e     npm -v     As vers\u00f5es destas duas aplica\u00e7\u00f5es devem ser retornadas a voc\u00ea.  Em seguida, instale o cordova:   npm install -g cordova   Deve demorar alguns minutos. Talvez ele retorne um ou dois warnings.  Para se certificar de que deu tudo certo, digite:   cordova -v   Talvez ele fa\u00e7a uma pergunta sobre envio de estat\u00edsticas an\u00f4nimas. Fica ao seu crit\u00e9rio se voc\u00ea quer tornar o mundo um lugar melhor ou n\u00e3o.  Ap\u00f3s instalado o cordova, digite:   npm install -g ionic   Nota: Caso se deseje utilizar a vers\u00e3o 1 do Ionic, que n\u00e3o utiliza o Angular 2, digite:   npm install -g ionic@1.7.14   Ele deve instalar sem problemas tamb\u00e9m. Para se certificar, digite:   ionic -v   Instalado o ionic, agora voc\u00ea pode criar o primeiro app:   ionic start nome_do_seu_projeto tabs   \"tabs\" utiliza um template de demonstra\u00e7\u00e3o do framework.  V\u00e1 para o diret\u00f3rio do projeto criado:   cd nome_do_seu_projeto   E digite ent\u00e3o:   ionic serve --lab   Ele talvez retorne m\u00faltiplos endere\u00e7os de servidor que voc\u00ea pode escolher. Digite 1, por exemplo, para escolher um.   Em seguida, basta abrir este endere\u00e7o no navegador (na verdade, ele deve abrir sozinho).", 
            "title": "Tutorial de Instala\u00e7\u00e3o do Ionic"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/", 
            "text": "Sum\u00e1rio\n\n\n1. Introdu\u00e7\u00e3o\n\n\n2. Circle CI\n \n\n\n3. Script para checar se atingiu cobertura \n \n\n\n4. Gradle\n \n\n\n5. Fastlane\n \n\n\n\n\n1. Introdu\u00e7\u00e3o\n\n\nEste documento descreve o plano de gerenciamento de configura\u00e7\u00e3o de mudan\u00e7as e tem como objetivo deixar todos os integrantes do projeto por dentro de como ocorrer\u00e3o as configura\u00e7\u00f5es de ambiente, as rotinas e padr\u00f5es de nomenclatura realizadas durante as mudan\u00e7as do mesmo.\n\n\n\n2. Circle CI\n\n\nCircleCI\n foi a ferramenta de integra\u00e7\u00e3o cont\u00ednua decidida por ser utilizada. Sua configura\u00e7\u00e3o \u00e9 feita atrav\u00e9s de um arquivo \n.yml\n na pasta raiz do projeto.\nAs builds geradas pela ferramenta podem ser acessadas neste \nlink\n.\n\n\n#Install android build tools, platforms\n#Supported versions here https://circleci.com/docs/android\nmachine:\n  ruby:\n    version: 2.3.0\n\ndependencies:\n  pre:\n    - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-23.0.3,android-23,extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository\n    - gem install fastlane --verbose\n\n  override:\n    - ANDROID_HOME=/usr/local/android-sdk-linux ./gradlew dependencies\n\ntest:\n  pre:\n        # start the emulator\n      - emulator -avd circleci-android22 -no-audio -no-window:\n          background: true\n          parallel: true\n        # wait for it to have booted\n      - circle-android wait-for-boot\n\n  override:\n    #run unit tests\n    - ./gradlew test\n    #run code coverage\n    - ./gradlew jacocoTestReport\n    # run tests  against the emulator.\n    # - ./gradlew connectedCheck\n    # copy the build outputs to artifacts\n    - cp -r ./app/build/outputs $CIRCLE_ARTIFACTS/\n    # copy the test results to the test results directory.\n    - cp -r ./app/build/reports/* $CIRCLE_TEST_REPORTS/\n\n    - sudo apt-get install dc\n\n    - chmod +x ./CheckCoverageGoal.sh\n\n    - ./CheckCoverageGoal.sh\n\n  post:\n    - bash \n(curl -s https://codecov.io/bash)\n\n\ndeployment:\n  production: \n    branch: production\n    commands:\n      - fastlane release\n\n  beta:\n    branch: beta\n    commands:\n      - fastlane beta\n\n\n\n\n3. Script para checar se atingiu cobertura\n\n\n#!/bin/bash\n\ncoverageExpected=\n30.0\n\n\n# Get the coverage value from the coverage report\ncoverageResult=$(grep -oE '[0-9.]+%' ./app/build/reports/jacoco/jacocoTestFreeDebugUnitTestReport/html/index.html | head -n1)\ncoverageResult=\n${coverageResult//%}\n\n\necho \nCoverage expected $coverageExpected. Coverage Result $coverageResult \n\n\n# If the coverage requirements was satisfied\nif ! echo \n$coverageResult $coverageExpected -p\n | dc | grep \n /dev/null ^-; then\n    echo \nCoverage goal was satisfied\n\n        exit 0\n    else\n    echo \nError: Coverage goal was not satisfied\n\n        exit 1\nfi\n\n\n\n\n\n4. Gradle\n\n\nTask gradle\n para configurar o identificador da vers\u00e3o do \napk\n que ser\u00e1 enviado e os certificados de cosntrucao do \n.apk\n. A vers\u00e3o est\u00e1 sendo identificada de acordo com a data atual para que sempre automaticamente ao criar um \napk\n a vers\u00e3o atual seja maior que a antiga.\n\n\napply plugin: 'com.android.application'\napply plugin: 'jacoco-android'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \n23.0.3\n\n\n    //SETUP THE CERTIFICATE TO GENERATE A SIGNED .apk\n    signingConfigs {\n           release {\n               storeFile file(\nrelease.jks\n)\n               storePassword \n123456\n\n               keyAlias \nCidadeDemocratica\n\n               keyPassword \n123456\n\n           }\n    }\n\n    //SETUP THE VERSION NAME WITH THE CURRENT DATE TIMESTAMP\n    defaultConfig {\n        applicationId \ncom.cidadedemocratica.android\n\n        minSdkVersion 16\n        targetSdkVersion 23\n        versionName \n${getVersionNameTimestamp()}\n\n        versionCode getVersionCodeTimestamp()\n        testApplicationId \ncom.cidadedemocratica.android.test\n\n        testInstrumentationRunner \ncom.cidadedemocratica.android.JUnitJacocoTestRunner\n\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.release\n        }\n        debug {\n            testCoverageEnabled true\n        }\n    }\n\n    testOptions {\n        unitTests.returnDefaultValues = true\n    }\n\n    productFlavors {\n        free {}\n    }\n\n    jacocoAndroidUnitTestReport {\n        excludes += ['**/External**/','**/ReportController**', '**/controller/**', '**/view/**']\n    }\n    configurations.all {\n        resolutionStrategy.force 'com.android.support:support-annotations:23.1.0'\n    }\n\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n\n    testCompile 'org.json:json:20140107'\n    androidTestCompile 'junit:junit:4.12'\n    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2'){\n        exclude module: 'support-annotations'\n        exclude module: 'support-v4'\n        exclude module: 'support-v13'\n        exclude module: 'recyclerview-v7'\n    }\n    androidTestCompile 'com.android.support.test:runner:0.4.1'\n    androidTestCompile 'com.android.support.test:rules:0.4.1'\n\n    testCompile 'junit:junit:4.12'\n\n    compile 'com.android.support:appcompat-v7:23.4.0'\n    compile 'com.loopj.android:android-async-http:1.4.9'\n    compile 'com.android.support:support-v4:23.4.0'\n    compile 'com.google.firebase:firebase-messaging:9.8.0'\n}\n\n    //GET VERSION TIME STAMP\ndef getVersionNameTimestamp() {\n    return new Date().format('yy.MM.ddHHmm')\n}\n\ndef getVersionCodeTimestamp() {\n    def date = new Date()\n    def formattedDate = date.format('yyMMddHHmm')\n    def code = formattedDate.toInteger()\n    println sprintf(\nVersionCode: %d\n, code)\n    return code\n}\n\napply plugin: 'com.google.gms.google-services'\n\n\n\n\n\nAntes de configurar a task, voce deve adiquirir o serviceAccountEmail e o jsonFile como descrito no \n\nTutorial de Deploy Automatico na Google Play PDF\n.\n\n\n5. Fastlane\n\n\nFastfile\n com a configura\u00e7\u00e3o do fastlane ferramenta para organizar \nscripts\n de automa\u00e7\u00e3o em simples comandos:  \n\n\n# Update this, if you use features of a newer version\nfastlane_version \n1.105.3\n\n\ndefault_platform :android\n\nplatform :android do\n  before_all do\n    # ENV[\nSLACK_URL\n] = \nhttps://hooks.slack.com/services/...\n\n  end\n\n  desc \nRuns all the tests\n\n  lane :test do\n    gradle(task: \ntest\n)\n  end\n\n  desc \nSubmit a new Beta Build\n\n  lane :beta do\n   gradle(task: 'clean')\n   gradle(task: \nassembleRelease\n)\n   supply(track: \nbeta\n, apk: \napp/build/outputs/apk/app-free-release.apk\n, json_key: \napp/play-release.json\n, package_name: \ncom.cidadedemocratica.android\n)\n   slack(message: 'Successfully distributed a new beta build', slack_url:\nhttps://hooks.slack.com/services/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\n)\nend\n\n  desc \nDeploy a new version to the Google Play\n\n  lane :deploy do\n    gradle(task: 'clean')\n    gradle(task: \nassembleRelease\n)\n    supply(apk: \napp/build/outputs/apk/app-free-release.apk\n, json_key: \napp/play-release.json\n, package_name: \ncom.cidadedemocratica.android\n)\n    slack(slack_url: \nhttps://hooks.slack.com/services/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\n, message: 'Successfully distributed a new build in Play Store')\n\n  end\nend\n\n\n\n\nBasicamente, o \nCircleCI\n gera a \nbuild\n do produto, executando os testes unit\u00e1rios e de aceita\u00e7\u00e3o, checa se atingiu o limite aceit\u00e1vel de cobertura de testes, comunica a ferramenta de cobertura de teste enviando a cobertura atual do \nsoftware\n.\n\n\n\nNo caso das \nbranchs production\n e \nbeta\n, ao criar uma \nbranch\n com o nome \nproduction\n ou com nome \nbeta\n, ele tamb\u00e9m envia para \ndeploy\n no respectivo contexto.", 
            "title": "Android Integra\u00e7\u00e3o cont\u00ednua com Circle CI"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#sumario", 
            "text": "1. Introdu\u00e7\u00e3o  2. Circle CI    3. Script para checar se atingiu cobertura     4. Gradle    5. Fastlane", 
            "title": "Sum\u00e1rio"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#1-introducao", 
            "text": "Este documento descreve o plano de gerenciamento de configura\u00e7\u00e3o de mudan\u00e7as e tem como objetivo deixar todos os integrantes do projeto por dentro de como ocorrer\u00e3o as configura\u00e7\u00f5es de ambiente, as rotinas e padr\u00f5es de nomenclatura realizadas durante as mudan\u00e7as do mesmo.", 
            "title": "1. Introdu\u00e7\u00e3o"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#2-circle-ci", 
            "text": "CircleCI  foi a ferramenta de integra\u00e7\u00e3o cont\u00ednua decidida por ser utilizada. Sua configura\u00e7\u00e3o \u00e9 feita atrav\u00e9s de um arquivo  .yml  na pasta raiz do projeto.\nAs builds geradas pela ferramenta podem ser acessadas neste  link .  #Install android build tools, platforms\n#Supported versions here https://circleci.com/docs/android\nmachine:\n  ruby:\n    version: 2.3.0\n\ndependencies:\n  pre:\n    - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-23.0.3,android-23,extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository\n    - gem install fastlane --verbose\n\n  override:\n    - ANDROID_HOME=/usr/local/android-sdk-linux ./gradlew dependencies\n\ntest:\n  pre:\n        # start the emulator\n      - emulator -avd circleci-android22 -no-audio -no-window:\n          background: true\n          parallel: true\n        # wait for it to have booted\n      - circle-android wait-for-boot\n\n  override:\n    #run unit tests\n    - ./gradlew test\n    #run code coverage\n    - ./gradlew jacocoTestReport\n    # run tests  against the emulator.\n    # - ./gradlew connectedCheck\n    # copy the build outputs to artifacts\n    - cp -r ./app/build/outputs $CIRCLE_ARTIFACTS/\n    # copy the test results to the test results directory.\n    - cp -r ./app/build/reports/* $CIRCLE_TEST_REPORTS/\n\n    - sudo apt-get install dc\n\n    - chmod +x ./CheckCoverageGoal.sh\n\n    - ./CheckCoverageGoal.sh\n\n  post:\n    - bash  (curl -s https://codecov.io/bash)\n\n\ndeployment:\n  production: \n    branch: production\n    commands:\n      - fastlane release\n\n  beta:\n    branch: beta\n    commands:\n      - fastlane beta", 
            "title": "2. Circle CI"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#3-script-para-checar-se-atingiu-cobertura", 
            "text": "#!/bin/bash\n\ncoverageExpected= 30.0 \n\n# Get the coverage value from the coverage report\ncoverageResult=$(grep -oE '[0-9.]+%' ./app/build/reports/jacoco/jacocoTestFreeDebugUnitTestReport/html/index.html | head -n1)\ncoverageResult= ${coverageResult//%} \n\necho  Coverage expected $coverageExpected. Coverage Result $coverageResult  \n\n# If the coverage requirements was satisfied\nif ! echo  $coverageResult $coverageExpected -p  | dc | grep   /dev/null ^-; then\n    echo  Coverage goal was satisfied \n        exit 0\n    else\n    echo  Error: Coverage goal was not satisfied \n        exit 1\nfi", 
            "title": "3. Script para checar se atingiu cobertura"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#4-gradle", 
            "text": "Task gradle  para configurar o identificador da vers\u00e3o do  apk  que ser\u00e1 enviado e os certificados de cosntrucao do  .apk . A vers\u00e3o est\u00e1 sendo identificada de acordo com a data atual para que sempre automaticamente ao criar um  apk  a vers\u00e3o atual seja maior que a antiga.  apply plugin: 'com.android.application'\napply plugin: 'jacoco-android'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion  23.0.3 \n\n    //SETUP THE CERTIFICATE TO GENERATE A SIGNED .apk\n    signingConfigs {\n           release {\n               storeFile file( release.jks )\n               storePassword  123456 \n               keyAlias  CidadeDemocratica \n               keyPassword  123456 \n           }\n    }\n\n    //SETUP THE VERSION NAME WITH THE CURRENT DATE TIMESTAMP\n    defaultConfig {\n        applicationId  com.cidadedemocratica.android \n        minSdkVersion 16\n        targetSdkVersion 23\n        versionName  ${getVersionNameTimestamp()} \n        versionCode getVersionCodeTimestamp()\n        testApplicationId  com.cidadedemocratica.android.test \n        testInstrumentationRunner  com.cidadedemocratica.android.JUnitJacocoTestRunner \n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.release\n        }\n        debug {\n            testCoverageEnabled true\n        }\n    }\n\n    testOptions {\n        unitTests.returnDefaultValues = true\n    }\n\n    productFlavors {\n        free {}\n    }\n\n    jacocoAndroidUnitTestReport {\n        excludes += ['**/External**/','**/ReportController**', '**/controller/**', '**/view/**']\n    }\n    configurations.all {\n        resolutionStrategy.force 'com.android.support:support-annotations:23.1.0'\n    }\n\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n\n    testCompile 'org.json:json:20140107'\n    androidTestCompile 'junit:junit:4.12'\n    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'\n    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2'){\n        exclude module: 'support-annotations'\n        exclude module: 'support-v4'\n        exclude module: 'support-v13'\n        exclude module: 'recyclerview-v7'\n    }\n    androidTestCompile 'com.android.support.test:runner:0.4.1'\n    androidTestCompile 'com.android.support.test:rules:0.4.1'\n\n    testCompile 'junit:junit:4.12'\n\n    compile 'com.android.support:appcompat-v7:23.4.0'\n    compile 'com.loopj.android:android-async-http:1.4.9'\n    compile 'com.android.support:support-v4:23.4.0'\n    compile 'com.google.firebase:firebase-messaging:9.8.0'\n}\n\n    //GET VERSION TIME STAMP\ndef getVersionNameTimestamp() {\n    return new Date().format('yy.MM.ddHHmm')\n}\n\ndef getVersionCodeTimestamp() {\n    def date = new Date()\n    def formattedDate = date.format('yyMMddHHmm')\n    def code = formattedDate.toInteger()\n    println sprintf( VersionCode: %d , code)\n    return code\n}\n\napply plugin: 'com.google.gms.google-services'  Antes de configurar a task, voce deve adiquirir o serviceAccountEmail e o jsonFile como descrito no  Tutorial de Deploy Automatico na Google Play PDF .", 
            "title": "4. Gradle"
        }, 
        {
            "location": "/Android---Circle-Continuous-Integration-(Unit-Tests,-UI-Tests,-Coverage-build-pass-rule,-beta-deploy-and-production-deploy-automated)/#5-fastlane", 
            "text": "Fastfile  com a configura\u00e7\u00e3o do fastlane ferramenta para organizar  scripts  de automa\u00e7\u00e3o em simples comandos:    # Update this, if you use features of a newer version\nfastlane_version  1.105.3 \n\ndefault_platform :android\n\nplatform :android do\n  before_all do\n    # ENV[ SLACK_URL ] =  https://hooks.slack.com/services/... \n  end\n\n  desc  Runs all the tests \n  lane :test do\n    gradle(task:  test )\n  end\n\n  desc  Submit a new Beta Build \n  lane :beta do\n   gradle(task: 'clean')\n   gradle(task:  assembleRelease )\n   supply(track:  beta , apk:  app/build/outputs/apk/app-free-release.apk , json_key:  app/play-release.json , package_name:  com.cidadedemocratica.android )\n   slack(message: 'Successfully distributed a new beta build', slack_url: https://hooks.slack.com/services/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 )\nend\n\n  desc  Deploy a new version to the Google Play \n  lane :deploy do\n    gradle(task: 'clean')\n    gradle(task:  assembleRelease )\n    supply(apk:  app/build/outputs/apk/app-free-release.apk , json_key:  app/play-release.json , package_name:  com.cidadedemocratica.android )\n    slack(slack_url:  https://hooks.slack.com/services/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 , message: 'Successfully distributed a new build in Play Store')\n\n  end\nend  Basicamente, o  CircleCI  gera a  build  do produto, executando os testes unit\u00e1rios e de aceita\u00e7\u00e3o, checa se atingiu o limite aceit\u00e1vel de cobertura de testes, comunica a ferramenta de cobertura de teste enviando a cobertura atual do  software .  No caso das  branchs production  e  beta , ao criar uma  branch  com o nome  production  ou com nome  beta , ele tamb\u00e9m envia para  deploy  no respectivo contexto.", 
            "title": "5. Fastlane"
        }, 
        {
            "location": "/Configura\u00e7\u00e3o-de-Ambiente-para-React-Native/", 
            "text": "Para realizar a configura\u00e7\u00e3o do ambiente necess\u00e1rio para desenvolver o front-end da aplica\u00e7\u00e3o pode-se seguir os seguintes passos:\n\n\n\n Primeiramente vamos verificar se o Node (tamb\u00e9m \u00e9 necess\u00e1rio possuir o npm, que vem junto a instala\u00e7\u00e3o do Node) est\u00e1 instalado no seu ambiente, caso n\u00e3o esteja, siga os passos que seguem, caso voc\u00ea j\u00e1 tenha alguma vers\u00e3o do Node j\u00e1 instalada no seu ambiente, pule para a cria\u00e7\u00e3o do projeto em React Native no passo 9. \n\n\n\nOBS:\n Na data atual 05/11/2017, o React Native n\u00e3o est\u00e1 funcionando corretamente nas vers\u00f5es do Node 8.0 em diante. Recomenda-se a instala\u00e7\u00e3o da vers\u00e3o 6.11.5.\n\n\nPasso 1\n\nCheque se o \nNode\n j\u00e1 est\u00e1 instalado em sua m\u00e1quina.\n\n\n$ node --version\n\n\nPasso 2\n\nCaso n\u00e3o esteja instalado em sua m\u00e1quina, fa\u00e7a o download acessando o site do \nNode.js\n, e fazendo o download da ferramenta.\n\n\nCaso a vers\u00e3o o Node apresente problemas com o ReactNative posteriormente, tente retorn\u00e1-la a vers\u00e3o 6.11.5 atrav\u00e9s deste \nlink\n. \n\n\n\nCaso a vers\u00e3o do npm apresente problemas com o ReactNative posteriormente, tente retorn\u00e1-la a vers\u00e3o 3.10.10 atrav\u00e9s deste \nlink\n. \n\n\n\nPasso 3\n\nDescompacte o \n.tar\n em uma pasta de sua prefer\u00eancia. Recomenda-se a sua home, e o tutorial leva em considera\u00e7\u00e3o que a pasta estar\u00e1 l\u00e1.\n\n\nPasso 4\n\nRenomeie a pasta descompactada para um nome mais simples como \"node\".\n\n\nPasso 5\n\nAbra seu terminal e v\u00e1 para a home, utilize o comando abaixo para se certificar de que estar\u00e1 l\u00e1:\n\n\n$ cd\n\n\nPasso 6\n\nAbra o arquivo \n.bashrc\n com seu editor de textos favorito. Nesse caso usou-se o sublime:\n\n\n$ subl .bashrc\n\n\nPasso 7\n\nNo arquivo que abrir\u00e1, digite no fim:\n\n\nPATH=\"/home/SEU_USU\u00c1RIO/node/bin/:$PATH\"\n\n\nOBS.:\n Troque SEU_USU\u00c1RIO, pelo seu nome de usu\u00e1rio na sua m\u00e1quina.\n\n\nSalve e feche o arquivo.\n\n\nPasso 7\n\nNeste ponto, voc\u00ea precisaria fazer logout e login. Contudo, se n\u00e3o quiser faz\u00ea-lo, digite no terminal:\n\n\nsource .bashrc\n\n\nNote, por\u00e9m, que dever\u00e1 fazer isso em cada novo terminal que abrir, at\u00e9 voc\u00ea fazer logout e login.\n\n\nPasso 8\n\nAgora, para se certificar de que deu tudo certo, digite:\n\n\nnode --version\n  \n\n\ne  \n\n\nnpm --version\n  \n\n\nAs vers\u00f5es destas duas aplica\u00e7\u00f5es devem ser retornadas a voc\u00ea.\n\n\nPasso 9 - Instala\u00e7\u00e3o React-Native\n\nInstale a ferramenta \"create-react-native-app\" atrav\u00e9s de seu terminal:\n\n\nnpm install -g create-react-native-app\n\n\nPasso 10\n\nCrie uma pasta para os eu projeto:\n\n\nmkdir projeto\n  \n\n\nEntre na pasta:\n\n\ncd projeto\n\n\nCrie seu projeto:\n\n\ncreate-react-native-app NomeDoSeuProjeto\n\n\nPasso 11\n\nPronto! Seu ambiente para desenvolvimento em React Native est\u00e1 configurado e com um projeto criado. Para rodar seu projeto escreva no terminal:\n\n\nnpm start\n  \n\n\nEste comando pode demorar um pouco, e ap\u00f3s sua execu\u00e7\u00e3o, aparecer\u00e1 um QRCode em seu terminal.\n\n\nPasso 12\n\nPara utilizar o QRCode e testar seu projeto, instale a aplica\u00e7\u00e3o \nEXPO\n (Mais detalhes sobre o EXPO no \nREADME\n do projeto) em seu aparelho mobile (Android ou IOS) e leia o QRCode, ap\u00f3s alguns minutos, seu projeto estar\u00e1 rodando na tela do seu celular e voc\u00ea poder\u00e1 come\u00e7ar a modificar seu software e ver os resultados simultaneamente.\n\n\nOBS:\n Na data atual 16/03/2018, o React Native apresentou problemas por conta do \nJDK\n. Recomenda-se que tenha vers\u00e3o 8 do JDK, onde at\u00e9 o momento funcionou sem problemas durante o uso do React.", 
            "title": "Configura\u00e7\u00e3o de Ambiente para React Native"
        }, 
        {
            "location": "/Rails/", 
            "text": "Configura\u00e7\u00e3o de Ambiente\n\n\nInstalando Ruby on Rails no Ubuntu\n\n\nUsando RVM (Ruby Version Manager)\n\n\nO RVM \u00e9 uma ferramenta muito popular e bem suportada pela comunidade, utilizada para facilitar a mudan\u00e7a entre as vers\u00f5es do Ruby e gerenciar as gemas. Convenientemente o RVM pode ser utilizado para instalar o Ruby.\n\n\n\nPrepara\u00e7\u00e3o do sistema\n\n\nPara a instala\u00e7\u00e3o do Ruby on Rails, \u00e9 necess\u00e1rio uma prepara\u00e7\u00e3o pr\u00e9via na sua m\u00e1quina. \nTamb\u00e9m \u00e9 necess\u00e1rio ter acesso de superusu\u00e1rio (root) para atualizar os softwares do sistema.\n\n\n\nPrimeiramente atualize o gerenciador de pacotes:\n\n\n$ sudo apt-get update\n\n\nInstale o \nCURL\n:\n\n\n$ sudo apt-get install curl\n\n\nInstale Ruby usando RVM\n\n\nUse RVM, para instalar o Ruby e gerenciar suas vers\u00f5es do Rails.\n\n\nSe houver uma vers\u00e3o antiga do Ruby instalada na m\u00e1quina, n\u00e3o h\u00e1 necessidade de remov\u00ea-la. RVM deixar\u00e1 a vers\u00e3o do sistema como est\u00e1 e usar\u00e1 o SHELL para interceptar qualquer chamada ao Ruby. \n\n\n\nO \nsite do RVM\n explica como instalar o RVM. Est\u00e1 \u00e9 a forma mais simples:\n\n\n$ \\curl -L https://get.rvm.io | bash -s stable --ruby\n\n\nA flag \n--ruby\n instalar\u00e1 a vers\u00e3o mais recente do Ruby.\n\n\nSe j\u00e1 existe alguma vers\u00e3o do RVM\n\n\nSe voc\u00ea j\u00e1 tem uma vers\u00e3o do RVM instalado, atualize para a \u00faltima vers\u00e3o e instale o Ruby:\n\n\n$ rvm get stable --autolibs=enable\n\n\n$ rvm install ruby\n\n\n$ rvm --default use ruby-2.3.1\n\n\nNeste exemplo utiliza-se a vers\u00e3o 2.3.1 do Ruby, mas pode ser modificado para outra vers\u00e3o se necess\u00e1rio.\n\n\nInstale Node.js\n\n\nPara desenvolvimento no Ubuntu Linux \u00e9 melhor instalar o ambiente javascript Node.js server-side.\n\n\n$ sudo apt-get install nodejs\n\n\ne configure o \n$PATH\n.\n\n\nSe n\u00e3o tiver o Node.js instalado, ser\u00e1 necess\u00e1rio adicionar ao Gemfile para cada aplica\u00e7\u00e3o Rails que for criada:\n\n\ngem 'therubyracer'\n\n\nVerifique o Gerenciador de Gems\n\n\nRubyGems \u00e9 o gerenciador de Gems no Ruby.\n\n\nVerifique a vers\u00e3o do gerenciador instalado com o seguinte comando:\n\n\n$ gem -v\n\n\n2.3.1\n\n\nPara atualizar utilize \n$ gem update --system\n.\n\n\nInstale o Bundler\n\n\nBundler \u00e9 uma ferramenta essencial para gerenciar as gems quando se est\u00e1 desenvolvendo e rodando aplica\u00e7\u00f5es Rails.\n\n\n$ gem install bundler\n\n\nOp\u00e7\u00f5es de instala\u00e7\u00e3o Rails\n\n\nVerifique a vers\u00e3o do Rails atual:\n\n\n$ rails -v\n\n\nRails 5.0.0\n\n\nInstale ent\u00e3o o rails:\n\n\n$ gem install rails\n\n\ne verifique sua vers\u00e3o ap\u00f3s a instala\u00e7\u00e3o: \n\n\n$ rails -v\n\n\nDesta forma ser\u00e1 instalado a \u00faltima vers\u00e3o est\u00e1vel, se for necess\u00e1ria uma vers\u00e3o espec\u00edfica utilize o comando a seguir.\n\n\nPor exemplo, se for necess\u00e1ria a vers\u00e3o do Rails 3.2.18:\n\n\n$ gem install rails --version=3.2.18\n\n\n$ rails -v\n\n\nFonte de informa\u00e7\u00e3o: \nSite RAILSAPPS\n\n\nArquitetura MVC Ruby on Rails\n\n\n\n\nModel\n: Cont\u00e9m dados ou Informa\u00e7\u00f5es sobre a aplica\u00e7\u00e3o, al\u00e9m do estado da mesma, juntamente com as regras do neg\u00f3cio;\n  \n\n\nView\n: Interface para ver e modificar os dados/informa\u00e7\u00f5es. \u00c9 passiva \u2013 o que quer dizer que n\u00e3o processa nada;\n   \n\n\nController\n: Realiza opera\u00e7\u00f5es ou manipula\u00e7\u00f5es nos dados/informa\u00e7\u00f5es interagindo com a Model e interpreta os eventos realizados na View.\n   \n\n\n\n\nA \nModel\n representar\u00e1 as informa\u00e7\u00f5es ou dados abstra\u00eddos do mundo real, de modo que esta tamb\u00e9m n\u00e3o depende da \nController\n ou \nView\n. A \nView\n mostrar\u00e1 o dados contidos na \nModel\n e pode tamb\u00e9m obter e/ou atualizar os dados da mesma e envia as a\u00e7\u00f5es executadas pelo usu\u00e1rio para a \nController\n. A \nController\n prover\u00e1 os dados contidos na \nModel\n para a \nView\n, al\u00e9m de interpretar as a\u00e7\u00f5es do usu\u00e1rio \u2013 como clicar em um bot\u00e3o, funciona como um \nlink\n entre o usu\u00e1rio e o pr\u00f3prio sistema em si.\n\n\n\nWebSockets\n\n\nO que \u00e9?\n\n\nWebSockets \u00e9 uma tecnologia avan\u00e7ada que torna poss\u00edvel abrir uma comunica\u00e7\u00e3o interativa entre o navegador do usu\u00e1rio e o servidor, criando um canal bidirecional para a comunica\u00e7\u00e3o entre eles. Esta tecnologia \u00e9 a chave para o desenvolvimento de aplica\u00e7\u00f5es em tempo real.\n\n\n\nWebSockets VS Protocolo HTTP\n\n\nA tecnologia de WebSockets veio para satisfazer uma demanda mundial: a \ninstantaneidade\n das informa\u00e7\u00f5es. Desta forma, o paradigma \"Requisi\u00e7\u00e3o-Resposta\" entre usu\u00e1rio e servidor do HTTP torna-se obsoleto em vista das exig\u00eancias modernas.\n\n\n\nWebsockets utilizam um canal para manter a conex\u00e3o aberta, o \nAction Cable\n. Assim, as requisi\u00e7\u00f5es dos usu\u00e1rios e servidores podem ser efetuadas em tempo real.\n\n\n\nDOJO de linguagem (material did\u00e1tico)\n\n\nRails Tutorial - Michael Hartl\n\n\n\n\nhttps://www.railstutorial.org/\n\n\n\n\nCodecademy\n\n\n\n\nRuby\n\n\nhttps://www.codecademy.com/pt-BR/learn/ruby\n\n\nRails\n\n\nhttps://www.codecademy.com/pt-BR/learn/learn-rails\n\n\nRails Authentication\n\n\nhttps://www.codecademy.com/pt-BR/learn/rails-auth\n\n\n\n\nCaelum\n\n\n\n\nRuby on Rails\n\n\nhttps://www.caelum.com.br/apostila-ruby-on-rails/ruby-on-rails/\n\n\nRuby Gems\n\n\nhttps://rubygems.org/\n\n\n\n\nDOJO de testes (material did\u00e1tico)\n\n\n\n\nCode school\n\n\nhttps://www.codeschool.com/courses/testing-with-rspec\n\n\nUsando o RSpec para testar sua aplica\u00e7\u00e3o Rails - Modelos\n\n\nhttps://nandovieira.com.br/usando-o-rspec-para-testar-sua-aplicacao-rails-modelos\n\n\n\n\nReposit\u00f3rios educativos\n\n\nMaterial did\u00e1tico produzido na disciplina (times, coaches, etc)", 
            "title": "Tutorial Instala\u00e7\u00e3o Ruby on Rails"
        }, 
        {
            "location": "/Rails/#configuracao-de-ambiente", 
            "text": "", 
            "title": "Configura\u00e7\u00e3o de Ambiente"
        }, 
        {
            "location": "/Rails/#instalando-ruby-on-rails-no-ubuntu", 
            "text": "", 
            "title": "Instalando Ruby on Rails no Ubuntu"
        }, 
        {
            "location": "/Rails/#usando-rvm-ruby-version-manager", 
            "text": "O RVM \u00e9 uma ferramenta muito popular e bem suportada pela comunidade, utilizada para facilitar a mudan\u00e7a entre as vers\u00f5es do Ruby e gerenciar as gemas. Convenientemente o RVM pode ser utilizado para instalar o Ruby.", 
            "title": "Usando RVM (Ruby Version Manager)"
        }, 
        {
            "location": "/Rails/#preparacao-do-sistema", 
            "text": "Para a instala\u00e7\u00e3o do Ruby on Rails, \u00e9 necess\u00e1rio uma prepara\u00e7\u00e3o pr\u00e9via na sua m\u00e1quina. \nTamb\u00e9m \u00e9 necess\u00e1rio ter acesso de superusu\u00e1rio (root) para atualizar os softwares do sistema.  Primeiramente atualize o gerenciador de pacotes:  $ sudo apt-get update  Instale o  CURL :  $ sudo apt-get install curl", 
            "title": "Prepara\u00e7\u00e3o do sistema"
        }, 
        {
            "location": "/Rails/#instale-ruby-usando-rvm", 
            "text": "Use RVM, para instalar o Ruby e gerenciar suas vers\u00f5es do Rails.  Se houver uma vers\u00e3o antiga do Ruby instalada na m\u00e1quina, n\u00e3o h\u00e1 necessidade de remov\u00ea-la. RVM deixar\u00e1 a vers\u00e3o do sistema como est\u00e1 e usar\u00e1 o SHELL para interceptar qualquer chamada ao Ruby.   O  site do RVM  explica como instalar o RVM. Est\u00e1 \u00e9 a forma mais simples:  $ \\curl -L https://get.rvm.io | bash -s stable --ruby  A flag  --ruby  instalar\u00e1 a vers\u00e3o mais recente do Ruby.", 
            "title": "Instale Ruby usando RVM"
        }, 
        {
            "location": "/Rails/#se-ja-existe-alguma-versao-do-rvm", 
            "text": "Se voc\u00ea j\u00e1 tem uma vers\u00e3o do RVM instalado, atualize para a \u00faltima vers\u00e3o e instale o Ruby:  $ rvm get stable --autolibs=enable  $ rvm install ruby  $ rvm --default use ruby-2.3.1  Neste exemplo utiliza-se a vers\u00e3o 2.3.1 do Ruby, mas pode ser modificado para outra vers\u00e3o se necess\u00e1rio.", 
            "title": "Se j\u00e1 existe alguma vers\u00e3o do RVM"
        }, 
        {
            "location": "/Rails/#instale-nodejs", 
            "text": "Para desenvolvimento no Ubuntu Linux \u00e9 melhor instalar o ambiente javascript Node.js server-side.  $ sudo apt-get install nodejs  e configure o  $PATH .  Se n\u00e3o tiver o Node.js instalado, ser\u00e1 necess\u00e1rio adicionar ao Gemfile para cada aplica\u00e7\u00e3o Rails que for criada:  gem 'therubyracer'", 
            "title": "Instale Node.js"
        }, 
        {
            "location": "/Rails/#verifique-o-gerenciador-de-gems", 
            "text": "RubyGems \u00e9 o gerenciador de Gems no Ruby.  Verifique a vers\u00e3o do gerenciador instalado com o seguinte comando:  $ gem -v  2.3.1  Para atualizar utilize  $ gem update --system .", 
            "title": "Verifique o Gerenciador de Gems"
        }, 
        {
            "location": "/Rails/#instale-o-bundler", 
            "text": "Bundler \u00e9 uma ferramenta essencial para gerenciar as gems quando se est\u00e1 desenvolvendo e rodando aplica\u00e7\u00f5es Rails.  $ gem install bundler", 
            "title": "Instale o Bundler"
        }, 
        {
            "location": "/Rails/#opcoes-de-instalacao-rails", 
            "text": "Verifique a vers\u00e3o do Rails atual:  $ rails -v  Rails 5.0.0  Instale ent\u00e3o o rails:  $ gem install rails  e verifique sua vers\u00e3o ap\u00f3s a instala\u00e7\u00e3o:   $ rails -v  Desta forma ser\u00e1 instalado a \u00faltima vers\u00e3o est\u00e1vel, se for necess\u00e1ria uma vers\u00e3o espec\u00edfica utilize o comando a seguir.  Por exemplo, se for necess\u00e1ria a vers\u00e3o do Rails 3.2.18:  $ gem install rails --version=3.2.18  $ rails -v  Fonte de informa\u00e7\u00e3o:  Site RAILSAPPS", 
            "title": "Op\u00e7\u00f5es de instala\u00e7\u00e3o Rails"
        }, 
        {
            "location": "/Rails/#arquitetura-mvc-ruby-on-rails", 
            "text": "Model : Cont\u00e9m dados ou Informa\u00e7\u00f5es sobre a aplica\u00e7\u00e3o, al\u00e9m do estado da mesma, juntamente com as regras do neg\u00f3cio;     View : Interface para ver e modificar os dados/informa\u00e7\u00f5es. \u00c9 passiva \u2013 o que quer dizer que n\u00e3o processa nada;      Controller : Realiza opera\u00e7\u00f5es ou manipula\u00e7\u00f5es nos dados/informa\u00e7\u00f5es interagindo com a Model e interpreta os eventos realizados na View.       A  Model  representar\u00e1 as informa\u00e7\u00f5es ou dados abstra\u00eddos do mundo real, de modo que esta tamb\u00e9m n\u00e3o depende da  Controller  ou  View . A  View  mostrar\u00e1 o dados contidos na  Model  e pode tamb\u00e9m obter e/ou atualizar os dados da mesma e envia as a\u00e7\u00f5es executadas pelo usu\u00e1rio para a  Controller . A  Controller  prover\u00e1 os dados contidos na  Model  para a  View , al\u00e9m de interpretar as a\u00e7\u00f5es do usu\u00e1rio \u2013 como clicar em um bot\u00e3o, funciona como um  link  entre o usu\u00e1rio e o pr\u00f3prio sistema em si.", 
            "title": "Arquitetura MVC Ruby on Rails"
        }, 
        {
            "location": "/Rails/#websockets", 
            "text": "", 
            "title": "WebSockets"
        }, 
        {
            "location": "/Rails/#o-que-e", 
            "text": "WebSockets \u00e9 uma tecnologia avan\u00e7ada que torna poss\u00edvel abrir uma comunica\u00e7\u00e3o interativa entre o navegador do usu\u00e1rio e o servidor, criando um canal bidirecional para a comunica\u00e7\u00e3o entre eles. Esta tecnologia \u00e9 a chave para o desenvolvimento de aplica\u00e7\u00f5es em tempo real.", 
            "title": "O que \u00e9?"
        }, 
        {
            "location": "/Rails/#websockets-vs-protocolo-http", 
            "text": "A tecnologia de WebSockets veio para satisfazer uma demanda mundial: a  instantaneidade  das informa\u00e7\u00f5es. Desta forma, o paradigma \"Requisi\u00e7\u00e3o-Resposta\" entre usu\u00e1rio e servidor do HTTP torna-se obsoleto em vista das exig\u00eancias modernas.  Websockets utilizam um canal para manter a conex\u00e3o aberta, o  Action Cable . Assim, as requisi\u00e7\u00f5es dos usu\u00e1rios e servidores podem ser efetuadas em tempo real.", 
            "title": "WebSockets VS Protocolo HTTP"
        }, 
        {
            "location": "/Rails/#dojo-de-linguagem-material-didatico", 
            "text": "", 
            "title": "DOJO de linguagem (material did\u00e1tico)"
        }, 
        {
            "location": "/Rails/#rails-tutorial-michael-hartl", 
            "text": "https://www.railstutorial.org/", 
            "title": "Rails Tutorial - Michael Hartl"
        }, 
        {
            "location": "/Rails/#codecademy", 
            "text": "", 
            "title": "Codecademy"
        }, 
        {
            "location": "/Rails/#ruby", 
            "text": "https://www.codecademy.com/pt-BR/learn/ruby", 
            "title": "Ruby"
        }, 
        {
            "location": "/Rails/#rails", 
            "text": "https://www.codecademy.com/pt-BR/learn/learn-rails", 
            "title": "Rails"
        }, 
        {
            "location": "/Rails/#rails-authentication", 
            "text": "https://www.codecademy.com/pt-BR/learn/rails-auth", 
            "title": "Rails Authentication"
        }, 
        {
            "location": "/Rails/#caelum", 
            "text": "", 
            "title": "Caelum"
        }, 
        {
            "location": "/Rails/#ruby-on-rails", 
            "text": "https://www.caelum.com.br/apostila-ruby-on-rails/ruby-on-rails/", 
            "title": "Ruby on Rails"
        }, 
        {
            "location": "/Rails/#ruby-gems", 
            "text": "https://rubygems.org/", 
            "title": "Ruby Gems"
        }, 
        {
            "location": "/Rails/#dojo-de-testes-material-didatico", 
            "text": "", 
            "title": "DOJO de testes (material did\u00e1tico)"
        }, 
        {
            "location": "/Rails/#code-school", 
            "text": "https://www.codeschool.com/courses/testing-with-rspec", 
            "title": "Code school"
        }, 
        {
            "location": "/Rails/#usando-o-rspec-para-testar-sua-aplicacao-rails-modelos", 
            "text": "https://nandovieira.com.br/usando-o-rspec-para-testar-sua-aplicacao-rails-modelos", 
            "title": "Usando o RSpec para testar sua aplica\u00e7\u00e3o Rails - Modelos"
        }, 
        {
            "location": "/Rails/#repositorios-educativos", 
            "text": "", 
            "title": "Reposit\u00f3rios educativos"
        }, 
        {
            "location": "/Rails/#material-didatico-produzido-na-disciplina-times-coaches-etc", 
            "text": "", 
            "title": "Material did\u00e1tico produzido na disciplina (times, coaches, etc)"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/", 
            "text": "Hist\u00f3rico de Revis\u00e3o\n\n\n\n\n\n\n\n\nData\n\n\nVers\u00e3o\n\n\nDescri\u00e7\u00e3o\n\n\nRevisor\n\n\n\n\n\n\n\n\n\n\n26/05/2017\n\n\n1.0\n\n\nEstrutura de t\u00f3picos\n\n\nVitor Borges\n\n\n\n\n\n\n29/05/2017\n\n\n1.1\n\n\nEscrita dos t\u00f3picos\n\n\nVitor Borges e Thiago Moreira\n\n\n\n\n\n\n30/05/2017\n\n\n1.2\n\n\nRevis\u00e3o dos t\u00f3picos\n\n\nDanilo Barros e Lucas Rufino\n\n\n\n\n\n\n30/05/2017\n\n\n1.3\n\n\nValida\u00e7\u00e3o dos t\u00f3picos e refatora\u00e7\u00e3o final\n\n\nDanilo Barros, Lucas Rufino, Thiago Moreira e Vitor Borges\n\n\n\n\n\n\n30/05/2017\n\n\n1.4\n\n\nConfigura\u00e7\u00e3o final do RethinkDB\n\n\nDanilo Barros, Lucas Rufino, Thiago Moreira e Vitor Borges\n\n\n\n\n\n\n\n\n\n\n\n\nHist\u00f3rico de Revis\u00e3o\n\n\n1. Introdu\u00e7\u00e3o\n\n\n2. Tecnologias\n\n\n2.1. Node JS\n\n\n2.2. RethinkDB\n\n\n\n\n\n\n3. Instala\u00e7\u00e3o\n\n\n3.1. Instalando o Node JS\n\n\n3.2. Instalando o RethinkDB\n\n\n\n\n\n\n4. Configura\u00e7\u00e3o\n\n\n4.1. Configurando o Node JS\n\n\n4.1.1 Criando um servidor\n\n\n\n\n\n\n4.2. Configurando o RethinkDB\n\n\n\n\n\n\n5. Bibliografia\n\n\n\n\n\n\n1. Introdu\u00e7\u00e3o\n\n\n\n\n\n\n\n\n\n\n2. Tecnologias\n\n\n2.1. Node JS\n\n\nContru\u00eddo com base em Javascript, o Node.js tem a capacidade de executar c\u00f3digo Javascript fora dos navegadores. Al\u00e9m disso, ele pode ser usado tamb\u00e9m como complemento de outras aplica\u00e7\u00f5es ou at\u00e9 mesmo em uma aplica\u00e7\u00e3o nativa, permitindo que \nscripts\n em JS sejam executados das mais variadas formas, proporcionando um melhor aproveitamento do mesmo. Ele \u00e9 muito utilizado ao lado do servidor, atendendo demandas de aplica\u00e7\u00f5es web e APIs. Apesar disto, ele tem a capacidade de ser executado sem um servidor, sendo uma vantagem relevante.\n\n\n\nO Node.js utiliza o conceito de assincronidade no seu funcionamento, onde realiza varias atividades ao mesmo tendo, facilitando na realiza\u00e7\u00e3o de tarefas e otimizando o seu tempo. Quando o Node foi criado, em 2009, os desenvolvedores queriam deixar esse processo de assincronidade mais f\u00e1cil e conveniente.\n\n\n\nA arquitetura do Node.js \u00e9 baseada no paradigma de Programa\u00e7\u00e3o Orientada a Evento, onde, basicamente, utiliza m\u00e9todos para monitorar os eventos que avisa o c\u00f3digo especializado em responder a um determinado evento, que aquele evento que ele espera ocorreu. Com isso, o c\u00f3digo que foi avisado responde ao evento. Esse m\u00e9todos citados s\u00e3o chamados de callback, e s\u00e3o utilizados constantemente na execu\u00e7\u00e3o do Node. A assincronidade s\u00f3 \u00e9 poss\u00edvel devido a presen\u00e7a desses m\u00e9todos, para ter controle das a\u00e7\u00f5es dos diversos \nscripts\n rodando ao mesmo tempo na aplica\u00e7\u00e3o.\n\n\n\n2.2. RethinkDB\n\n\nConstru\u00eddo em C++ mas que utiliza a sintaxe em Javascript (quando configurado com o Node), o banco de dados RethinkDB \u00e9 n\u00e3o-relacional que possui uma vasta lista de queries flex\u00edveis, opera\u00e7\u00f5es intuitivas de monitoramento de API e \u00e9 facil de configurar e aprender a utilizar.\n\n\nA principal ideia do RethinkDB \u00e9 que ele seja uma base de dados \nrealtime\n, onde o desenvolvedor pode dizer ao RethinDB para continuamente atualizar resultados de query em tempo real, para o consumo de dados em diversos tipos de plataformas.\n\n\nO RethinkDB deve estar dentro das alternativas a serem escolhidas quando:\n\n\n\n\nAplica\u00e7\u00f5es mobile e web colaborativas;\n\n\nJogos multiplayer;\n\n\nMercados em tempo real;\n\n\nDispositivos conectados.\n\n\n\n\n3. Instala\u00e7\u00e3o\n\n\nExplicaremos agora como instalar essas tecnologias na plataforma Linux.\n\n\n3.1. Instalando o Node JS\n\n\nPara a instala\u00e7\u00e3o da mais nova vers\u00e3o do Node utilize os seguintes comandos:\n\n\n    $ curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n    $ sudo apt-get install -y nodejs\n\n\n\n\nOpcionalmente, installe o \nbuild-essencial\n  para utilizar addons nativos do npm:\n\n\n    $ sudo apt-get install -y build-essential\n\n\n\n\nCom a instala\u00e7\u00e3o conclu\u00edda, cheque se o npm e o Node foram instalados corretamente.\n\n\n    $ node --version\n    v7.10.0\n\n\n\n\n    $ npm --version\n    4.5.0\n\n\n\n\n3.2. Instalando o RethinkDB\n\n\nPara a instala\u00e7\u00e3o do RethinkDB em distribui\u00e7\u00f5es Linux Ubuntu 16.04 utilize os comandos: \n\n\n    $ source /etc/lsb-release \n echo \ndeb http://download.rethinkdb.com/apt $DISTRIB_CODENAME main\n | sudo tee /etc/apt/sources.list.d/rethinkdb.list\n    $ wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add -\n    $ sudo apt-get update\n    $ sudo apt-get install rethinkdb\n\n\n\n\nPara verificar a correnta instala\u00e7\u00e3o do RethinkDB execute:\n\n\n    $ rethinkdb -v\n    rethinkdb 2.3.5~0trusty (GCC 4.8.2)\n\n\n\n\nPara executar o Rethindb basta abrir o terminal e executar o comando `rethinkdb` e o mesmo ser\u00e1 carregado na p\u00e1gina do Browser default do seu sistema operacional utilizando a url https://localhost:8080 (porta padr\u00e3o da tecnologia, mas que pode ser alterada).\n\n\n\n4. Configura\u00e7\u00e3o\n\n\nSer\u00e1 falado agora uma breve configura\u00e7\u00e3o de uma API RESTFull utilizando o RethinkDB e o Node.js.\n\n\nO primeiro passo \u00e9 criar um projeto em Node. Para isso, crie uma pasta com o nome do projeto que deseja criar.\n\n\n    $ mkdir myAPI\n    $ cd myAPI\n\n\n\n\nNa pasta da aplica\u00e7\u00e3o, inicie um projeto Node.js com o comando npm e as configura\u00e7\u00f5es desejadas.\n\n\n     myApp-$ npm init\n\n\n\n\nAp\u00f3s isso, deve-se inserir as informa\u00e7\u00f5es referentes ao seu servidor. Ele pede o nome, vers\u00e3o, descri\u00e7\u00e3o, entry point, test command, git repository, palavras-chaves, autor e licen\u00e7a. No fim, ele pergunta se est\u00e1 tudo ok para criar o projeto. Se sim, digite \nyes\n no terminal.\n\n\nCom isso, ser\u00e1 criado um arquivo chamado \npackage.json\n que \u00e9 o cora\u00e7\u00e3o da aplica\u00e7\u00e3o Node.js, pois nele definimos todas as depend\u00eancias da API.\n\n\n4.1. Configurando o Node JS\n\n\nAp\u00f3s a cria\u00e7\u00e3o do projeto, \u00e9 recomendado instalar algumas dep\u00eandencias que melhoram a experi\u00eancia da utiliza\u00e7\u00e3o do Node, facilitando em diversos aspectos, como por exemplo, simplificar a utiliza\u00e7\u00e3o de querys para requisi\u00e7\u00f5es no banco.\n\n\nAs depend\u00eancias recomendadas s\u00e3o:\n\n\nExpress:\n Poderoso gerenciador de rotas focado em alta performance, que simplifica requisi\u00e7\u00f5es HTTP.\n\n\n    $ npm install express --save\n\n\n\n\nBody-parser:\n Facilita a captura dos objetos que s\u00e3o passados ou recebidos na sua requisi\u00e7\u00e3o HTTP.\n\n\n    $ npm install body-parser --save\n\n\n\n\nMorgan:\n Gera logs de requisi\u00e7\u00e3o para melhor acompanhamento das rotas.\n\n\n    $ npm install morgan --save\n\n\n\n\nNodemon:\n Recarrega automaticamente o seu servidor, poupando o trabalho de reinici\u00e1-lo sempre que houver alguma modifica\u00e7\u00e3o.\n\n\n    $ npm install nodemon --save\n\n\n\n\nO comando \n--save\n presente nestes comandos citados acima salva todas as depend\u00eancias instaladas no \npackage.json\n, facilitando o compartilhamento do c\u00f3digo posteriormente. Para um terceiro instalar essas depend\u00eancias do projeto, basta digitar o comando:\n\n\n    $ npm install\n\n\n\n\n4.1.1 Criando um servidor\n\n\nAp\u00f3s os passos acima, voc\u00ea j\u00e1 \u00e9 capaz de criar sua API. Mas para isso, \u00e9 necess\u00e1rio criar o servidor para iniciar os procedimentos.\n\n\nDevemos criar um arquivo na pasta raiz para rodar nossa aplica\u00e7\u00e3o. Neste exemplo usaremos o nome \napp.js\n.\n\n\nInicialmente, \u00e9 preciso importar as dep\u00eandencias que ser\u00e3o necess\u00e1rias para rodar o servidor. A importa\u00e7\u00e3o \u00e9 feita com o m\u00e9todo \nrequire\n do Node.\n\n\n    var express = require('express')\n    var bodyParser = require('body-parser')\n    var morgan = require('morgan')\n\n\n\n\nAp\u00f3s isso, devemos evocar a fun\u00e7\u00e3o para utilizar os objetos do express em si.\n\n\n    var app = express()\n\n\n\n\nNo fim, devemos subir o servidor utilizando nossa vari\u00e1vel \napp\n. Para isso, passamos a porta que o servidor vai escutar e uma fun\u00e7\u00e3o que vai ser chamada assim que o servidor estiver no ar, como \u00e9 mostrada no c\u00f3digo abaixo.\n\n\n    app.listen(3000, function() {\n        console.log('Servidor executando no endere\u00e7o http://localhost:' + 3000)\n    })\n\n\n\n\nAp\u00f3s isso, seu servidor estar\u00e1 pronto para ser utilizado.\n\n\nUtilize o comando abaixo para rodar o seu servidor.\n\n\n    $ node app\n\n\n\n\n4.2. Configurando o RethinkDB\n\n\nUma tecnologia auxiliar ao RethinkDB que nos permite criar models e facilita nas queries \u00e9 o Thinky, o qual utilizamos para configurar a base de dados.\nPara instalar o Thinky, fa\u00e7a: \n\n\n    myAPI-$ npm install --save thinky\n\n\n\n\nCom isso, crie uma pasta com o nome \ndatabase\n e configure o arquivo de banco de dados chamado \nindex.js\n.\n\n\n    //Path: myAPI/database/\n\n    var thinky = require('thinky')()\n    var { type, r } = thinky // importa 'type' para tipos de vari\u00e1veis e 'r' como o pr\u00f3prio m\u00f3dulo do RethinkDB\n\n    async function init () {\n        try {\n            await thinky.dbReady()\n            return thinky\n        } catch (error) {\n            throw error\n        }\n    }\n    export { init, thinky, type, r }\n\n\n\n\n\nCom a base de dados configurada, volte ao arquivo \napp.js\n e adicione as linhas de configura\u00e7\u00e3o do banco de dados:\n\n\n    var express = require('express')\n    var bodyParser = require('body-parser')\n    var db = require('./database')\n    var morgan = require('morgan')\n\n    var app = express()\n\n    app.use(bodyParser.json({\n      limit: '5mb'\n    }))\n\n    db.init()\n      .then(db =\n {\n        app.listen(3000, () =\n {\n          console.log('Server listening on http://localhost:3000')\n        })\n      })\n\n\n\n\nO pr\u00f3ximo passo \u00e9 criar uma \nmodel\n para poder salvar no banco de dados. Para isso, crie uma pasta \nmodels\n.\n\n\n    myAPI-$ mkdir models\n\n\n\n\nAgora, crie uma model qualquer de teste, no caso, criaremos uma model \nUser.js\n.\n\n\n    var { thinky, type } = require('../database')\n\n    var User = thinky.createModel('Users', {\n        name: type.string(),\n        email: type.string()\n    })\n\n    export default User\n\n\n\n\nAgora, basta criar uma \napi\n e configura-la para disponibilizar os m\u00e9todos de requisi\u00e7\u00e3o e consumir a API REST. Para isso, crie a pasta \napi\n e o arquivo \nindex.js\n.\n\n\n    myAPI-$ mkdir api\n    myAPI-$ touch api/index.js\n    myAPI-$ touch api/users.js\n\n\n\n\n    // index.js\n    var { Router } = require('express')\n    var userRouter = require('./users')\n\n    export default ({ db }) =\n {\n        let api = Router()\n\n        var users = userRouter({ db })\n        api.use('/users', users)\n\n        return api\n    }\n\n\n\n\nCrie tamb\u00e9m o arquivo \nusers.js\n na pasta \napi\n.\n\n\n    // users.js\n    var { Router } = require('express')\n    var User = require('../models/User')\n\n    export default ({ db }) =\n {\n        let router = Router()\n        /* \n           configura\u00e7\u00e3o para rotas do tipo users/:id para \n           utilizarem o id do User como par\u00e2metro\n        */\n        router.param('user', (req, resp, next, id) =\n {\n            req.userDocument = User.get(id)\n            next()\n        })\n\n        router.get('/', async (request, response) =\n {\n            try {\n                var result = await User.run() // executa a query de get all no bando de dados\n                response.json(result)\n            } catch (error) {\n                response.status(500).send(error)\n            }\n        })\n\n        return router\n    }\n\n\n\n\n\nAgora, volte no arquivo \napp.js\n e configure a rota para \n/api\n.\n\n\n    var api = require('./api') // importe a pasta 'api'\n\n    [...]\n\n    db.init()\n      .then(db =\n {\n        app.use('/api', api({ db })) // configure as rotas para come\u00e7arem com '/api'\n        app.listen(3000, () =\n {\n          console.log('Server listening on http://localhost:3000')\n        })\n      })\n\n\n\n\nAgora, para executar a \napi\n basta executar os comandos \nrethinkdb\n e \nnodemon app.js\n na pasta \nmyAPI\n e acessar a rota \nhttp://localhost:3000/api/users\n para acessar a rota e verificar a resposta do servidor.\n\n\nRepare que n\u00e3o existe nenhum usu\u00e1rio cadastrado. Para inserir um usu\u00e1rio de teste, acesse o \nhttp://localhost:8080\n para acessar o RethinkDB, como a imagem a seguir:\n\n\n\n\nAgora, acesse o \nData Explorer\n  e crie um usu\u00e1rio default:\n\n\n\n\nAgora, ao acessar novamente a rota de \n/api/users\n na \nAPI\n voc\u00ea ver\u00e1 a resposta do servidor com o usu\u00e1rio cadastrado.\n\n\n\n\nPronto. Voc\u00ea j\u00e1 pode criar sua pr\u00f3pria RESTfull API com Node.js e RethinkDB!\n\n\n5. Bibliografia\n\n\n\n\nhttp://nodebr.com/o-que-e-node-js/\n\n\nhttps://pt.stackoverflow.com/questions/80601/o-que-\u00e9-a-programa\u00e7\u00e3o-orientada-a-eventos\n\n\nhttps://www.rethinkdb.com/faq/\n\n\nhttps://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions", 
            "title": "Tutorial REST API em Node.js"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#historico-de-revisao", 
            "text": "Data  Vers\u00e3o  Descri\u00e7\u00e3o  Revisor      26/05/2017  1.0  Estrutura de t\u00f3picos  Vitor Borges    29/05/2017  1.1  Escrita dos t\u00f3picos  Vitor Borges e Thiago Moreira    30/05/2017  1.2  Revis\u00e3o dos t\u00f3picos  Danilo Barros e Lucas Rufino    30/05/2017  1.3  Valida\u00e7\u00e3o dos t\u00f3picos e refatora\u00e7\u00e3o final  Danilo Barros, Lucas Rufino, Thiago Moreira e Vitor Borges    30/05/2017  1.4  Configura\u00e7\u00e3o final do RethinkDB  Danilo Barros, Lucas Rufino, Thiago Moreira e Vitor Borges       Hist\u00f3rico de Revis\u00e3o  1. Introdu\u00e7\u00e3o  2. Tecnologias  2.1. Node JS  2.2. RethinkDB    3. Instala\u00e7\u00e3o  3.1. Instalando o Node JS  3.2. Instalando o RethinkDB    4. Configura\u00e7\u00e3o  4.1. Configurando o Node JS  4.1.1 Criando um servidor    4.2. Configurando o RethinkDB    5. Bibliografia", 
            "title": "Hist\u00f3rico de Revis\u00e3o"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#1-introducao", 
            "text": "", 
            "title": "1. Introdu\u00e7\u00e3o"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#2-tecnologias", 
            "text": "", 
            "title": "2. Tecnologias"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#21-node-js", 
            "text": "Contru\u00eddo com base em Javascript, o Node.js tem a capacidade de executar c\u00f3digo Javascript fora dos navegadores. Al\u00e9m disso, ele pode ser usado tamb\u00e9m como complemento de outras aplica\u00e7\u00f5es ou at\u00e9 mesmo em uma aplica\u00e7\u00e3o nativa, permitindo que  scripts  em JS sejam executados das mais variadas formas, proporcionando um melhor aproveitamento do mesmo. Ele \u00e9 muito utilizado ao lado do servidor, atendendo demandas de aplica\u00e7\u00f5es web e APIs. Apesar disto, ele tem a capacidade de ser executado sem um servidor, sendo uma vantagem relevante.  O Node.js utiliza o conceito de assincronidade no seu funcionamento, onde realiza varias atividades ao mesmo tendo, facilitando na realiza\u00e7\u00e3o de tarefas e otimizando o seu tempo. Quando o Node foi criado, em 2009, os desenvolvedores queriam deixar esse processo de assincronidade mais f\u00e1cil e conveniente.  A arquitetura do Node.js \u00e9 baseada no paradigma de Programa\u00e7\u00e3o Orientada a Evento, onde, basicamente, utiliza m\u00e9todos para monitorar os eventos que avisa o c\u00f3digo especializado em responder a um determinado evento, que aquele evento que ele espera ocorreu. Com isso, o c\u00f3digo que foi avisado responde ao evento. Esse m\u00e9todos citados s\u00e3o chamados de callback, e s\u00e3o utilizados constantemente na execu\u00e7\u00e3o do Node. A assincronidade s\u00f3 \u00e9 poss\u00edvel devido a presen\u00e7a desses m\u00e9todos, para ter controle das a\u00e7\u00f5es dos diversos  scripts  rodando ao mesmo tempo na aplica\u00e7\u00e3o.", 
            "title": "2.1. Node JS"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#22-rethinkdb", 
            "text": "Constru\u00eddo em C++ mas que utiliza a sintaxe em Javascript (quando configurado com o Node), o banco de dados RethinkDB \u00e9 n\u00e3o-relacional que possui uma vasta lista de queries flex\u00edveis, opera\u00e7\u00f5es intuitivas de monitoramento de API e \u00e9 facil de configurar e aprender a utilizar.  A principal ideia do RethinkDB \u00e9 que ele seja uma base de dados  realtime , onde o desenvolvedor pode dizer ao RethinDB para continuamente atualizar resultados de query em tempo real, para o consumo de dados em diversos tipos de plataformas.  O RethinkDB deve estar dentro das alternativas a serem escolhidas quando:   Aplica\u00e7\u00f5es mobile e web colaborativas;  Jogos multiplayer;  Mercados em tempo real;  Dispositivos conectados.", 
            "title": "2.2. RethinkDB"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#3-instalacao", 
            "text": "Explicaremos agora como instalar essas tecnologias na plataforma Linux.", 
            "title": "3. Instala\u00e7\u00e3o"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#31-instalando-o-node-js", 
            "text": "Para a instala\u00e7\u00e3o da mais nova vers\u00e3o do Node utilize os seguintes comandos:      $ curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\n    $ sudo apt-get install -y nodejs  Opcionalmente, installe o  build-essencial   para utilizar addons nativos do npm:      $ sudo apt-get install -y build-essential  Com a instala\u00e7\u00e3o conclu\u00edda, cheque se o npm e o Node foram instalados corretamente.      $ node --version\n    v7.10.0      $ npm --version\n    4.5.0", 
            "title": "3.1. Instalando o Node JS"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#32-instalando-o-rethinkdb", 
            "text": "Para a instala\u00e7\u00e3o do RethinkDB em distribui\u00e7\u00f5es Linux Ubuntu 16.04 utilize os comandos:       $ source /etc/lsb-release   echo  deb http://download.rethinkdb.com/apt $DISTRIB_CODENAME main  | sudo tee /etc/apt/sources.list.d/rethinkdb.list\n    $ wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add -\n    $ sudo apt-get update\n    $ sudo apt-get install rethinkdb  Para verificar a correnta instala\u00e7\u00e3o do RethinkDB execute:      $ rethinkdb -v\n    rethinkdb 2.3.5~0trusty (GCC 4.8.2)  Para executar o Rethindb basta abrir o terminal e executar o comando `rethinkdb` e o mesmo ser\u00e1 carregado na p\u00e1gina do Browser default do seu sistema operacional utilizando a url https://localhost:8080 (porta padr\u00e3o da tecnologia, mas que pode ser alterada).", 
            "title": "3.2. Instalando o RethinkDB"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#4-configuracao", 
            "text": "Ser\u00e1 falado agora uma breve configura\u00e7\u00e3o de uma API RESTFull utilizando o RethinkDB e o Node.js.  O primeiro passo \u00e9 criar um projeto em Node. Para isso, crie uma pasta com o nome do projeto que deseja criar.      $ mkdir myAPI\n    $ cd myAPI  Na pasta da aplica\u00e7\u00e3o, inicie um projeto Node.js com o comando npm e as configura\u00e7\u00f5es desejadas.       myApp-$ npm init  Ap\u00f3s isso, deve-se inserir as informa\u00e7\u00f5es referentes ao seu servidor. Ele pede o nome, vers\u00e3o, descri\u00e7\u00e3o, entry point, test command, git repository, palavras-chaves, autor e licen\u00e7a. No fim, ele pergunta se est\u00e1 tudo ok para criar o projeto. Se sim, digite  yes  no terminal.  Com isso, ser\u00e1 criado um arquivo chamado  package.json  que \u00e9 o cora\u00e7\u00e3o da aplica\u00e7\u00e3o Node.js, pois nele definimos todas as depend\u00eancias da API.", 
            "title": "4. Configura\u00e7\u00e3o"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#41-configurando-o-node-js", 
            "text": "Ap\u00f3s a cria\u00e7\u00e3o do projeto, \u00e9 recomendado instalar algumas dep\u00eandencias que melhoram a experi\u00eancia da utiliza\u00e7\u00e3o do Node, facilitando em diversos aspectos, como por exemplo, simplificar a utiliza\u00e7\u00e3o de querys para requisi\u00e7\u00f5es no banco.  As depend\u00eancias recomendadas s\u00e3o:  Express:  Poderoso gerenciador de rotas focado em alta performance, que simplifica requisi\u00e7\u00f5es HTTP.      $ npm install express --save  Body-parser:  Facilita a captura dos objetos que s\u00e3o passados ou recebidos na sua requisi\u00e7\u00e3o HTTP.      $ npm install body-parser --save  Morgan:  Gera logs de requisi\u00e7\u00e3o para melhor acompanhamento das rotas.      $ npm install morgan --save  Nodemon:  Recarrega automaticamente o seu servidor, poupando o trabalho de reinici\u00e1-lo sempre que houver alguma modifica\u00e7\u00e3o.      $ npm install nodemon --save  O comando  --save  presente nestes comandos citados acima salva todas as depend\u00eancias instaladas no  package.json , facilitando o compartilhamento do c\u00f3digo posteriormente. Para um terceiro instalar essas depend\u00eancias do projeto, basta digitar o comando:      $ npm install", 
            "title": "4.1. Configurando o Node JS"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#411-criando-um-servidor", 
            "text": "Ap\u00f3s os passos acima, voc\u00ea j\u00e1 \u00e9 capaz de criar sua API. Mas para isso, \u00e9 necess\u00e1rio criar o servidor para iniciar os procedimentos.  Devemos criar um arquivo na pasta raiz para rodar nossa aplica\u00e7\u00e3o. Neste exemplo usaremos o nome  app.js .  Inicialmente, \u00e9 preciso importar as dep\u00eandencias que ser\u00e3o necess\u00e1rias para rodar o servidor. A importa\u00e7\u00e3o \u00e9 feita com o m\u00e9todo  require  do Node.      var express = require('express')\n    var bodyParser = require('body-parser')\n    var morgan = require('morgan')  Ap\u00f3s isso, devemos evocar a fun\u00e7\u00e3o para utilizar os objetos do express em si.      var app = express()  No fim, devemos subir o servidor utilizando nossa vari\u00e1vel  app . Para isso, passamos a porta que o servidor vai escutar e uma fun\u00e7\u00e3o que vai ser chamada assim que o servidor estiver no ar, como \u00e9 mostrada no c\u00f3digo abaixo.      app.listen(3000, function() {\n        console.log('Servidor executando no endere\u00e7o http://localhost:' + 3000)\n    })  Ap\u00f3s isso, seu servidor estar\u00e1 pronto para ser utilizado.  Utilize o comando abaixo para rodar o seu servidor.      $ node app", 
            "title": "4.1.1 Criando um servidor"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#42-configurando-o-rethinkdb", 
            "text": "Uma tecnologia auxiliar ao RethinkDB que nos permite criar models e facilita nas queries \u00e9 o Thinky, o qual utilizamos para configurar a base de dados.\nPara instalar o Thinky, fa\u00e7a:       myAPI-$ npm install --save thinky  Com isso, crie uma pasta com o nome  database  e configure o arquivo de banco de dados chamado  index.js .      //Path: myAPI/database/\n\n    var thinky = require('thinky')()\n    var { type, r } = thinky // importa 'type' para tipos de vari\u00e1veis e 'r' como o pr\u00f3prio m\u00f3dulo do RethinkDB\n\n    async function init () {\n        try {\n            await thinky.dbReady()\n            return thinky\n        } catch (error) {\n            throw error\n        }\n    }\n    export { init, thinky, type, r }  Com a base de dados configurada, volte ao arquivo  app.js  e adicione as linhas de configura\u00e7\u00e3o do banco de dados:      var express = require('express')\n    var bodyParser = require('body-parser')\n    var db = require('./database')\n    var morgan = require('morgan')\n\n    var app = express()\n\n    app.use(bodyParser.json({\n      limit: '5mb'\n    }))\n\n    db.init()\n      .then(db =  {\n        app.listen(3000, () =  {\n          console.log('Server listening on http://localhost:3000')\n        })\n      })  O pr\u00f3ximo passo \u00e9 criar uma  model  para poder salvar no banco de dados. Para isso, crie uma pasta  models .      myAPI-$ mkdir models  Agora, crie uma model qualquer de teste, no caso, criaremos uma model  User.js .      var { thinky, type } = require('../database')\n\n    var User = thinky.createModel('Users', {\n        name: type.string(),\n        email: type.string()\n    })\n\n    export default User  Agora, basta criar uma  api  e configura-la para disponibilizar os m\u00e9todos de requisi\u00e7\u00e3o e consumir a API REST. Para isso, crie a pasta  api  e o arquivo  index.js .      myAPI-$ mkdir api\n    myAPI-$ touch api/index.js\n    myAPI-$ touch api/users.js      // index.js\n    var { Router } = require('express')\n    var userRouter = require('./users')\n\n    export default ({ db }) =  {\n        let api = Router()\n\n        var users = userRouter({ db })\n        api.use('/users', users)\n\n        return api\n    }  Crie tamb\u00e9m o arquivo  users.js  na pasta  api .      // users.js\n    var { Router } = require('express')\n    var User = require('../models/User')\n\n    export default ({ db }) =  {\n        let router = Router()\n        /* \n           configura\u00e7\u00e3o para rotas do tipo users/:id para \n           utilizarem o id do User como par\u00e2metro\n        */\n        router.param('user', (req, resp, next, id) =  {\n            req.userDocument = User.get(id)\n            next()\n        })\n\n        router.get('/', async (request, response) =  {\n            try {\n                var result = await User.run() // executa a query de get all no bando de dados\n                response.json(result)\n            } catch (error) {\n                response.status(500).send(error)\n            }\n        })\n\n        return router\n    }  Agora, volte no arquivo  app.js  e configure a rota para  /api .      var api = require('./api') // importe a pasta 'api'\n\n    [...]\n\n    db.init()\n      .then(db =  {\n        app.use('/api', api({ db })) // configure as rotas para come\u00e7arem com '/api'\n        app.listen(3000, () =  {\n          console.log('Server listening on http://localhost:3000')\n        })\n      })  Agora, para executar a  api  basta executar os comandos  rethinkdb  e  nodemon app.js  na pasta  myAPI  e acessar a rota  http://localhost:3000/api/users  para acessar a rota e verificar a resposta do servidor.  Repare que n\u00e3o existe nenhum usu\u00e1rio cadastrado. Para inserir um usu\u00e1rio de teste, acesse o  http://localhost:8080  para acessar o RethinkDB, como a imagem a seguir:   Agora, acesse o  Data Explorer   e crie um usu\u00e1rio default:   Agora, ao acessar novamente a rota de  /api/users  na  API  voc\u00ea ver\u00e1 a resposta do servidor com o usu\u00e1rio cadastrado.   Pronto. Voc\u00ea j\u00e1 pode criar sua pr\u00f3pria RESTfull API com Node.js e RethinkDB!", 
            "title": "4.2. Configurando o RethinkDB"
        }, 
        {
            "location": "/REST-API-em-Node.js-e-RethinkDB/#5-bibliografia", 
            "text": "http://nodebr.com/o-que-e-node-js/  https://pt.stackoverflow.com/questions/80601/o-que-\u00e9-a-programa\u00e7\u00e3o-orientada-a-eventos  https://www.rethinkdb.com/faq/  https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions", 
            "title": "5. Bibliografia"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/", 
            "text": "BDD com o cucumber em JavaScript\n\n\nObjetivo\n\n\nEste documento tem como objetivo principal criar um tutorial b\u00e1sico sobre o cucumberJS, ferramenta feita para desenvolvimento utilizando BDD (\nBehaviour Driven Development\n) em javascript.\n\n\nIntrodu\u00e7\u00e3o\n\n\n Controlar se todos os crit\u00e9rios de aceita\u00e7\u00e3o de um sistema foram cumpridos nem sempre \u00e9 uma tarefa f\u00e1cil, e para simplificar esta tarefa, o BDD foi criado.\nNeste tipo de teste o sistema \u00e9 testado como um todo, sem considerar diferen\u00e7as entre servidor e cliente, ou at\u00e9 mesmo banco de dados, garantindo assim que a funcionalidade como um todo funciona, por\u00e9m nunca garantindo que ao encontrar um erro, torne mais f\u00e1cil o \ndebug\n.\n\n\n\nObjetivo do teste\n\n\nO teste de exemplo para este tutorial ser\u00e1 a funcionalidade do google de busca por um nome, sendo o caso de teste a busca da frase GPP/MDS e verificar se o github da disciplina \u00e9 apresentado\n\n\nInstala\u00e7\u00e3o\n\n\nPr\u00e9 requisitos:\n\n\n\n\nnpm\n\n\n\n\nPrepara\u00e7\u00e3o do teste\n\n\nnpm init\n\n\nSer\u00e3o apresentadas v\u00e1rias perguntas, aperte enter em todas =D.\n\n\nnpm install --save-dev cucumber cucumberjs-chromedriver selenium-webdriver\n\n\nnpm install -g gulp\n\n\nConfigura\u00e7\u00e3o dos testes\n\n\nEstrutura de arquivos\n\n\nOs arquivos devem estar disponibilizados da seguinte forma:\n\n\nraiz\n\n|- package.json\n|- gulpfile.js\n|- tests\n\n\n_\n|- features \n\n\n_\n|-\n.feature\n\n\n_\n_|-step\ndefinitions\n\n\n_\n_\n_|-\\\n_steps_.js\n\n\n_\n_|-support\n\n\n_\n_\n_\n_|-env.js\n\n\n_\n_\n_|-hook.js\n\n\n_\n_\n_|-world.js\n\n\nGulpfile.js\n\n\nvar gulp = require('gulp');\nvar runSequence = require('run-sequence').use(gulp);\nvar cucumber = require('gulp-cucumber');\n\ngulp.task('cucumber', function() {\n\n  var file = \"*\";\n  if (process.argv.length \n= 4) {\n    file = process.argv[3].replace(/-+/, \"\");\n  }\n\n  return gulp.src('./tests/features/' + file).pipe(cucumber({\n    'steps': './tests/features/step_definitions/commom_steps.js',\n    'support': './tests/features/support/*.js'\n  }))\n})\n\n\n\nEnv.js\n\n\n'use strict';\n\nvar configure = function() {\n  this.setDefaultTimeout(60 * 1000);\n};\n\nmodule.exports = configure;\n\n\n\nHooks.js\n\n\n'use strict';\n\nvar driver = require('./world.js').getDriver();\nvar fs = require('fs');\nvar path = require('path');\nvar sanitize = require(\"sanitize-filename\");\n\nvar myHooks = function() {\n\n  this.After(function(scenario) {\n    if (scenario.isFailed()) {\n      this.driver.takeScreenshot().then(function(data) {\n        var base64Data = data.replace(/^data:image\\/png;base64,/, \"\");\n        fs.writeFile(path.join('screenshots', sanitize(scenario.getName() + \".png\").replace(/ /g, \"_\")), base64Data, 'base64', function(err) {\n          if (err) console.log(err);\n        });\n      });\n    }\n    return this.driver.manage().deleteAllCookies();\n  });\n\n  this.registerHandler('AfterFeatures', function(event) {\n    return driver.quit();\n  });\n\n};\n\nmodule.exports = myHooks;\n\n\n\nWorld.js\n\n\n'use strict';\n\nvar fs = require('fs');\nvar webdriver = require('selenium-webdriver');\nvar platform = process.env.PLATFORM || \"CHROME\";\nvar until = webdriver.until;\n\nvar buildChromeDriver = function() {\n  return new webdriver.Builder().\n  withCapabilities(webdriver.Capabilities.chrome()).\n  build();\n};\n\nvar buildFirefoxDriver = function() {\n  return new webdriver.Builder().\n  withCapabilities(webdriver.Capabilities.firefox()).\n  build();\n};\n\nswitch (platform) {\n  case 'FIREFOX':\n    var driver = buildFirefoxDriver();\n    break;\n  default:\n    var driver = buildChromeDriver();\n}\n\nvar getDriver = function() {\n  return driver;\n};\n\nvar World = function World() {\n\n  var defaultTimeout = 5000;\n  var screenshotPath = \"screenshots\";\n\n  this.webdriver = webdriver;\n  this.driver = driver;\n\n  if (!fs.existsSync(screenshotPath)) {\n    fs.mkdirSync(screenshotPath);\n  }\n\n  this.waitForCss = function(cssLocator, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n    return driver.wait(until.elementLocated({\n      css: cssLocator\n    }), waitTimeout);\n  };\n\n  this.waitForXpath = function(xpath, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      until.elementLocated(\n        webdriver.By.xpath(xpath)), waitTimeout\n    );\n  }\n\n  this.waitForTagName = function(tagName, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      until.elementLocated(\n        webdriver.By.tagName(tagName)), waitTimeout\n    );\n  };\n\n  this.waitForTagNames = function(tagName, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      driver.findElements(webdriver.By.tagName(tagName), waitTimeout)\n    );\n  }\n\n  this.waitForId = function(idLocator, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n    return driver.wait(until.elementLocated({\n      id: idLocator\n    }), waitTimeout);\n  };\n\n  this.type = function(id, word) {\n    return driver.findElement({\n        id: id\n      })\n      .sendKeys(word);\n  }\n\n  this.click = function(id) {\n    return driver.wait(until.elementLocated({\n      id: id\n    }), defaultTimeout).then(function(response) {\n      return response.click();\n    })\n  }\n\n};\n\nmodule.exports.World = World;\nmodule.exports.getDriver = getDriver;\n\n\n\nTestes\n\n\nFinalmente com todos os testes prontos configurados, podemos come\u00e7ar a desenvolver os cases de testes, os quais se encontram nos arquivos .feature.\n\n\ngpp_mds.feature\n\n\nFeature: Search google feature\n  In order to see if the company in github is big\n  As a student\n  I want be able to find it on google\n\nScenario: Found it\n  Given I am in googles page\n  When I type gppmds\n  When I click search button\n  Then I should see https://github.com/fga-gpp-mds\n\n\n\nCommom_steps.js\n\n\nAgora \u00e9 necess\u00e1rio desenvolver os steps, para que o cucumberJS possa identificar qual a tarefa que deve ser realizada a cada linha do \nScenario\n.\n\n\nvar expect = require('chai').expect;\nvar webdriver = require('selenium-webdriver')\nvar until = webdriver.until;\n\nvar commom_steps = function() {\n  this.World = require('../support/world.js').World;\n\n  /****************************************************************************\n   ********************************* GIVEN *************************************\n   ****************************************************************************/\n  this.Given(/^I am in googles page$/, function() {\n    return this.driver.get('https://www.google.com');\n  });\n\n  /****************************************************************************\n   ********************************* WHEN **************************************\n   ****************************************************************************/\n  this.When(/^I type (.+)$/, function(word) {\n    var type = this.type;\n    return this.waitForId('lst-ib').then(function(response) {\n      type('lst-ib', word);\n    })\n  });\n\n  /****************************************************************************\n   ********************************* THEN *************************************\n   ****************************************************************************/\n  this.Then(/I should see (.+)$/, function(text) {\n    var driver = this.driver;\n\n    return driver.sleep(1000).then(function() {\n      return driver.findElement(webdriver.By.tagName(\"body\")).getAttribute(\"innerHTML\").then(function(html) {\n        if (html.lastIndexOf(text) \n 0) {\n          // nothing to do.\n        } else {\n          throw (new Error(\"Texto \" + text + \" esperado por\u00e9m n\u00e3o encontrado\"));\n        }\n      })\n    });\n  });\n};\n\nmodule.exports = commom_steps;\n\n\n\nExecutando\n\n\nFinalmente poderemos executar nossos testes, e para isso \u00e9 s\u00f3 executar o comando:\n\n\ngulp cucumber\n\n\nEnt\u00e3o o CucumberJS ir\u00e1 entrar na pasta e executar todas as features marcadas =D", 
            "title": "Teste Automatizado Cucumber JS"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#bdd-com-o-cucumber-em-javascript", 
            "text": "", 
            "title": "BDD com o cucumber em JavaScript"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#objetivo", 
            "text": "Este documento tem como objetivo principal criar um tutorial b\u00e1sico sobre o cucumberJS, ferramenta feita para desenvolvimento utilizando BDD ( Behaviour Driven Development ) em javascript.", 
            "title": "Objetivo"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#introducao", 
            "text": "Controlar se todos os crit\u00e9rios de aceita\u00e7\u00e3o de um sistema foram cumpridos nem sempre \u00e9 uma tarefa f\u00e1cil, e para simplificar esta tarefa, o BDD foi criado.\nNeste tipo de teste o sistema \u00e9 testado como um todo, sem considerar diferen\u00e7as entre servidor e cliente, ou at\u00e9 mesmo banco de dados, garantindo assim que a funcionalidade como um todo funciona, por\u00e9m nunca garantindo que ao encontrar um erro, torne mais f\u00e1cil o  debug .", 
            "title": "Introdu\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#objetivo-do-teste", 
            "text": "O teste de exemplo para este tutorial ser\u00e1 a funcionalidade do google de busca por um nome, sendo o caso de teste a busca da frase GPP/MDS e verificar se o github da disciplina \u00e9 apresentado", 
            "title": "Objetivo do teste"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#instalacao", 
            "text": "", 
            "title": "Instala\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#pre-requisitos", 
            "text": "npm", 
            "title": "Pr\u00e9 requisitos:"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#preparacao-do-teste", 
            "text": "npm init  Ser\u00e3o apresentadas v\u00e1rias perguntas, aperte enter em todas =D.  npm install --save-dev cucumber cucumberjs-chromedriver selenium-webdriver  npm install -g gulp", 
            "title": "Prepara\u00e7\u00e3o do teste"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#configuracao-dos-testes", 
            "text": "", 
            "title": "Configura\u00e7\u00e3o dos testes"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#estrutura-de-arquivos", 
            "text": "Os arquivos devem estar disponibilizados da seguinte forma:  raiz \n|- package.json\n|- gulpfile.js\n|- tests  _ |- features   _ |- .feature  _ _|-step definitions  _ _ _|-\\ _steps_.js  _ _|-support  _ _ _ _|-env.js  _ _ _|-hook.js  _ _ _|-world.js", 
            "title": "Estrutura de arquivos"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#gulpfilejs", 
            "text": "var gulp = require('gulp');\nvar runSequence = require('run-sequence').use(gulp);\nvar cucumber = require('gulp-cucumber');\n\ngulp.task('cucumber', function() {\n\n  var file = \"*\";\n  if (process.argv.length  = 4) {\n    file = process.argv[3].replace(/-+/, \"\");\n  }\n\n  return gulp.src('./tests/features/' + file).pipe(cucumber({\n    'steps': './tests/features/step_definitions/commom_steps.js',\n    'support': './tests/features/support/*.js'\n  }))\n})", 
            "title": "Gulpfile.js"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#envjs", 
            "text": "'use strict';\n\nvar configure = function() {\n  this.setDefaultTimeout(60 * 1000);\n};\n\nmodule.exports = configure;", 
            "title": "Env.js"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#hooksjs", 
            "text": "'use strict';\n\nvar driver = require('./world.js').getDriver();\nvar fs = require('fs');\nvar path = require('path');\nvar sanitize = require(\"sanitize-filename\");\n\nvar myHooks = function() {\n\n  this.After(function(scenario) {\n    if (scenario.isFailed()) {\n      this.driver.takeScreenshot().then(function(data) {\n        var base64Data = data.replace(/^data:image\\/png;base64,/, \"\");\n        fs.writeFile(path.join('screenshots', sanitize(scenario.getName() + \".png\").replace(/ /g, \"_\")), base64Data, 'base64', function(err) {\n          if (err) console.log(err);\n        });\n      });\n    }\n    return this.driver.manage().deleteAllCookies();\n  });\n\n  this.registerHandler('AfterFeatures', function(event) {\n    return driver.quit();\n  });\n\n};\n\nmodule.exports = myHooks;", 
            "title": "Hooks.js"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#worldjs", 
            "text": "'use strict';\n\nvar fs = require('fs');\nvar webdriver = require('selenium-webdriver');\nvar platform = process.env.PLATFORM || \"CHROME\";\nvar until = webdriver.until;\n\nvar buildChromeDriver = function() {\n  return new webdriver.Builder().\n  withCapabilities(webdriver.Capabilities.chrome()).\n  build();\n};\n\nvar buildFirefoxDriver = function() {\n  return new webdriver.Builder().\n  withCapabilities(webdriver.Capabilities.firefox()).\n  build();\n};\n\nswitch (platform) {\n  case 'FIREFOX':\n    var driver = buildFirefoxDriver();\n    break;\n  default:\n    var driver = buildChromeDriver();\n}\n\nvar getDriver = function() {\n  return driver;\n};\n\nvar World = function World() {\n\n  var defaultTimeout = 5000;\n  var screenshotPath = \"screenshots\";\n\n  this.webdriver = webdriver;\n  this.driver = driver;\n\n  if (!fs.existsSync(screenshotPath)) {\n    fs.mkdirSync(screenshotPath);\n  }\n\n  this.waitForCss = function(cssLocator, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n    return driver.wait(until.elementLocated({\n      css: cssLocator\n    }), waitTimeout);\n  };\n\n  this.waitForXpath = function(xpath, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      until.elementLocated(\n        webdriver.By.xpath(xpath)), waitTimeout\n    );\n  }\n\n  this.waitForTagName = function(tagName, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      until.elementLocated(\n        webdriver.By.tagName(tagName)), waitTimeout\n    );\n  };\n\n  this.waitForTagNames = function(tagName, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n\n    return driver.wait(\n      driver.findElements(webdriver.By.tagName(tagName), waitTimeout)\n    );\n  }\n\n  this.waitForId = function(idLocator, timeout) {\n    var waitTimeout = timeout || defaultTimeout;\n    return driver.wait(until.elementLocated({\n      id: idLocator\n    }), waitTimeout);\n  };\n\n  this.type = function(id, word) {\n    return driver.findElement({\n        id: id\n      })\n      .sendKeys(word);\n  }\n\n  this.click = function(id) {\n    return driver.wait(until.elementLocated({\n      id: id\n    }), defaultTimeout).then(function(response) {\n      return response.click();\n    })\n  }\n\n};\n\nmodule.exports.World = World;\nmodule.exports.getDriver = getDriver;", 
            "title": "World.js"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#testes", 
            "text": "Finalmente com todos os testes prontos configurados, podemos come\u00e7ar a desenvolver os cases de testes, os quais se encontram nos arquivos .feature.", 
            "title": "Testes"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#gpp_mdsfeature", 
            "text": "Feature: Search google feature\n  In order to see if the company in github is big\n  As a student\n  I want be able to find it on google\n\nScenario: Found it\n  Given I am in googles page\n  When I type gppmds\n  When I click search button\n  Then I should see https://github.com/fga-gpp-mds", 
            "title": "gpp_mds.feature"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#commom_stepsjs", 
            "text": "Agora \u00e9 necess\u00e1rio desenvolver os steps, para que o cucumberJS possa identificar qual a tarefa que deve ser realizada a cada linha do  Scenario .  var expect = require('chai').expect;\nvar webdriver = require('selenium-webdriver')\nvar until = webdriver.until;\n\nvar commom_steps = function() {\n  this.World = require('../support/world.js').World;\n\n  /****************************************************************************\n   ********************************* GIVEN *************************************\n   ****************************************************************************/\n  this.Given(/^I am in googles page$/, function() {\n    return this.driver.get('https://www.google.com');\n  });\n\n  /****************************************************************************\n   ********************************* WHEN **************************************\n   ****************************************************************************/\n  this.When(/^I type (.+)$/, function(word) {\n    var type = this.type;\n    return this.waitForId('lst-ib').then(function(response) {\n      type('lst-ib', word);\n    })\n  });\n\n  /****************************************************************************\n   ********************************* THEN *************************************\n   ****************************************************************************/\n  this.Then(/I should see (.+)$/, function(text) {\n    var driver = this.driver;\n\n    return driver.sleep(1000).then(function() {\n      return driver.findElement(webdriver.By.tagName(\"body\")).getAttribute(\"innerHTML\").then(function(html) {\n        if (html.lastIndexOf(text)   0) {\n          // nothing to do.\n        } else {\n          throw (new Error(\"Texto \" + text + \" esperado por\u00e9m n\u00e3o encontrado\"));\n        }\n      })\n    });\n  });\n};\n\nmodule.exports = commom_steps;", 
            "title": "Commom_steps.js"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-JS/#executando", 
            "text": "Finalmente poderemos executar nossos testes, e para isso \u00e9 s\u00f3 executar o comando:  gulp cucumber  Ent\u00e3o o CucumberJS ir\u00e1 entrar na pasta e executar todas as features marcadas =D", 
            "title": "Executando"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-Rails/", 
            "text": "Teste de Aceita\u00e7\u00e3o\n\n\nO teste de aceita\u00e7\u00e3o \u00e9 aplicado no desenvolvimento de \nsoftware\n, sendo uma abordagem que  enxerga o sistema como uma caixa preta, e o principal objetivo do mesmo \u00e9 a verifica\u00e7\u00e3o das funcionalidades em rela\u00e7\u00e3o aos requisitos e funcionalidades originais do projeto, verificando assim se elas atendem as necessidade mais importantes dos usu\u00e1rios.\n    Para o teste de aceita\u00e7\u00e3o existem tr\u00eas estrat\u00e9gias comuns para a implementa\u00e7\u00e3o de um teste, no qual s\u00e3o elas:\n\n\n\n\nTeste de Aceita\u00e7\u00e3o Formal: esse teste \u00e9 um processo altamente gerenciado, no qual costuma a ser uma extens\u00e3o de teste do sistema. Esses testes s\u00e3o planejados e projetados com um cuidado e um n\u00edvel de detalhamento do sistema.  Os casos de teste devem ser um subconjunto dos realizados no teste do sistema. O teste de informa\u00e7\u00e3o formal \u00e9 totalmente automatizado.\n\n\n\n\nOs benef\u00edcios dessa forma de teste s\u00e3o:\n\n\n- O progresso dos testes podem serem monitorados e medidos;\n\n- Crit\u00e9rio de aceitabilidade \u00e9 conhecido;\n\n- Os testes podem ser automatizados.\n\n\n\nAs desvantagens s\u00e3o:\n\n\n- Teste n\u00e3o revela os defeitos subjetivos no software;\n\n- Testes podem se tornar uma nova implementa\u00e7\u00e3o dos testes do sistema.\n\n\n\n\n\nTeste de Aceita\u00e7\u00e3o Informal: o procedimento para a execu\u00e7\u00e3o do teste n\u00e3o s\u00e3o definidos com um rigor como \u00e9 feito no formal. As fun\u00e7\u00f5es e as tarefas de neg\u00f3cios s\u00e3o identificadas e documentadas, por\u00e9m n\u00e3o h\u00e1 caso de testes espec\u00edficos para serem seguidos. Esse teste n\u00e3o \u00e9 t\u00e3o controlado como o formal, contudo \u00e9 mais subjetivo.\n\n\n\n\nBenef\u00edcios do teste informal:\n\n\n- S\u00e3o revelados defeitos subjetivos;\n\n- A fun\u00e7\u00e3o e recurso que ser\u00e3o testados s\u00e3o conhecidos.\n\n\n\nDesvantagens:\n\n\n- N\u00e3o h\u00e1 controle dos casos de teste que s\u00e3o usados;\n\n- Os teste de aceita\u00e7\u00e3o podem ser limitados.\n\n\n\n\n\nTeste Beta:  \u00e9 o que menos pode ser controlado, no qual a quantidade de detalhes, os dados de abordagem s\u00e3o de responsabilidade do testados individual, assim cada um tem que identificar os pr\u00f3prios crit\u00e9rios que levar\u00e3o se ele ser\u00e1 aceito ou negado no seu sistema atual. Esse teste \u00e9 implementado pelos usu\u00e1rios finais.\n\n\n\n\nBenef\u00edcios do teste beta:\n\n\n- Teste implementado por usu\u00e1rios finais;\n\n- Possibilidade de recursos de teste;\n\n- Aumenta a satisfa\u00e7\u00e3o do cliente.\n\n\n\nAs desvantagens:\n\n\n- Nem todas as fun\u00e7\u00f5es e recursos podem ser testados;\n\n- Dificuldade de medir o progresso do teste.\n\n\n\nExecu\u00e7\u00e3o\n\n\nPara iniciar os testes, deve-se criar o arquivo contendo os testes a serem realizados. O nome do arquivo deve ser NomeDaFuncionalidadeTestada.feature. Deve necessariamente terminar em \u201c.feature\u201d. Esse arquivo conter\u00e1 os cen\u00e1rios de teste escritos, estruturando-se em:\n\n\nFeature\n: (nome do arquivo. Exemplo do projeto: registration_member)\n\n\nBackground\n (opcional): \u00c9 uma forma de setup. De forma geral, o que estiver contido no background rodar\u00e1 antes de executar cada um dos outros testes, de forma a criar condi\u00e7\u00f5es espec\u00edficas.\n\n\nScenario\n: \u00c9 o teste em si. Consiste de v\u00e1rios steps (passos) que indicam a ocorr\u00eancia de algo no sistema. Se os passos s\u00e3o seguidos corretamente, o teste passa e a funcionalidade est\u00e1 de acordo com o escrito.\n\n\nComo exemplo de um arquivo \u201c.feature\u201d, pode-se mostrar parte de um teste de aceita\u00e7\u00e3o do projeto Owla, chamado \u201cregistration_member.feature\u201d:\n\n\n      Feature: registration_member\n\n  Scenario: a user should be able to registrate\n        Given I go to /\n        When I click \"Register yourself\"\n        Then I should be in \"/members/new\"\n        When I write \"Gabriel Alves\" on \"member_name\"\n        When I write \"gabriel@gmail.com\" on \"member_email\"\n        When I write \"gabi\" on \"member_alias\"\n        When I write \"testtest\" on \"member_password\"\n        When I write \"testtest\" on \"member[password_confirmation]\"\n        When I click button \"Register\"\n        Then I should be in \"Gabriel Alves\" homepage\n        And the object with attribute \"name\" and value \"Gabriel Alves\" of \"member\" klass was created\n\n\n\nNesse teste, n\u00e3o h\u00e1 a presen\u00e7a de um background. Por\u00e9m, um \nbackground\n seria a mesma coisa de um cen\u00e1rio, sem a presen\u00e7a da descri\u00e7\u00e3o presente na linha do \nscenario\n. Por\u00e9m, apenas isso n\u00e3o \u00e9 suficiente para que o teste rode sem problemas. Cada um dos \nsteps\n deve ser definido em outro arquivo, para que o sistema saiba que a\u00e7\u00f5es devem ser chamadas para cada passo. Deve-se criar um arquivo de defini\u00e7\u00e3o de passos. No caso do projeto Owla, esse arquivo se chama web_steps.rb e est\u00e1 contido na pasta \nstep_definitions\n. Seu conte\u00fado \u00e9 o que se segue:\n\n\n      Given(/^I go to (.+)$/) do |path|\n       visit path\n      end\n\n      When(/^I click \"(.+)\"$/) do |link|\n       click_link(link)\n      end\n\n      When(/^I click button \"(.+)\"$/) do |link|\n        click_button(link)\n      end\n\n      Then(/^I should be in \"(.+)\"$/) do |page|\n        assert current_path == page\n      end\n\n      Then(/^I should be in \"(.+)\" homepage$/) do |object|\n        member = Member.find_by(name: object)\n        assert current_path == \"/members/#{member.id}/home\"\n      end\n\n      Then(/^I should be in \"(.+)\" edit$/) do |object|\n        member = Member.find_by(name: object)\n        assert current_path == \"/members/#{member.id}/home\"\n      end\n\n      When(/^I write \"(.+)\" on \"(.+)\"$/) do |value, field|\n        fill_in field, :with =\n value\n      end\n\n      Given(/^I have created \"(.+)\"$/) do |value|\n        member = Member.create(name: \"Victor Navarro\", email: value, alias: \"vivi\",\n        password: 'testtest', password_confirmation: 'testtest')\n      end\n\n      And(/^the object with attribute \"(.+)\" and value \"(.+)\" of \"(.+)\" klass was created$/) do |attribute, value, klass|\n        object = klass.capitalize.constantize.find_by(\"#{attribute}\": value)\n        assert klass.capitalize.constantize.last.id == object.id\n      end\n\n\n\nPercebe-se que, nesse arquivo, cont\u00e9m \u201cfrases\u201d com REGEX especiais que funcionam da seguinte forma: para cada step contido no arquivo de testes, o sistema procurar\u00e1 no arquivo de defini\u00e7\u00e3o de steps um com a mesma \u201cfrase\u201d de comando. L\u00e1, ele encontrar\u00e1 a frase e o que dentro da frase \u00e9 uma vari\u00e1vel, que deve ser pega do arquivo de testes. Ent\u00e3o, dentro do bloco de c\u00f3digo presente na defini\u00e7\u00e3o do step, ele implementar\u00e1 o que for especificado.\n    \u00c9 importante notar que h\u00e1 muitas fun\u00e7\u00f5es referentes a clicar em bot\u00f5es, acessar links e p\u00e1ginas diferentes para auxiliar o desenvolvedor na hora de criar os testes. Apenas a pesquisa pode mostrar todas as fun\u00e7\u00f5es, mas h\u00e1 sites que tentam fazer um resumo delas, como:\n\n\n               https://gist.github.com/zhengjia/428105", 
            "title": "Teste Automatizado Cucumber Rails"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-Rails/#teste-de-aceitacao", 
            "text": "O teste de aceita\u00e7\u00e3o \u00e9 aplicado no desenvolvimento de  software , sendo uma abordagem que  enxerga o sistema como uma caixa preta, e o principal objetivo do mesmo \u00e9 a verifica\u00e7\u00e3o das funcionalidades em rela\u00e7\u00e3o aos requisitos e funcionalidades originais do projeto, verificando assim se elas atendem as necessidade mais importantes dos usu\u00e1rios.\n    Para o teste de aceita\u00e7\u00e3o existem tr\u00eas estrat\u00e9gias comuns para a implementa\u00e7\u00e3o de um teste, no qual s\u00e3o elas:   Teste de Aceita\u00e7\u00e3o Formal: esse teste \u00e9 um processo altamente gerenciado, no qual costuma a ser uma extens\u00e3o de teste do sistema. Esses testes s\u00e3o planejados e projetados com um cuidado e um n\u00edvel de detalhamento do sistema.  Os casos de teste devem ser um subconjunto dos realizados no teste do sistema. O teste de informa\u00e7\u00e3o formal \u00e9 totalmente automatizado.   Os benef\u00edcios dessa forma de teste s\u00e3o:  - O progresso dos testes podem serem monitorados e medidos;\n\n- Crit\u00e9rio de aceitabilidade \u00e9 conhecido;\n\n- Os testes podem ser automatizados.  As desvantagens s\u00e3o:  - Teste n\u00e3o revela os defeitos subjetivos no software;\n\n- Testes podem se tornar uma nova implementa\u00e7\u00e3o dos testes do sistema.   Teste de Aceita\u00e7\u00e3o Informal: o procedimento para a execu\u00e7\u00e3o do teste n\u00e3o s\u00e3o definidos com um rigor como \u00e9 feito no formal. As fun\u00e7\u00f5es e as tarefas de neg\u00f3cios s\u00e3o identificadas e documentadas, por\u00e9m n\u00e3o h\u00e1 caso de testes espec\u00edficos para serem seguidos. Esse teste n\u00e3o \u00e9 t\u00e3o controlado como o formal, contudo \u00e9 mais subjetivo.   Benef\u00edcios do teste informal:  - S\u00e3o revelados defeitos subjetivos;\n\n- A fun\u00e7\u00e3o e recurso que ser\u00e3o testados s\u00e3o conhecidos.  Desvantagens:  - N\u00e3o h\u00e1 controle dos casos de teste que s\u00e3o usados;\n\n- Os teste de aceita\u00e7\u00e3o podem ser limitados.   Teste Beta:  \u00e9 o que menos pode ser controlado, no qual a quantidade de detalhes, os dados de abordagem s\u00e3o de responsabilidade do testados individual, assim cada um tem que identificar os pr\u00f3prios crit\u00e9rios que levar\u00e3o se ele ser\u00e1 aceito ou negado no seu sistema atual. Esse teste \u00e9 implementado pelos usu\u00e1rios finais.   Benef\u00edcios do teste beta:  - Teste implementado por usu\u00e1rios finais;\n\n- Possibilidade de recursos de teste;\n\n- Aumenta a satisfa\u00e7\u00e3o do cliente.  As desvantagens:  - Nem todas as fun\u00e7\u00f5es e recursos podem ser testados;\n\n- Dificuldade de medir o progresso do teste.", 
            "title": "Teste de Aceita\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-Cucumber-Rails/#execucao", 
            "text": "Para iniciar os testes, deve-se criar o arquivo contendo os testes a serem realizados. O nome do arquivo deve ser NomeDaFuncionalidadeTestada.feature. Deve necessariamente terminar em \u201c.feature\u201d. Esse arquivo conter\u00e1 os cen\u00e1rios de teste escritos, estruturando-se em:  Feature : (nome do arquivo. Exemplo do projeto: registration_member)  Background  (opcional): \u00c9 uma forma de setup. De forma geral, o que estiver contido no background rodar\u00e1 antes de executar cada um dos outros testes, de forma a criar condi\u00e7\u00f5es espec\u00edficas.  Scenario : \u00c9 o teste em si. Consiste de v\u00e1rios steps (passos) que indicam a ocorr\u00eancia de algo no sistema. Se os passos s\u00e3o seguidos corretamente, o teste passa e a funcionalidade est\u00e1 de acordo com o escrito.  Como exemplo de um arquivo \u201c.feature\u201d, pode-se mostrar parte de um teste de aceita\u00e7\u00e3o do projeto Owla, chamado \u201cregistration_member.feature\u201d:        Feature: registration_member\n\n  Scenario: a user should be able to registrate\n        Given I go to /\n        When I click \"Register yourself\"\n        Then I should be in \"/members/new\"\n        When I write \"Gabriel Alves\" on \"member_name\"\n        When I write \"gabriel@gmail.com\" on \"member_email\"\n        When I write \"gabi\" on \"member_alias\"\n        When I write \"testtest\" on \"member_password\"\n        When I write \"testtest\" on \"member[password_confirmation]\"\n        When I click button \"Register\"\n        Then I should be in \"Gabriel Alves\" homepage\n        And the object with attribute \"name\" and value \"Gabriel Alves\" of \"member\" klass was created  Nesse teste, n\u00e3o h\u00e1 a presen\u00e7a de um background. Por\u00e9m, um  background  seria a mesma coisa de um cen\u00e1rio, sem a presen\u00e7a da descri\u00e7\u00e3o presente na linha do  scenario . Por\u00e9m, apenas isso n\u00e3o \u00e9 suficiente para que o teste rode sem problemas. Cada um dos  steps  deve ser definido em outro arquivo, para que o sistema saiba que a\u00e7\u00f5es devem ser chamadas para cada passo. Deve-se criar um arquivo de defini\u00e7\u00e3o de passos. No caso do projeto Owla, esse arquivo se chama web_steps.rb e est\u00e1 contido na pasta  step_definitions . Seu conte\u00fado \u00e9 o que se segue:        Given(/^I go to (.+)$/) do |path|\n       visit path\n      end\n\n      When(/^I click \"(.+)\"$/) do |link|\n       click_link(link)\n      end\n\n      When(/^I click button \"(.+)\"$/) do |link|\n        click_button(link)\n      end\n\n      Then(/^I should be in \"(.+)\"$/) do |page|\n        assert current_path == page\n      end\n\n      Then(/^I should be in \"(.+)\" homepage$/) do |object|\n        member = Member.find_by(name: object)\n        assert current_path == \"/members/#{member.id}/home\"\n      end\n\n      Then(/^I should be in \"(.+)\" edit$/) do |object|\n        member = Member.find_by(name: object)\n        assert current_path == \"/members/#{member.id}/home\"\n      end\n\n      When(/^I write \"(.+)\" on \"(.+)\"$/) do |value, field|\n        fill_in field, :with =  value\n      end\n\n      Given(/^I have created \"(.+)\"$/) do |value|\n        member = Member.create(name: \"Victor Navarro\", email: value, alias: \"vivi\",\n        password: 'testtest', password_confirmation: 'testtest')\n      end\n\n      And(/^the object with attribute \"(.+)\" and value \"(.+)\" of \"(.+)\" klass was created$/) do |attribute, value, klass|\n        object = klass.capitalize.constantize.find_by(\"#{attribute}\": value)\n        assert klass.capitalize.constantize.last.id == object.id\n      end  Percebe-se que, nesse arquivo, cont\u00e9m \u201cfrases\u201d com REGEX especiais que funcionam da seguinte forma: para cada step contido no arquivo de testes, o sistema procurar\u00e1 no arquivo de defini\u00e7\u00e3o de steps um com a mesma \u201cfrase\u201d de comando. L\u00e1, ele encontrar\u00e1 a frase e o que dentro da frase \u00e9 uma vari\u00e1vel, que deve ser pega do arquivo de testes. Ent\u00e3o, dentro do bloco de c\u00f3digo presente na defini\u00e7\u00e3o do step, ele implementar\u00e1 o que for especificado.\n    \u00c9 importante notar que h\u00e1 muitas fun\u00e7\u00f5es referentes a clicar em bot\u00f5es, acessar links e p\u00e1ginas diferentes para auxiliar o desenvolvedor na hora de criar os testes. Apenas a pesquisa pode mostrar todas as fun\u00e7\u00f5es, mas h\u00e1 sites que tentam fazer um resumo delas, como:                 https://gist.github.com/zhengjia/428105", 
            "title": "Execu\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/", 
            "text": "Teste Automatizado\n\n\nIntrodu\u00e7\u00e3o\n\n\n O controle da qualidade em um produto de \nsoftware\n n\u00e3o \u00e9 f\u00e1cil de ser controlado, visto a complexidade atribu\u00edda a certos produtos de \nsoftware\n, sendo necess\u00e1rio sempre atender a vis\u00e3o do cliente ao \nsoftware\n. Os testes unit\u00e1rios testam parte do c\u00f3digo, normalmente testam fun\u00e7\u00f5es separadamente. O teste automatizado ou teste aceita\u00e7\u00e3o realiza o teste no \nsoftware\n na vis\u00e3o do cliente, concluindo as etapas realizadas pelo usu\u00e1rio.\n\n\n\nO que o teste ir\u00e1 fazer ?\n\n\nObjetivo do teste:\n Realizar busca de uma mat\u00e9ria em um site. \n\n\nSite:\n Wikipedia  \n\n\nObjetivo principal:\n Achar o artigo relacionado \u00e0 testes em geral    \n\n\nPassos:\n\n Abrir o site.\n\n Colocar no campo de buscas o valor: \u201cTestes\u201d. \n\n Pressionar o bot\u00e3o de pesquisa.\n\n Verificar os dados da p\u00e1gina.\n\n\nFerramenta\n\n\nA ferramenta escolhida \u00e9 a \u201cSelenium IDE\u201d que \u00e9 uma ferramenta que funciona diretamente no Firefox na forma de plugin. Os motivos de escolha dessa ferramenta s\u00e3o:\n\n Facilidade de uso.\n\n Facilidade de exportar c\u00f3digo de teste para outras linguagens.\n\n Op\u00e7\u00e3o de gravar o teste.\n\n Executado diretamente no navegador.\n\n\nInstala\u00e7\u00e3o\n\n\n Para a instala\u00e7\u00e3o do Selenium IDE \u00e9 necess\u00e1rio ter o Firefox instalado na m\u00e1quina, se n\u00e3o j\u00e1 o tiver fa\u00e7a o download e instale-o pelo \nlink\n: \n\n Download do Firefox.\n\n\n\n Ap\u00f3s ter instalado o Firefox, \u00e9 necess\u00e1rio instalar o \nplugin\n do Selenium IDE pelo \nlink\n: \n\n Add-on Selenium IDE\n\n\n\n\n\n\n\n\nClique no bot\u00e3o Add to Firefox\n      \n\n\nAp\u00f3s reiniciar o navegador pressione: \n\n\n\n\nCtrl + Alt  + S \nEste comando ir\u00e1 iniciar o plugin \nSelenium IDE\n.\n\n\n\n\nA seguinte janela dever\u00e1 aparecer:   \n\n\n\n\nRealizando o caso de teste\n\n\n No campo \u201cURL Base\u201d digite: \nhttp://www.wikipedia.org\n.   \nSelecione o comando open com alvo barra se j\u00e1 n\u00e3o estiver na tabela do teste.\n\n\n\n\n\n Pressione com o bot\u00e3o direito na aba de test case o primeiro teste. Clique em propriedades. Troque o nome do caso de teste por: \n\u201cPesquisa no Wikipedia\u201d\n.\n\n\n Agora que j\u00e1 temos o comando open de abrir a p\u00e1gina, precisamos colocar o que queremos pesquisar no campo de busca.\nPara isso na aba de comandos do \nSelenium IDE\n selecione o do tipo \ntype\n. Pressione o bot\u00e3o \nSelect\n e com a p\u00e1gina do \nWikipedia\n aberta clique no campo de busca. Agora vamos colocar o valor que queremos procurar, Digite no campo valor: \u201cTESTE\u201d. \n\n\n Por fim, precisamos pressionar o bot\u00e3o de pesquisa para pesquisar efetivamente. Em comando coloque clickAndWait, pressione \nSelect\n no alvo e clique em cima do bot\u00e3o de pesquisa na p\u00e1gina do \nWikipedia\n.\n\n\n Ap\u00f3s isso precisamos verificar se a p\u00e1gina carregada corresponde a p\u00e1gina que queremos, assim teremos certeza que o teste passou. Para isso coloque em comando assertText, em alvo clique em \nSelect\n e pressione no T\u00edtulo da p\u00e1gina, e no valor coloque Teste.\n\n\n A p\u00e1gina do \nSelenium IDE\n fica da seguinte forma:\n\n\n![Selenium-IDE-Teste-Pronto.png](http://s14.postimg.org/fe6q0mn3l/Selenium_IDE_Teste_Pronto.png)\n\nAp\u00f3s isso \u00e9 necess\u00e1rio apenas apertar \n\u201cplay\u201d\n para todos os casos de teste.\nA p\u00e1gina ser\u00e1 preenchida automaticamente e o resultado ser\u00e1 exibido e o teste conclu\u00eddo.\n\n## C\u00f3digo do teste\n\nC\u00f3digo gerado no tutorial, para usa-lo basta clicar na aba \u201cc\u00f3digo fonte\u201d e colar esse c\u00f3digo l\u00e1.\n\n> [C\u00f3digo do teste](http://textuploader.com/dsc25)", 
            "title": "Teste Automatizado com Selenium IDE"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#teste-automatizado", 
            "text": "", 
            "title": "Teste Automatizado"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#introducao", 
            "text": "O controle da qualidade em um produto de  software  n\u00e3o \u00e9 f\u00e1cil de ser controlado, visto a complexidade atribu\u00edda a certos produtos de  software , sendo necess\u00e1rio sempre atender a vis\u00e3o do cliente ao  software . Os testes unit\u00e1rios testam parte do c\u00f3digo, normalmente testam fun\u00e7\u00f5es separadamente. O teste automatizado ou teste aceita\u00e7\u00e3o realiza o teste no  software  na vis\u00e3o do cliente, concluindo as etapas realizadas pelo usu\u00e1rio.", 
            "title": "Introdu\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#o-que-o-teste-ira-fazer", 
            "text": "Objetivo do teste:  Realizar busca de uma mat\u00e9ria em um site.   Site:  Wikipedia    Objetivo principal:  Achar o artigo relacionado \u00e0 testes em geral      Passos:  Abrir o site.  Colocar no campo de buscas o valor: \u201cTestes\u201d.   Pressionar o bot\u00e3o de pesquisa.  Verificar os dados da p\u00e1gina.", 
            "title": "O que o teste ir\u00e1 fazer ?"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#ferramenta", 
            "text": "A ferramenta escolhida \u00e9 a \u201cSelenium IDE\u201d que \u00e9 uma ferramenta que funciona diretamente no Firefox na forma de plugin. Os motivos de escolha dessa ferramenta s\u00e3o:  Facilidade de uso.  Facilidade de exportar c\u00f3digo de teste para outras linguagens.  Op\u00e7\u00e3o de gravar o teste.  Executado diretamente no navegador.", 
            "title": "Ferramenta"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#instalacao", 
            "text": "Para a instala\u00e7\u00e3o do Selenium IDE \u00e9 necess\u00e1rio ter o Firefox instalado na m\u00e1quina, se n\u00e3o j\u00e1 o tiver fa\u00e7a o download e instale-o pelo  link :   Download do Firefox.   Ap\u00f3s ter instalado o Firefox, \u00e9 necess\u00e1rio instalar o  plugin  do Selenium IDE pelo  link :   Add-on Selenium IDE    Clique no bot\u00e3o Add to Firefox         Ap\u00f3s reiniciar o navegador pressione:    Ctrl + Alt  + S \nEste comando ir\u00e1 iniciar o plugin  Selenium IDE .   A seguinte janela dever\u00e1 aparecer:", 
            "title": "Instala\u00e7\u00e3o"
        }, 
        {
            "location": "/Teste-Automatizado-com-Selenium-IDE/#realizando-o-caso-de-teste", 
            "text": "No campo \u201cURL Base\u201d digite:  http://www.wikipedia.org .   \nSelecione o comando open com alvo barra se j\u00e1 n\u00e3o estiver na tabela do teste.    Pressione com o bot\u00e3o direito na aba de test case o primeiro teste. Clique em propriedades. Troque o nome do caso de teste por:  \u201cPesquisa no Wikipedia\u201d .  Agora que j\u00e1 temos o comando open de abrir a p\u00e1gina, precisamos colocar o que queremos pesquisar no campo de busca.\nPara isso na aba de comandos do  Selenium IDE  selecione o do tipo  type . Pressione o bot\u00e3o  Select  e com a p\u00e1gina do  Wikipedia  aberta clique no campo de busca. Agora vamos colocar o valor que queremos procurar, Digite no campo valor: \u201cTESTE\u201d.   Por fim, precisamos pressionar o bot\u00e3o de pesquisa para pesquisar efetivamente. Em comando coloque clickAndWait, pressione  Select  no alvo e clique em cima do bot\u00e3o de pesquisa na p\u00e1gina do  Wikipedia .  Ap\u00f3s isso precisamos verificar se a p\u00e1gina carregada corresponde a p\u00e1gina que queremos, assim teremos certeza que o teste passou. Para isso coloque em comando assertText, em alvo clique em  Select  e pressione no T\u00edtulo da p\u00e1gina, e no valor coloque Teste.  A p\u00e1gina do  Selenium IDE  fica da seguinte forma: \n\n![Selenium-IDE-Teste-Pronto.png](http://s14.postimg.org/fe6q0mn3l/Selenium_IDE_Teste_Pronto.png)\n\nAp\u00f3s isso \u00e9 necess\u00e1rio apenas apertar  \u201cplay\u201d  para todos os casos de teste.\nA p\u00e1gina ser\u00e1 preenchida automaticamente e o resultado ser\u00e1 exibido e o teste conclu\u00eddo.\n\n## C\u00f3digo do teste\n\nC\u00f3digo gerado no tutorial, para usa-lo basta clicar na aba \u201cc\u00f3digo fonte\u201d e colar esse c\u00f3digo l\u00e1.\n\n> [C\u00f3digo do teste](http://textuploader.com/dsc25)", 
            "title": "Realizando o caso de teste"
        }
    ]
}